<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>floatc.zip</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-06-06T11:23:46.130Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>floatc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>php高级</title>
    <link href="http://example.com/2021/06/05/php%E9%AB%98%E7%BA%A7/"/>
    <id>http://example.com/2021/06/05/php%E9%AB%98%E7%BA%A7/</id>
    <published>2021-06-05T09:32:14.000Z</published>
    <updated>2021-06-06T11:23:46.130Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>面向对象开发方法将面向对象的思想应用于软件开发过程中，指导开发活动，是建立在对象”概念基础上的方法学，简称OO( Object-Oriented)方法。面向对象方法的本质是主张参照人们认识一个现实系统的方法，完成分析、设计与实现一个软件系统，提倡用人类在现实生活中常用的思维方法来认识和理解描述客观事物，强调最终建立的系统能映射冋题域，使得系统中的对象，以及对象之间的关系能够如实地反映问题域中固有的事物及其关系。<br><font color=grey><em>实在不想多写了，老生常谈的问题</em></font>  </p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p>通过<code>class</code>关键字来定义类<br>在这里定义了两个成员变量<code>$age</code>、<code>$name</code>和一个方法<code>eat()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;eating&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">```  </span><br><span class="line">通过`<span class="keyword">new</span>`关键字来创建对象,也可以通过字符串赋值来创建对象  </span><br><span class="line">```php</span><br><span class="line"><span class="comment">//第一种创建对象的方法</span></span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="comment">//第二种创建对象的阴间方法</span></span><br><span class="line"><span class="variable">$name</span> = <span class="string">&#x27;person&#x27;</span>;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> <span class="variable">$name</span>();</span><br></pre></td></tr></table></figure><p>在php中是通过<code>-&gt;</code>符号来访问对象的成员变量或方法的,需要注意的是访问的成员变量和方法不需要加<code>$</code>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line">var_dump(<span class="variable">$zr</span>-&gt;age);<span class="comment">//null</span></span><br><span class="line">var_dump(<span class="variable">$zr</span>-&gt;eat());<span class="comment">//eating</span></span><br></pre></td></tr></table></figure><p>对象也可以直接通过<code>=</code>来进行赋值  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="variable">$zr</span>-&gt;age = <span class="number">19</span>;</span><br><span class="line">var_dump(<span class="variable">$zr</span>-&gt;age);<span class="comment">//int 19</span></span><br></pre></td></tr></table></figure><p>也可以在创建类是就对成员变量进行赋值,不过这种写法过于死板，直接指定了成员变量的值  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;eating&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  public &#x27;age&#x27; =&gt; int 19</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;zr&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><p>从上面对类的赋值也能够看到，无论是在类中，还是在类实例化之后进行对象的赋值都是十分不方便的，所以我们采用<strong>构造方法</strong>来对类进行初始化</p><h4 id="基本语法-1"><a href="#基本语法-1" class="headerlink" title="基本语法"></a>基本语法</h4><p>声明构造方法需要使用<code>__construct</code>关键字来进行修饰,本质上是个<a href="#%E5%B8%B8%E7%94%A8%E7%9A%84%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95">魔术方法</a>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;构造方法调用&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">//构造方法调用</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  public &#x27;age&#x27; =&gt; int 19</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;zr&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造方法也是可以带参数的，这使得对象的实例化更加灵活<br>这里的<code>$this</code>关键字代指的就是当前对象，即这里的person对象  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person(<span class="string">&#x27;zr&#x27;</span>,<span class="number">20</span>);</span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  public &#x27;age&#x27; =&gt; int 20</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;zr&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有了这个<code>$this</code>关键字，我们甚至可以在成员方法中调用另一个成员方法  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">first</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;第一步&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">second</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;first();</span><br><span class="line">        <span class="comment">//调用了first()方法</span></span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;第二部&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="variable">$zr</span>-&gt;second();<span class="comment">//第一步第二部</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><h4 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h4><p>继承是面向对象当中的一个概念，与多态、封装共为面向对象的三个基本特征。继承可以使得子类具有父类的属性和方法或者重新定义、追加属性和方法等<br><strong>php是单继承！</strong>  </p><h4 id="基本语法-2"><a href="#基本语法-2" class="headerlink" title="基本语法"></a>基本语法</h4><p>继承采用<code>extends</code>关键字，子类继承了父类可以调用父类的方法  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;人类&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eating</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;人类都会吃饭&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zr</span> <span class="keyword">extends</span> <span class="title">human</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> zr();</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$zr</span>-&gt;name.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//人类</span></span><br><span class="line"><span class="variable">$zr</span>-&gt;eating();<span class="comment">//人类都会吃饭</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然子类也可以拥有属于自己特有的成员变量和方法，当子类成员变量或方法于父类名字相同时，子类的成员变量和方法将会覆盖父类的成员变量和方法 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;人类&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eating</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;人类都会吃饭&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">coding</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;但是并不是所有的人类都会敲代码&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zr</span> <span class="keyword">extends</span> <span class="title">human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">coding</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;zr不仅继承了human还顺手敲了个代码&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> zr();</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$zr</span>-&gt;name).<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$zr</span>-&gt;eating();</span><br><span class="line"><span class="variable">$zr</span>-&gt;coding();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">zr</span></span><br><span class="line"><span class="comment">人类都会吃饭</span></span><br><span class="line"><span class="comment">zr不仅继承了human还顺手敲了个代码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h3><table><thead><tr><th align="center">修饰符</th><th align="left">外部访问</th><th align="left">子类继承</th></tr></thead><tbody><tr><td align="center">public</td><td align="left">允许</td><td align="left">允许</td></tr><tr><td align="center">protected</td><td align="left">不允许</td><td align="left">允许</td></tr><tr><td align="center">private</td><td align="left">不允许</td><td align="left">不允许</td></tr></tbody></table><p>访问修饰符对方法和成员变量的修饰同样适用<br><code>public</code>:公共权限，在类的内外都可以直接访问到  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span>,<span class="variable">$height</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;height = <span class="variable">$height</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person(<span class="string">&#x27;zr&#x27;</span>,<span class="number">19</span>,<span class="number">165</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;name;<span class="comment">//可以访问</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;age;<span class="comment">//无法访问</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;height;<span class="comment">//无法访问</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">```  </span><br><span class="line">`<span class="keyword">protected</span>`:受保护,只能在在本类中或许子类中访问到  </span><br><span class="line">```php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$person</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;name;<span class="comment">//可以访问</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;age;<span class="comment">//无法访问</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;height;<span class="comment">//无法访问</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zr</span> <span class="keyword">extends</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;name.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//可以访问</span></span><br><span class="line">        <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;age.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//可以访问</span></span><br><span class="line">        <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;height  .<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//无法访问</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>private</code>：私有,不能再类的外部访问到，同时被改属性修饰的成员变量或方法都不能被继承  </p><h3 id="重写"><a href="#重写" class="headerlink" title="重写"></a>重写</h3><h4 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h4><p>重写又称为覆盖，就是将从父类继承下来的属性或方法重新定义再写一遍。子类覆盖父类的方法，虽然可以去调用父类的同名方法去完成一定的工作，但不是必须的。也有可能父类的该方法所执行的结果并不适合子类，此时子类就得重新覆盖这个方法，填充属于自己使用的方法</p><h4 id="完全重写"><a href="#完全重写" class="headerlink" title="完全重写"></a>完全重写</h4><p>完全重写适用于子类把父类方法继承之后全部重写的情况<br>在下面这个例子中子类继承了父类中的<code>jump()</code>并且重写了这个方法    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">jump</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;这个父类能跳三米&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> <span class="keyword">extends</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">jump</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;但是这个子类只能跳一米&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$father</span> = <span class="keyword">new</span> father();</span><br><span class="line"><span class="variable">$father</span>-&gt;jump();<span class="comment">//这个父类能跳三米</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$son</span> = <span class="keyword">new</span> son();</span><br><span class="line"><span class="variable">$son</span>-&gt;jump();<span class="comment">//但是这个子类只能跳一米</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="部分重写"><a href="#部分重写" class="headerlink" title="部分重写"></a>部分重写</h4><p>部分重写适用于要保留父类方法的一部分，同时添加或属于子类的特有方法<br>部分重写使用<code>parent::</code>关键字<br>在这个案例之中子类继承了父类的work方法，同时对其部分重写  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">work</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;这个工作真难做&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> <span class="keyword">extends</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">work</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::work();</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;所以子类可以选择摸鱼&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$father</span> = <span class="keyword">new</span> father();</span><br><span class="line"><span class="variable">$father</span>-&gt;work();<span class="comment">//这个工作真难做</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$son</span> = <span class="keyword">new</span> son();</span><br><span class="line"><span class="variable">$son</span>-&gt;work();<span class="comment">//这个工作真难做所以子类可以选择摸鱼</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>不仅可以对自己定义的方法部分重写，还可以对构造方法进行部分重写  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$firstName</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lastName</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$firstName</span>,<span class="variable">$lastName</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;firstName;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;lastName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> <span class="keyword">extends</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$firstName</span>,<span class="variable">$lastName</span></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::__construct(<span class="variable">$firstName</span>);<span class="comment">//调用父类的构造方法来初始化firstName变量</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;lastName = <span class="variable">$lastName</span>;<span class="comment">//自己初始化lastName变量</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h4><p>使用了<code>final</code>关键字类无法被继承，使用了<code>final</code>关键字的方法无法被重写</p><h4 id="重写中的权限修改"><a href="#重写中的权限修改" class="headerlink" title="重写中的权限修改"></a>重写中的权限修改</h4><p>重写之后的方法可以被修改权限,被重写方法的权限只能放大不能缩小  </p><blockquote><p>public修饰的方法被重写也只能用public修饰<br>protected修饰的方法可以被punlic和protected修饰<br>private无法被继承，所以无法重写  </p></blockquote><h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><h4 id="概念-4"><a href="#概念-4" class="headerlink" title="概念"></a>概念</h4><p>魔术方法是系统在特定时期自己调用的方法  </p><h4 id="常用的魔术方法"><a href="#常用的魔术方法" class="headerlink" title="常用的魔术方法"></a>常用的魔术方法</h4><table><thead><tr><th align="center">方法名称</th><th align="left">触发时机</th><th align="left">参数</th></tr></thead><tbody><tr><td align="center"><code>__get</code></td><td align="left">对象在外部访问私有成员变量或者受保护属性时调用</td><td align="left">属性名</td></tr><tr><td align="center"><code>__set</code></td><td align="left">对象在外部设置私有或者受保护成员属性值的时候调用</td><td align="left">成员属性名、要设置的值</td></tr><tr><td align="center"><code>__unset</code></td><td align="left">对象在外部销毁私有或受保护成员变量属性的时候调用</td><td align="left">受保护的或私有的成员变量属性名</td></tr><tr><td align="center"><code>__isset</code></td><td align="left">对象在外部判断私有或者受保护成员变量属性时调用</td><td align="left">受保护的或私有的成员变量属性名</td></tr><tr><td align="center"><code>__construct</code></td><td align="left">对象在创建时调用</td><td align="left">详细见<a href="#%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95">构造方法</a></td></tr><tr><td align="center"><code>__destruct</code></td><td align="left">方法在对象被销毁时调用</td><td align="left">无参</td></tr></tbody></table><h4 id="get和-set魔术方法"><a href="#get和-set魔术方法" class="headerlink" title="__get和__set魔术方法"></a>__get和__set魔术方法</h4><p>利用<code>__get</code>和<code>__set</code>设置和取出属性值  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">    <span class="comment">//使用__get魔术方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$attr</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;age.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;height.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$attr</span>,<span class="variable">$val</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;height = <span class="variable">$val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="comment">//利用set方法设置属性值</span></span><br><span class="line"><span class="variable">$zr</span>-&gt;name = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line"><span class="variable">$zr</span>-&gt;__set(<span class="string">&#x27;age&#x27;</span>,<span class="number">17</span>);</span><br><span class="line"><span class="variable">$zr</span>-&gt;__set(<span class="string">&#x27;height&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="comment">//利用get方法获取属性值</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$zr</span>-&gt;name);<span class="comment">//zs</span></span><br><span class="line"><span class="variable">$zr</span>-&gt;__get(<span class="string">&#x27;age&#x27;</span>);<span class="comment">//17</span></span><br><span class="line"><span class="variable">$zr</span>-&gt;__get(<span class="string">&#x27;height&#x27;</span>);<span class="comment">//100</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="unset和-isset魔术方法"><a href="#unset和-isset魔术方法" class="headerlink" title="__unset和__isset魔术方法"></a>__unset和__isset魔术方法</h4><p>一般来说可以使用<code>unset()</code>方法来销毁一个公共的成员变量属性，但是<code>unset()</code>方法无法删除一个受保护或私有的变量  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;name);<span class="comment">//销毁了name成员变量</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;age);<span class="comment">//报错,该变量为受保护变量</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;height);<span class="comment">//报错,该变量为私有变量</span></span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  protected &#x27;age&#x27; =&gt; int 19</span></span><br><span class="line"><span class="comment">  private &#x27;height&#x27; =&gt; int 120</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但在用<code>unset()</code>方法删除删除一个受保护或私有的变量时，会触发<code>__unset</code>魔术方法,可以利用<code>__unset</code>魔术方法来对这些成员变量进行删除  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$name</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$name</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;height);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;age);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;height);</span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;zr&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>同理<code>__isset</code>魔术方法，在判断对象外部对受保护或私有的成员变量有无设置过时会触发该魔术方法  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$attr</span>,<span class="variable">$val</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;height = <span class="variable">$val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$val</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$val</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$val</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;height);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="variable">$zr</span>-&gt;height = <span class="number">100</span>;</span><br><span class="line">var_dump(<span class="keyword">isset</span>(<span class="variable">$zr</span>-&gt;height));<span class="comment">//true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="construct和-destruct魔术方法"><a href="#construct和-destruct魔术方法" class="headerlink" title="__construct和__destruct魔术方法"></a>__construct和__destruct魔术方法</h4><p><code>__construct</code>构造方法，详细请看之前<a href="#%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95">构造方法</a><br><code>__destruct</code>析构方法,该方法在对象被销毁时自动调用  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h2&gt;&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>基于cookie和session的登录模块</title>
    <link href="http://example.com/2021/06/03/%E5%9F%BA%E4%BA%8Ecookie%E5%92%8Csession%E7%9A%84%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97/"/>
    <id>http://example.com/2021/06/03/%E5%9F%BA%E4%BA%8Ecookie%E5%92%8Csession%E7%9A%84%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97/</id>
    <published>2021-06-03T10:07:18.000Z</published>
    <updated>2021-06-04T11:07:30.057Z</updated>
    
    <content type="html"><![CDATA[<p>login php部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp;</span><br><span class="line">       <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]===<span class="string">&#x27;zr&#x27;</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]===<span class="string">&#x27;123&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(setcookie(<span class="string">&#x27;name&#x27;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>],time()+<span class="number">3600</span>))&#123;</span><br><span class="line">            header(<span class="string">&#x27;Location:https://floatc.top/&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;cookie设置错误&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;密码错误&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>login html部分  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;login.php&quot;</span>&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index php部分  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>]) &amp;&amp; <span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>] === <span class="string">&#x27;zr&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;欢迎你回来&#x27;</span>.<span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;a href=&#x27;login.php&#x27;&gt;请登录&lt;/a&gt;&quot;</span>);</span><br><span class="line">    var_dump(<span class="variable">$_COOKIE</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font color=red><del>基本可以说有手就行</del></font></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;login php部分&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>水印</title>
    <link href="http://example.com/2021/05/27/%E6%B0%B4%E5%8D%B0/"/>
    <id>http://example.com/2021/05/27/%E6%B0%B4%E5%8D%B0/</id>
    <published>2021-05-27T08:56:54.000Z</published>
    <updated>2021-05-30T09:34:27.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文字水印"><a href="#文字水印" class="headerlink" title="文字水印"></a>文字水印</h2><p>跟昨天的验证码大同小异，无非是一些方法的调用  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line"><span class="comment">//设置content-type为jpeg格式</span></span><br><span class="line"><span class="variable">$img</span> = imagecreatefromjpeg(<span class="string">&#x27;C:/wamp64/www/myPhp/imgs/ps.jpg&#x27;</span>);</span><br><span class="line"><span class="comment">//打开对应路径下的jpg文件（也可以使用url地址定位网络上的一张图片）</span></span><br><span class="line"><span class="variable">$width</span> = imagesx(<span class="variable">$img</span>);</span><br><span class="line"><span class="variable">$height</span> = imagesy(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//获取图片的长宽</span></span><br><span class="line"><span class="variable">$position</span> = imagettfbbox(<span class="number">14</span>,<span class="number">0</span>,<span class="string">&#x27;C:/wamp64/www/myPhp/font/tancai.TTC&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>);</span><br><span class="line"><span class="comment">//判断输入字符串各个角的所在坐标</span></span><br><span class="line"><span class="variable">$strWidth</span> = <span class="variable">$position</span>[<span class="number">2</span>]-<span class="variable">$position</span>[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//根据获取到的坐标来判断所输入字符串的长度</span></span><br><span class="line"><span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line"><span class="comment">//设置水印的字体颜色</span></span><br><span class="line">imagettftext(<span class="variable">$img</span>,<span class="number">100</span>,<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">1</span>-<span class="variable">$strWidth</span>-(<span class="variable">$width</span>/<span class="number">3</span>),<span class="variable">$height</span>-(<span class="variable">$height</span>/<span class="number">20</span>),<span class="variable">$color</span>,<span class="string">&#x27;C:/wamp64/www/myPhp/font/tancai.TTC&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>);</span><br><span class="line"><span class="comment">//设置水印的字体大小，倾斜角度，开始坐标（从左下角开始），字体颜色，字体格式和写入的内容</span></span><br><span class="line">imagejpeg(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//输出指定的jpg文件</span></span><br><span class="line">imagedestroy(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//销毁文件，释放资源</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="图片水印"><a href="#图片水印" class="headerlink" title="图片水印"></a>图片水印</h2><p>在文字水印的基础上增加了另外一张图片而已  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line"><span class="comment">//设置content-type为jpeg格式</span></span><br><span class="line"><span class="variable">$img</span> = imagecreatefromjpeg(<span class="string">&#x27;C:/wamp64/www/myPhp/imgs/ps.jpg&#x27;</span>);</span><br><span class="line"><span class="comment">//打开对应路径下的jpg文件（也可以使用url地址定位网络上的一张图片）</span></span><br><span class="line"><span class="variable">$width</span> = imagesx(<span class="variable">$img</span>);</span><br><span class="line"><span class="variable">$height</span> = imagesy(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//获取图片的长宽</span></span><br><span class="line"><span class="variable">$water</span> = imagecreatefrompng(<span class="string">&#x27;C:/wamp64/www/myPhp/imgs/1.png&#x27;</span>);</span><br><span class="line"><span class="comment">//获取水印图片</span></span><br><span class="line">imagecopymerge(<span class="variable">$img</span>,<span class="variable">$water</span>,<span class="number">600</span>,<span class="number">700</span>,<span class="number">70</span>,<span class="number">50</span>,imagesx(<span class="variable">$water</span>)-<span class="number">150</span>,imagesy(<span class="variable">$water</span>)-<span class="number">150</span>,<span class="number">20</span>);</span><br><span class="line"><span class="comment">//将水影图片拷贝到目标图片上</span></span><br><span class="line"><span class="comment">//imagecopy参数依次为:目标图片,水印图片,目标图片的初始位置(x,y),水印的开始拷贝位置(x,y),水印图片的拷贝长度,水印图片的拷贝高度,水印透明度(0-100)</span></span><br><span class="line">imagejpeg(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//输出指定的jpg文件</span></span><br><span class="line">imagedestroy(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//销毁文件，释放资源</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;文字水印&quot;&gt;&lt;a href=&quot;#文字水印&quot; class=&quot;headerlink&quot; title=&quot;文字水印&quot;&gt;&lt;/a&gt;文字水印&lt;/h2&gt;&lt;p&gt;跟昨天的验证码大同小异，无非是一些方法的调用  &lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;ta</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>验证码</title>
    <link href="http://example.com/2021/05/26/%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <id>http://example.com/2021/05/26/%E9%AA%8C%E8%AF%81%E7%A0%81/</id>
    <published>2021-05-26T09:52:36.000Z</published>
    <updated>2021-05-26T11:07:57.740Z</updated>
    
    <content type="html"><![CDATA[<p>这玩意儿就是个验证码，拿php写的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ob_clean();</span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line"><span class="variable">$width</span> = <span class="number">120</span>;</span><br><span class="line"><span class="variable">$height</span> = <span class="number">40</span>;</span><br><span class="line"><span class="variable">$element</span> = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;q&#x27;</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">4</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$str</span> .= <span class="variable">$element</span>[rand(<span class="number">0</span>,count(<span class="variable">$element</span>)-<span class="number">1</span>)];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置长宽</span></span><br><span class="line"><span class="variable">$img</span> = imagecreatetruecolor(<span class="variable">$width</span>,<span class="variable">$height</span>);</span><br><span class="line"><span class="comment">//设置画布大小</span></span><br><span class="line"><span class="variable">$colorBg</span> = imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//选择随机颜色</span></span><br><span class="line">imagefill(<span class="variable">$img</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="variable">$colorBg</span>);</span><br><span class="line"><span class="comment">//填充给背景颜色</span></span><br><span class="line"><span class="variable">$colorBorder</span> = imagecolorallocate(<span class="variable">$img</span>,<span class="number">0</span>,rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//设置边框颜色</span></span><br><span class="line">imagerectangle(<span class="variable">$img</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">1</span>,<span class="variable">$height</span>-<span class="number">1</span>,<span class="variable">$colorBorder</span>);</span><br><span class="line"><span class="comment">//设置边框的位置和颜色</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">100</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$colorPi</span> = imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">100</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//设置干扰点颜色</span></span><br><span class="line">imagesetpixel(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">1</span>),rand(<span class="number">0</span>,<span class="variable">$height</span>-<span class="number">1</span>),<span class="variable">$colorPi</span>);</span><br><span class="line"><span class="comment">//设置干扰点的位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">6</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$colorLine</span> = imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="number">255</span>),rand(<span class="number">0</span>,<span class="number">255</span>),rand(<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//设置干扰线的颜色</span></span><br><span class="line">imageline(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">2</span>/<span class="number">2</span>),rand(<span class="number">0</span>,<span class="variable">$height</span>-<span class="number">2</span>),rand(<span class="variable">$width</span>-<span class="number">2</span>/<span class="number">2</span>,<span class="variable">$width</span>),rand(<span class="number">0</span>,<span class="variable">$height</span>),<span class="variable">$colorLine</span>);</span><br><span class="line"><span class="comment">//设置干扰线的位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$colorFont</span> = imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="number">255</span>),rand(<span class="number">0</span>,<span class="number">255</span>),rand(<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//设置验证码字体颜色</span></span><br><span class="line">imagettftext(<span class="variable">$img</span>,<span class="number">30</span>,rand(-<span class="number">5</span>,<span class="number">5</span>),rand(<span class="number">5</span>,<span class="number">15</span>),rand(<span class="number">30</span>,<span class="number">35</span>),<span class="variable">$colorFont</span>,<span class="string">&#x27;C:\wamp64\www\myPhp\font\tancai.TTC&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="comment">//设置验证码大小，倾斜程度，字体，颜色(要注意的是这个方法的x，ys是从字符串右下角算起)</span></span><br><span class="line">imagejpeg(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//以jpeg格式生成图像</span></span><br><span class="line">imagedestroy();</span><br><span class="line"><span class="comment">//释放内存</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这玩意儿就是个验证码，拿php写的&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://example.com/2021/05/20/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2021/05/20/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-05-20T07:02:30.000Z</published>
    <updated>2021-05-25T11:58:56.520Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p><font color=#C0C0C0><em>注：正则表达式并不是php所独有的，因为在学习php的缘故，本篇采用php来使用正则表达式</em></font></p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><strong>正则表达式</strong>描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。</p><h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><p>字符串一般是由<strong>普通字符</strong>和<strong>元字符</strong>构成  </p><blockquote><p>普通字符:a-z A-Z 0-9 双引号 单引号等，他们没有特殊的含义<br>元字符:指的是有特殊功能的字符例如<code>*</code>,<code>+</code>,<code>?</code>等，常用的元字符见<a href="https://www.runoob.com/regexp/regexp-metachar.html">常用元字符</a></p></blockquote><p>例如<code>&#39;/a/&#39;</code>,<code>a</code>就是普通字符，<code>/</code>是定界符（用于表示正则表达式的开始和结束）  </p><h4 id="定界符"><a href="#定界符" class="headerlink" title="定界符"></a>定界符</h4><p>我们一般用<strong>正斜线<code>/</code></strong> 作为定界的字符，当然除了<strong>字母</strong>,<strong>数字</strong>和<strong>反斜线</strong>以外的字符都可以作为定界符，比如<code>#</code>,<code>!</code>,<code>&#123;&#125;</code>,<code>|</code>等都是可以的，定界符要放在正则表达式的起始与结尾位置，前后一致</p><h3 id="模式修正符"><a href="#模式修正符" class="headerlink" title="模式修正符"></a>模式修正符</h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><p>模式修正符是在正则表达式的定界符之后使用的，可以调整正则表达式的解释，拓展正则表达式在匹配、替换等操作时的一些功能，增强正则表达式的处理能力</p><table><thead><tr><th align="center">常见模式修正符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">i</td><td align="left">在模式进行匹配时不区分大小写</td></tr><tr><td align="center">m</td><td align="left">多行匹配，如果目标字符串中没有<code>&#39;\n&#39;</code>字符，或者模式中没有出现<code>^</code>或<code>$</code>，设置这个修饰符则不会产生影响</td></tr><tr><td align="center">s</td><td align="left">如果设置了此修饰符，那么将匹配所有的字符包括换行符</td></tr><tr><td align="center">U</td><td align="left">禁止贪婪匹配</td></tr></tbody></table><!-- |常见模式修正符|说明||:-:|:-:||i| 在模式进行匹配时不区分大小写 ||m| 多行匹配，如果目标字符串中没有`'\n'`字符，或者模式中没有出现`^`或`$`，设置这个修饰符则不会产生影响 ||s|如果设置了此修饰符，那么将匹配所有的字符包括换行符||U|禁止贪婪匹配| --><p>修正符<code>i</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$parttern</span> = <span class="string">&#x27;/test/i&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;test Test tESt TEST&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$parttern</span>,<span class="variable">$str</span>,<span class="variable">$arr</span>));<span class="comment">//int 4</span></span><br><span class="line">var_dump(<span class="variable">$arr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=4)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      1 =&gt; string &#x27;Test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      2 =&gt; string &#x27;tESt&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      3 =&gt; string &#x27;TEST&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修正符<code>m</code><strong>使用条件</strong>:<br><strong>1.</strong> 目标字符中必须包括<code>\n</code><br><strong>2.</strong> 所用的正则表达式中必须要出现<code>^</code>和<code>$</code><br>注意不能手动敲换行，在windows操作系统中所看见的换行（现象）实际是由<code>\n\r</code>两个转义字符共同完成的，正则表达式所识别的换行只有<code>\n</code>这一个转义字符，所以手动敲换行不能够识别出来<br><strong>模式修正符可以多个一起搭配使用</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/^test/&#x27;</span>;<span class="comment">//未添加修正符</span></span><br><span class="line"><span class="variable">$pattern2</span> = <span class="string">&#x27;/^test/m&#x27;</span>;<span class="comment">//添加了修正符m</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;test\ntest\ntest\ntest&quot;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern2</span>,<span class="variable">$str</span>,<span class="variable">$arr2</span>));<span class="comment">//int 4</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=4)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      1 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      2 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      3 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">```  </span><br><span class="line">修正符s:能把`\n`识别出来</span><br><span class="line">```php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/t.st/&#x27;</span>;</span><br><span class="line"><span class="variable">$pattern2</span> = <span class="string">&#x27;/t.st/s&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;t\nst&quot;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 0</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=0)</span></span><br><span class="line"><span class="comment">      empty</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern2</span>,<span class="variable">$str</span>,<span class="variable">$arr2</span>));<span class="comment">// int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;tst&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修正符<code>U</code>:<br>贪婪匹配：尽可能多地将满足字符串匹配进来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/a.*f/&#x27;</span>;</span><br><span class="line"><span class="variable">$pattern2</span> = <span class="string">&#x27;/a.*f/U&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;  aasqddqfwfwe  sdasdf&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">     array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;aasqddqfwfwe  sdasdf&#x27; (length=20)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern2</span>,<span class="variable">$str</span>,<span class="variable">$arr2</span>));<span class="comment">//int 2</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">    0 =&gt; </span></span><br><span class="line"><span class="comment">      array (size=2)</span></span><br><span class="line"><span class="comment">        0 =&gt; string &#x27;aasqddqf&#x27; (length=8)</span></span><br><span class="line"><span class="comment">        1 =&gt; string &#x27;asdf&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="正则表达式相关函数"><a href="#正则表达式相关函数" class="headerlink" title="正则表达式相关函数"></a>正则表达式相关函数</h3><p><code>preg_match_all()</code>:<strong>按指定的正则表达式，在给定的字符串中进行搜索，把匹配到符合特征的部分取出来</strong>,可选参数<code>$arr</code>是以二维数组的形式来存储匹配到的字符串,相同的元素将存在同一个数组中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/test/&#x27;</span>;</span><br><span class="line"><span class="variable">$test1</span> = <span class="string">&#x27;asdfghjkl&#x27;</span>;</span><br><span class="line"><span class="variable">$test2</span> = <span class="string">&#x27;asadfgtestftestgn&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="variable">$test1</span>,<span class="variable">$arr1</span>));<span class="comment">//int 0</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="variable">$test2</span>,<span class="variable">$arr2</span>));<span class="comment">//int 2</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">array (size=0)</span></span><br><span class="line"><span class="comment">  empty</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=0)</span></span><br><span class="line"><span class="comment">      empty</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面仅仅使用了普通字符匹配，也可以搭配<a href="https://www.runoob.com/regexp/regexp-metachar.html">元字符</a>来进行使用</p><blockquote><p>元字符<code>\d</code>匹配0-9其中任意一个数组<br>元字符<code>\D</code>匹配除了0-9以外的任意字符<br>元字符<code>.</code>匹配除换行符<code>\n</code>以外的任意字符<br>元字符<code>*</code>匹配0次，1次，或多次前面的字符<br>元字符<code>+</code>匹配1次或多次前面的字符<br>元字符<code>?</code>匹配0次或1次前面的字符<br>元字符<code>&#123;n&#125;</code>匹配前面恰好出现n次的字符<br>元字符<code>&#123;n,&#125;</code>匹配前面出现次数不少于n次的字符<br>元字符<code>&#123;n,m&#125;</code>匹配前面出现次数不少于n次,不多于m次的字符<br>元字符<code>^</code>或<code>\A</code>匹配字符串开始位置，必须以某个字符开头<br>元字符<code>$</code>或<code>\Z</code>匹配字符串结束位置，必须以某个字符结尾<br>元字符<code>|</code>，匹配两个或多个给定字符（有点类似于或的使用）<br>元字符<code>[]</code>，匹配<code>[]</code>中的任意一个字符，也可以搭配<code>|</code>使用<br>元字符<code>[^]</code>，匹配除了<code>[]</code>中的任意一个字符</p></blockquote><p>元字符和元字符之间也可以相互配合使用    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/t.&#123;3,&#125;st/&#x27;</span>;<span class="comment">//相当于&#x27;/t...st/&#x27;</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;test&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 0</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;teeest&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;teee12312st&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 1</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>配合使用默认情况下是<strong>贪婪匹配</strong>，也就是尽可能匹配更多的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/t.*st/&#x27;</span>;<span class="comment">//相当于&#x27;/t...st/&#x27;</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;testsdast&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;testsdast&#x27; (length=9)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;testsdasteweqst&#x27;</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;testsdasteweqst&#x27; (length=15)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果不想使用默认的贪婪匹配，可以在<code>.*</code>后面加上一个<code>?</code>，也就是<strong>懒惰匹配</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/t.*?st/&#x27;</span>;<span class="comment">//相当于&#x27;/t...st/&#x27;</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;testsdasteweqst&#x27;</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=2)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      1 =&gt; string &#x27;teweqst&#x27; (length=7)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>preg_match()</code>:preg_match()返回 pattern 的匹配次数。 它的值将是0次（不匹配）或1次，因为preg_match()在第一次匹配后 将会停止搜索。一般用于判断某个字符串中是否含有符合条件的字符串  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/a.*f/U&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;  aasqddqfwfwe  sdasdf&#x27;</span>;</span><br><span class="line">var_dump(preg_match(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; string &#x27;aasqddqf&#x27; (length=8)</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>判断是否含有某种特征的字符串  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/a.*f/U&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;  aasqddqfwfwe  sdasdf&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;符合特征&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;不符合特征&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>preg_replace()</code>:可以将根据正则表达式把指定部分的字符串进行替换  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$parrern</span> = <span class="string">&#x27;/&lt;div&gt;(.*?)&lt;\/div&gt;/&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;asadasda&lt;div&gt;fger&lt;/div&gt;fs&#x27;</span>;</span><br><span class="line"><span class="variable">$str1</span> = <span class="string">&#x27;&lt;a&gt;测试&lt;/a&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$parrern</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;找到了&#x27;</span>);</span><br><span class="line">var_dump(preg_replace(<span class="variable">$parrern</span>,<span class="variable">$str1</span>,<span class="variable">$str</span>));</span><br><span class="line"><span class="comment">//string &#x27;asadasda&lt;a&gt;测试&lt;/a&gt;fs&#x27; (length=23)</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;没找到&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果只是对<code>&lt;div&gt;&lt;/div&gt;</code>标签进行匹配修改,则可以在用于修改的字符串中加上正则表达式,如下所示  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$parrern</span> = <span class="string">&#x27;/&lt;div&gt;(.*?)&lt;\/div&gt;/&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;asadasda&lt;div&gt;fger&lt;/div&gt;fs&#x27;</span>;</span><br><span class="line"><span class="variable">$str1</span> = <span class="string">&#x27;&lt;a&gt;\\1&lt;/a&gt;&#x27;</span>;<span class="comment">//str1添加了正则表达式</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$parrern</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;找到了&#x27;</span>);</span><br><span class="line">var_dump(preg_replace(<span class="variable">$parrern</span>,<span class="variable">$str1</span>,<span class="variable">$str</span>));</span><br><span class="line"><span class="comment">//string &#x27;asadasda&lt;a&gt;fger&lt;/a&gt;fs&#x27; (length=21)</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;没找到&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h2&gt;&lt;p&gt;&lt;font color=#C0C0C0&gt;&lt;em&gt;注：正则表达式并不是php所独有的，因为在学习php的缘故，本篇采用</summary>
      
    
    
    
    
    <category term="正则表达式" scheme="http://example.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>初入php</title>
    <link href="http://example.com/2021/05/11/myFirstPhp/"/>
    <id>http://example.com/2021/05/11/myFirstPhp/</id>
    <published>2021-05-11T11:04:38.000Z</published>
    <updated>2021-06-06T11:13:47.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初入php"><a href="#初入php" class="headerlink" title="初入php"></a>初入php</h2><p>php代码可以嵌入到html代码中的任何位置，并且可以嵌入任意多个<br>php语言标记为<code>&lt;?php ?&gt;</code>，并且在文件末尾的<code>?&gt;</code>是可以省略的，与其他语言大同小异，php每句结束后要加上<code>;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;hello,world&#x27;</span>;<span class="meta">?&gt;</span></span><br><span class="line">    &lt;!--这里是不能省略的,因为不是在文件末尾--&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;hello,world&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="php注释"><a href="#php注释" class="headerlink" title="php注释"></a>php注释</h2><p>和其他语言一样，php也有单行注释和多行注释<br>单行注释<code>&lt;?php //这是一个单行注释?&gt;</code><br>多行注释<code>&lt;?php /*这是一个多行注释*/?&gt;</code></p><h2 id="关于空白（tab，空格）"><a href="#关于空白（tab，空格）" class="headerlink" title="关于空白（tab，空格）"></a>关于空白（tab，空格）</h2><p>和其他语言类型差不多，换行对代码影响不大，所以类似于下面这种阴间写法也是可以的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;h</span></span><br><span class="line"><span class="string">e</span></span><br><span class="line"><span class="string">l</span></span><br><span class="line"><span class="string">l</span></span><br><span class="line"><span class="string">o</span></span><br><span class="line"><span class="string">,world&#x27;</span>;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出还是 hello,world<br>是个有脑子的人都不会这么些就是了..</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>php中的变量不需要声明，当第一次给这个变量赋值的时候就会创建这个变量，创建了这个变量之后就可以重复用它了<br>和其他语言一样，php变量也能用于存储数字，数字，字符串等乱七八糟的东西<br>php变量必须使用<code>$</code>来定义，使用<code>=</code>来进行赋值</p><h3 id="变量的销毁"><a href="#变量的销毁" class="headerlink" title="变量的销毁"></a>变量的销毁</h3><p><code>unset()</code>函数用于释放指定的变量<br>具体用法为 <code>unset($变量名)</code></p><h3 id="变量的命名"><a href="#变量的命名" class="headerlink" title="变量的命名"></a>变量的命名</h3><p>php的变量是严格区分大小写的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$name</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$name</span>;<span class="comment">//输出变量$name</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$Name</span>;<span class="comment">//直接报错，没有该变量名</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>php变量名后面可以以字母和下划线开头，后面在接上任意的数字字母和下划线</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$<span class="number">1</span>name = <span class="number">1</span>;<span class="comment">//直接报错，不能用数字开头</span></span><br><span class="line">$%name = <span class="number">1</span>;<span class="comment">//直接报错，不能用除了字母和下划线的符号开头</span></span><br><span class="line">    <span class="variable">$na</span> me = <span class="number">1</span>;<span class="comment">//直接报错，中间不能含有空格</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有点离谱的是php有些关键字是可以作为变量来使用的..<br>这在其他语言中简直是不能想象的事..</p><h3 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h3><p>又是一个阴间设定,看看就好</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$abc</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="variable">$$abc</span> = <span class="string">&#x27;desk&#x27;</span>;<span class="comment">//这段代码可以理解为 $abc = &#x27;desk&#x27;;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="变量的引用"><a href="#变量的引用" class="headerlink" title="变量的引用"></a>变量的引用</h3><p>毫无特点的引用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="number">100</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;<span class="comment">//100</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>变量的引用赋值。乱七八糟的引用..让人摸不着头脑</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="number">100</span>;</span><br><span class="line"><span class="variable">$b</span> = &amp;<span class="variable">$a</span>;<span class="comment">//相当于给$a起了个别名叫$b,</span></span><br><span class="line">    <span class="comment">//对$b进行操作相当于同时操作了$a和$b,对两个变量都会有影响</span></span><br><span class="line"><span class="variable">$b</span> = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;<span class="comment">//20</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><p>php几乎没有变量类型这一说法，他所有的变量类型都是从上下文中推断出来的。<br>使用<code>var_dump()</code>可以输出变量的类型  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="literal">true</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//boolean true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="bool类型"><a href="#bool类型" class="headerlink" title="bool类型"></a>bool类型</h3><p>bool类型是最简单的类型，布尔值表达了true或者false，除了以下的值，其他的值都认为是true  </p><blockquote><p>1.布尔值false<br>2.为0的值<br>3.浮点数0.0<br>4.空白字符串和字符串’0’<br>5.没有成员的数组<br>6.null值</p></blockquote><h3 id="int类型"><a href="#int类型" class="headerlink" title="int类型"></a>int类型</h3><p>用于保存整数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//int 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><p>用于保存浮点型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="number">1.0</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//float 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字符串String"><a href="#字符串String" class="headerlink" title="字符串String"></a>字符串String</h3><h4 id="单引号"><a href="#单引号" class="headerlink" title="单引号"></a>单引号</h4><p>注意在单引号中不能再添加单引号，如果实在忍不住要用单引号，就需要用反斜杠 <code>\</code> 来进行转义,其中的变量名不会被解析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;1asasa0&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//string &#x27;1.0&#x27; (length=3)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="双引号"><a href="#双引号" class="headerlink" title="双引号"></a>双引号</h4><p>其中的变量名会被变量值所替代，即php会解析双引号之间的变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&quot;a<span class="subst">&#123;$a&#125;</span>b&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;<span class="comment">//a123b</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="定界符"><a href="#定界符" class="headerlink" title="定界符"></a>定界符</h4><p><code>&lt;&lt;&lt;</code>用于定义字符串的开始变量，同时用开始字符串作为结尾<br>中间可以插入单引号和双引号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$b</span> = <span class="number">100</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&lt;&lt;&lt;aaa</span></span><br><span class="line"><span class="string">asdasdasd<span class="subst">&#123;$b&#125;</span></span></span><br><span class="line"><span class="string">aaa</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//string &#x27;asdasdasd&#x27; (length=9)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h4><p>以下为空白字符：  </p><blockquote><p>1.普通空格符” “<br>2.制表符”\t”<br>3.换行符”\n”<br>4.回车符”\r”<br>5.空字节符”\0”<br>6.垂直制表符”\x0B”  </p></blockquote><p><strong><code>trim()</code>:去除字符串首尾的空白字符(或者其他字符)<br><code>ltrim()</code>:去除字符串左边的空白字符(或者其他字符)<br><code>rtrim()</code>:去除字符串右边的空白字符(或者其他字符)</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;   abc   &#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//string &#x27;   abc   &#x27; (length=9)</span></span><br><span class="line"><span class="variable">$b</span> = trim(<span class="variable">$a</span>);</span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//string &#x27;abc&#x27; (length=3)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>也可以在后面加上想要去除的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;abcsdsdsdsa&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = trim(<span class="variable">$a</span>,<span class="string">&#x27;ab&#x27;</span>);<span class="comment">//前后去除ab字符串</span></span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//string &#x27;csdsdsds&#x27; (length=8)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strtoupper()</code>:<strong>将字符串转换为大写</strong>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;abcsdsdsdsa&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = strtoupper(<span class="variable">$a</span>);</span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//string &#x27;ABCSDSDSDSA&#x27; (length=11)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strtolower()</code>:<strong>将字符串转换为小写</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;SDADASC&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = strtolower(<span class="variable">$a</span>);</span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//string &#x27;sdadasc&#x27; (length=7)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>substr_count()</code>:计算字符串出现的次数(默认区分大小写)</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;SDADASC&#x27;</span>;</span><br><span class="line">var_dump(substr_count(<span class="variable">$a</span>,<span class="string">&#x27;A&#x27;</span>));<span class="comment">//int 2</span></span><br><span class="line">var_dump(substr_count(<span class="variable">$a</span>,<span class="string">&#x27;a&#x27;</span>));<span class="comment">//int 0</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个方法也有一些参数，后面会有额外的两个参数，第一个表示开始的位置（默认从0开始），第二个表示结束的位置    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;SDADASC&#x27;</span>;</span><br><span class="line">var_dump(substr_count(<span class="variable">$a</span>,<span class="string">&#x27;A&#x27;</span>,<span class="number">4</span>));<span class="comment">//int 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strpos()</code>:<strong>查找字符串首次出现的位置,查找到则返回该字符串所在索引,如果未查找到则返回false</strong><br>这里要注意的点是，如果找到了该字符在索引为0的位置,直接使用<code>if(strpos($a,&#39;a&#39;) == false</code>,其中的false会转换为0,返回的结果是<code>true</code>,会直接出现错误，所以在进行比较时会选择<strong>全等<code>===</code></strong> 或者 <strong>不全等<code>!==</code></strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;asasf&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(strpos(<span class="variable">$a</span>,<span class="string">&#x27;a&#x27;</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;找到了&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;没找到&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strstr()</code>:返回从搜索的字符串开始，到结尾的位置（这个真不太好说..）,如果添加参数为<code>true</code>则返回该字符串之前的字符串，未查找到字符串则返回<code>false</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;eryruasasf&#x27;</span>;</span><br><span class="line">var_dump(strstr(<span class="variable">$a</span>,<span class="string">&#x27;a&#x27;</span>));<span class="comment">//string &#x27;sasf&#x27; (length=4)</span></span><br><span class="line">var_dump(strstr(<span class="variable">$a</span>,<span class="string">&#x27;s&#x27;</span>,<span class="literal">true</span>));<span class="comment">//string &#x27;eryrua&#x27; (length=6)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>str_replace</code>:替换字符串的子串,并不会改变原来的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;eryruasasf&#x27;</span>;</span><br><span class="line">var_dump(str_replace(<span class="string">&#x27;ru&#x27;</span>,<span class="string">&#x27;aa&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//string &#x27;eryaaasasf&#x27; (length=10)</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>);<span class="comment">//eryruasasf</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然也可以直接用数组对目标数据进行替换,后边的参数<code>$count</code>是被替换字符串的个数  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;abc123cba&#x27;</span>;</span><br><span class="line">var_dump(str_replace(<span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>),<span class="keyword">array</span>(<span class="string">&#x27;一&#x27;</span>,<span class="string">&#x27;二&#x27;</span>,<span class="string">&#x27;三&#x27;</span>),<span class="variable">$a</span>,<span class="variable">$count</span>));</span><br><span class="line"><span class="comment">//string &#x27;abc一二三cba&#x27; (length=15)</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$count</span>);<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果被替换的字符串是一个数组，则会替换数组中所有满足条件的字符串  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;abc123cba&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;123cba&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;abc123&#x27;</span>,</span><br><span class="line">);</span><br><span class="line">var_dump(str_replace(<span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>),<span class="keyword">array</span>(<span class="string">&#x27;一&#x27;</span>,<span class="string">&#x27;二&#x27;</span>,<span class="string">&#x27;三&#x27;</span>),<span class="variable">$a</span>,<span class="variable">$count</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=3)</span></span><br><span class="line"><span class="comment">  0 =&gt; string &#x27;abc一二三cba&#x27; (length=15)</span></span><br><span class="line"><span class="comment">  1 =&gt; string &#x27;一二三cba&#x27; (length=12)</span></span><br><span class="line"><span class="comment">  2 =&gt; string &#x27;abc一二三&#x27; (length=12)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$count</span>);<span class="comment">//9</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>如果没有特殊的替换需求（比如正则表达式），应该使用该函数替换<code>ereg_replace()</code>和<code>preg_replace</code></strong>  </p><p><code>htmlspecialchars()</code>:<strong>将一些预定义的字符转换为html实体</strong>，也就是停止将字符串中的标签识别为html源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;This is some &lt;b&gt;bold&lt;/b&gt; text.&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> htmlspecialchars(<span class="variable">$a</span>);<span class="comment">//This is some &lt;b&gt;bold&lt;/b&gt; text.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strip_tags()</code>:<strong>剥去字符串中的HTML和PHP标签</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;This is some &lt;b&gt;bold&lt;/b&gt; text.&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> strip_tags(<span class="variable">$a</span>);<span class="comment">//This is some bold text.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然如果想留下某个标签被解析，在后面添加上标签的字符串即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;This is some &lt;b&gt;bold&lt;/b&gt; text.&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> strip_tags(<span class="variable">$a</span>,<span class="string">&#x27;&lt;b&gt;&#x27;</span>);<span class="comment">//This is some bold text.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>substr()</code>:<strong>用于截取字符串</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;asdfghjkl&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span>(substr(<span class="variable">$a</span>,<span class="number">2</span>));<span class="comment">//dfghjkl</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>也可以限制截取的长度</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;asdfghjkl&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span>(substr(<span class="variable">$a</span>,<span class="number">2</span>,<span class="number">4</span>));<span class="comment">//dfgh</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果第二个参数为负数，则表示从右向左截取对应长度的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;asdfghjkl&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span>(substr(<span class="variable">$a</span>,-<span class="number">2</span>));<span class="comment">//kl</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>explode()</code>:<strong>使用字符串分割另一个字符串</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test1,test2,test3&#x27;</span>;</span><br><span class="line">var_dump(explode(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=3)</span></span><br><span class="line"><span class="comment">0 =&gt; string &#x27;test1&#x27; (length=5)</span></span><br><span class="line"><span class="comment">1 =&gt; string &#x27;test2&#x27; (length=5)</span></span><br><span class="line"><span class="comment">2 =&gt; string &#x27;test3&#x27; (length=5)</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果想限制切割字符串的次数，则可以在后面添加上一个整型参数,未被截取到的部分将存储在数组的同一个元素中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test1,test2,test3&#x27;</span>;</span><br><span class="line">var_dump(explode(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">/*array (size=2)</span></span><br><span class="line"><span class="comment">0 =&gt; string &#x27;test1&#x27; (length=5)</span></span><br><span class="line"><span class="comment">1 =&gt; string &#x27;test2,test3&#x27; (length=11)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><code>str_split()</code>:将一个字符串转换为数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">var_dump(str_split(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=4)</span></span><br><span class="line"><span class="comment">0 =&gt; string &#x27;t&#x27; (length=1)</span></span><br><span class="line"><span class="comment">1 =&gt; string &#x27;e&#x27; (length=1)</span></span><br><span class="line"><span class="comment">2 =&gt; string &#x27;s&#x27; (length=1)</span></span><br><span class="line"><span class="comment">3 =&gt; string &#x27;t&#x27; (length=1)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>也可以限制每个数组的元素个数，默认为1</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">var_dump(str_split(<span class="variable">$a</span>,<span class="number">2</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=2)</span></span><br><span class="line"><span class="comment">0 =&gt; string &#x27;te&#x27; (length=2)</span></span><br><span class="line"><span class="comment">1 =&gt; string &#x27;st&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="索引数组"><a href="#索引数组" class="headerlink" title="索引数组"></a>索引数组</h4><p>php种数组的定义很随意,直接用 <code>$数组名[]</code>定义即可，定义完之后可以直接向里面赋值<br>注意在输出数组时不能使用<code>echo()</code>函数,必须使用<code>print_r()</code>函数来进行输出 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">1</span>] = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">2</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">3</span>] = <span class="string">&#x27;50.2&#x27;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果为：</span></span><br><span class="line"><span class="comment">Array ( [0] =&gt; 10 [1] =&gt; 周睿 [2] =&gt; 1 [3] =&gt; 50.2 )</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>根据php一如既往的省略政策，数组的定义甚至可以可以把索引值给省略掉…  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[] = <span class="number">10</span>;</span><br><span class="line"><span class="variable">$student</span>[] = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$student</span>[] = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$student</span>[] = <span class="string">&#x27;50.2&#x27;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果为：</span></span><br><span class="line"><span class="comment">Array ( [0] =&gt; 10 [1] =&gt; 周睿 [2] =&gt; 1 [3] =&gt; 50.2 )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果索引值省略不写，那么索引值就是从0开始依此往上  </p><p>数组定义时索引值重复时，后者会直接覆盖掉前者  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[<span class="number">0</span>] = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">0</span>] = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);<span class="comment">//Array ( [0] =&gt; zs )</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>php种支持跳索引定义，查看没有定义的索引则会直接报错  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[<span class="number">0</span>] = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">5</span>] = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);<span class="comment">//Array ( [0] =&gt; zr [5] =&gt; zs )</span></span><br><span class="line">var_dump(<span class="variable">$student</span>[<span class="number">1</span>]);<span class="comment">//直接报错</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然除了手动定义数组之外，还可以使用<strong>语言结构</strong> <code>array()</code> 来定义个数组（注意这玩意儿不是方法！） </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span> = <span class="keyword">array</span>(<span class="number">12</span>,<span class="string">&#x27;周睿&#x27;</span>,<span class="string">&#x27;2.4&#x27;</span>,<span class="literal">true</span>);</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果为：</span></span><br><span class="line"><span class="comment">Array ( [0] =&gt; 12 [1] =&gt; 周睿 [2] =&gt; 2.4 [3] =&gt; 1 )</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>当然<code>array()</code>也能指定索引值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">1</span>=&gt;<span class="number">12</span>,</span><br><span class="line"><span class="number">2</span>=&gt;<span class="string">&#x27;周睿&#x27;</span>,</span><br><span class="line"><span class="number">3</span>=&gt;<span class="string">&#x27;2.4&#x27;</span>,</span><br><span class="line"><span class="number">4</span>=&gt;<span class="literal">true</span>);</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="引用数组"><a href="#引用数组" class="headerlink" title="引用数组"></a>引用数组</h4><p>所谓引用数组就是把原本索引值由整型改为字符串类型罢了,没啥好说的  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;周睿&quot;</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="string">&quot;age&quot;</span>] = <span class="number">20</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="string">&quot;sex&quot;</span>] = <span class="string">&quot;male&quot;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">print_r(<span class="variable">$student</span>[<span class="string">&quot;age&quot;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>array()</code>也能这么用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;name&quot;</span>=&gt;<span class="string">&quot;周睿&quot;</span>,</span><br><span class="line"><span class="string">&quot;age&quot;</span>=&gt;<span class="string">&quot;20&quot;</span>,</span><br><span class="line"><span class="string">&quot;sex&quot;</span>=&gt;<span class="string">&quot;male&quot;</span></span><br><span class="line">);</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Array ( [name] =&gt; 周睿 [age] =&gt; 20 [sex] =&gt; male )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">print_r(<span class="variable">$student</span>[<span class="string">&quot;age&quot;</span>]);<span class="comment">//20</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然数组也属于基本类型之一，所以我们甚至可以在数组中再次嵌套数组  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">0</span>=&gt;<span class="keyword">array</span>(<span class="string">&#x27;周睿&#x27;</span>,<span class="string">&quot;20&quot;</span>,<span class="string">&quot;male&quot;</span>),</span><br><span class="line"><span class="string">&quot;age&quot;</span>=&gt;<span class="number">20</span></span><br><span class="line">);</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Array ( [0] =&gt; Array ( [0] =&gt; 周睿 [1] =&gt; 20 [2] =&gt; male ) [age] =&gt; 20 )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">print_r(<span class="variable">$student</span>[<span class="string">&quot;age&quot;</span>]);<span class="comment">//20</span></span><br><span class="line">print_r(<span class="variable">$student</span>[<span class="number">0</span>][<span class="number">0</span>]);<span class="comment">//周睿</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h4><p>朴实无华的遍历</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=<span class="number">10</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$i</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1,2,3,4,5,6,7,8,9,10</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>count(数组变量)</code>可以返回数组的长度,并且可以获取多维数组的元素个数,所以可以写成这样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=count(<span class="variable">$array</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$i</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1,2,3,4,5,6,7,8,9,10</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="预定义超全局变量数组"><a href="#预定义超全局变量数组" class="headerlink" title="预定义超全局变量数组"></a>预定义超全局变量数组</h4><p><strong>预定义</strong>:已经定义好的存在变量，存放的数据类型时数组<br><strong>超全局</strong>:作用域为全局变量<br>以下是几个预定义超全局数组变量  </p><blockquote><p>1.<strong><code>$_SERVER</code></strong> 是一个包含诸如头部信息，路径和脚本位置的数组<br>2.<strong><code>$_ENV</code></strong> 数组中的内容是在PHP解析器运行时，从PHP所在服务器中环境变量转变为PHP全局变量<br>3.<strong><code>$_GET</code></strong> 数组也是超全局变量数组，通过Url Get 方法传递的变量组成数组，它属于外部变量，即在服务器页面中通过<code>$_GET</code>超全局数组Url 或表单GET方式传递过来的参数<br>4.<strong><code>$_POST</code></strong> 数组是通过HTTP POST方法传递的变量组成数组<code>$_POST</code>和<code>$_GET</code>数组之一都可以保存表单提交的变量<br>5.<strong><code>$_REQUEST</code></strong> 包含<code>$_GET</code>,<code>$_POST</code>和<code>$_COOKIE</code>中全部内容 如果表单时通过form 的post 提交的就通过$_POST 获取，通过GET方式发送就用<code>$_GET</code>方式获取。<code>$_REQUEST</code>不用关注是POST 或者GET ，即<code>$_REQUEST</code>可以获取get 或post的数据但是速度慢<br>6.<strong><code>$_FILES</code></strong>,在使用表单file输入域上传文件时，必须使用post方式提交但在服务器端不能通过<code>$_post</code>文件获取而是通过<code>$_FILES</code>来获取<code>$_FILES</code>是一个二维数组，包含5个子元素。<br>7.<strong><code>$_COOKIE</code></strong> 超全局数组是经HTTP cookies方法提交至脚本变量，通过这些cookies 是由以前执行的PHP脚本通过<code>setCookie()</code>函数设置到客户端的浏览器，php脚本从客户端获取cookie后将会自动转换成一个变量，可以通过<code>$_COOKIE</code>超全局数组和cookies的名称来存取指定cookie值。<br>8.<strong><code>$_SESSION session</code></strong> 变量会话控制是在服务端使用session跟踪用户，当服务端页面中使用<code>session_start()</code>函数开启session后，就可以使用<code>$_SESSION</code>数组主机全局变量。<br>9.<strong><code>$GLOBALS</code></strong> 是由所以定义的全局变量组成的数组，变量名就是该数组的索引，在所有脚本中都有效，在函数或对象中的方法中不需要使用关键字<code>global</code>访问，在函数外部声明全局变量，可以使用<code>$_GLOBALS</code>数组替代<code>global</code>关键字</p></blockquote><h4 id="处理数组的相关函数"><a href="#处理数组的相关函数" class="headerlink" title="处理数组的相关函数"></a>处理数组的相关函数</h4><p>这里只举个例子，具体见<a href="https://www.w3school.com.cn/php/php_ref_array.asp">数组的相关函数</a><br><code>array_count_values()</code>:统计数组中的所有值出现的次数,本函数返回一个数组，其元素的键名是原数组的值，键值是该值在原数组中出现的次数。 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">array</span>(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;Cat&quot;</span>,<span class="string">&quot;Dog&quot;</span>,<span class="string">&quot;A&quot;</span>,<span class="string">&quot;Dog&quot;</span>);</span><br><span class="line">print_r(array_count_values(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Array ( [A] =&gt; 2 [Cat] =&gt; 1 [Dog] =&gt; 2 )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>array_key_exists()</code>:检查指定的<strong>键名</strong>是否存在于数组中,对键是区分大小写的  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&#x27;A&#x27;</span> =&gt; <span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;B&#x27;</span> =&gt; <span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">var_dump(array_key_exists(<span class="string">&#x27;A&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(array_key_exists(<span class="string">&#x27;a&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>array_search()</code>:搜索数组中给定的值并返回键名,同样区分大小写 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&#x27;A&#x27;</span> =&gt; <span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;B&#x27;</span> =&gt; <span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">var_dump(array_search(<span class="string">&#x27;A&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//string &#x27;A&#x27; </span></span><br><span class="line">var_dump(array_search(<span class="string">&#x27;a&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果第三个参数 strict 被指定为 true，则只有在数据类型和值都一致时才返回相应元素的键名  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>=&gt;<span class="string">&quot;5&quot;</span>,<span class="string">&quot;b&quot;</span>=&gt;<span class="number">5</span>,<span class="string">&quot;c&quot;</span>=&gt;<span class="string">&quot;5&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> array_search(<span class="number">5</span>,<span class="variable">$a</span>,<span class="literal">true</span>);<span class="comment">//b</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果没有加第三个参数，则会将第一次出现该字符串的键返回</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>=&gt;<span class="string">&quot;5&quot;</span>,<span class="string">&quot;b&quot;</span>=&gt;<span class="number">5</span>,<span class="string">&quot;c&quot;</span>=&gt;<span class="string">&quot;5&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> array_search(<span class="number">5</span>,<span class="variable">$a</span>);<span class="comment">//a</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>count()</code>函数返回数组中元素的数目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> count(<span class="variable">$cars</span>);<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>in_array()</code>函数搜索数组中是否存在指定的值,同样区分大小写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line">var_dump(in_array(<span class="string">&quot;BMW&quot;</span>,<span class="variable">$cars</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(in_array(<span class="string">&quot;bmw&quot;</span>,<span class="variable">$cars</span>));<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>list()</code>函数用于在一次操作中给一组变量赋值,</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$listA</span> = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">list</span>(<span class="variable">$a</span>,<span class="variable">$b</span>,<span class="variable">$c</span>) = <span class="variable">$listA</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;<span class="comment">//1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;<span class="comment">//2</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>sort()</code>函数对索引数组进行升序排序,注意该函数会<strong>对原有的数组进行修改</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;zr&#x27;</span>=&gt;<span class="number">70</span>,</span><br><span class="line"><span class="string">&#x27;zs&#x27;</span>=&gt;<span class="number">60</span>,</span><br><span class="line"><span class="string">&#x27;cxy&#x27;</span>=&gt;<span class="number">80</span>,</span><br><span class="line">);</span><br><span class="line">asort(<span class="variable">$a</span>);</span><br><span class="line">print_r(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">/*Array ( [zs] =&gt; 60 [zr] =&gt; 70 [cxy] =&gt; 80 )*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>以后再补</p><h3 id="resouce"><a href="#resouce" class="headerlink" title="resouce"></a>resouce</h3><p>以后再补</p><h3 id="NULL"><a href="#NULL" class="headerlink" title="NULL"></a>NULL</h3><p>以下为null情况</p><blockquote><p>1.null表示一个字符串没有值，表示空<br>2.将变量直接赋值为null<br>3.声明的变量尚未被赋值<br>4.被unset函数销毁的变量 </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//未赋值</span></span><br><span class="line">var_dump(<span class="variable">$a</span>)<span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//被销毁</span></span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$b</span> = <span class="number">1111</span>;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$b</span>);</span><br><span class="line">    var_dump(<span class="variable">$b</span>)<span class="comment">//null</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="变量的相互转换"><a href="#变量的相互转换" class="headerlink" title="变量的相互转换"></a>变量的相互转换</h2><h3 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h3><p>php中的自动类型转换遵从以下转换</p><blockquote><p>1.有布尔值参与运算时，true将转换为整型1，false将转换为0<br>2.有null值参与运算时，null值转换为整型0后再进行运算<br>3.有int类型和float类型参与运算时，先把int类型转换为float类型之后在进行运算   </p></blockquote><p>当然这些都是程序运行中不太可控的一部分，所以写代码时也不要涉及</p><h3 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h3><p>在要转换的变量之前加上括号括起来目标类型<br>注意强制转换并不会改变原本变量的类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = (<span class="keyword">int</span>)<span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;<span class="comment">//0</span></span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//int 0</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="变量的范围"><a href="#变量的范围" class="headerlink" title="变量的范围"></a>变量的范围</h3><h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h4><p>局部变量也成为内部变量。局部变量是在函数内定义的，其作用域仅限于函数内部  </p><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><p>全局变量也称为外部变量，是在函数外边定义，它的作用域是从变量定义处开始到程序结束<br>在php函数中无法使用全局变量，如果想用必须使用<code>global</code>来声明变量  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&quot;MY_NAME&quot;</span>,<span class="string">&quot;ZR&quot;</span>);</span><br><span class="line"><span class="variable">$i</span> = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> MY_NAME;<span class="comment">//ZR</span></span><br><span class="line"><span class="keyword">global</span> <span class="variable">$i</span>;<span class="comment">//要用global关键字来修饰才能在函数内部使用全局变量</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>;<span class="comment">//10</span></span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h4><p>用<code>static</code>修饰的变量叫做静态变量<br>静态变量在函数执行完之后不会立刻消失，当再次调用函数时，静态变量的值会依然存在，并且是在第一次执行函数的时候初始化完成的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">static</span> <span class="variable">$a</span> = <span class="number">10</span>;<span class="comment">//仅仅在第一次执行的时候赋值</span></span><br><span class="line"><span class="comment">//再次调用则不会重新赋值</span></span><br><span class="line">++<span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line">test();<span class="comment">//11</span></span><br><span class="line">test();<span class="comment">//12</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>常量是一个简单的标识符，在php脚本运行期间一个常量一旦被定义，就不能被取消或者改变，常量的作用域时全局，而且常量只能包括bool,int,float,和String类型的数据</p><h3 id="定义和使用"><a href="#定义和使用" class="headerlink" title="定义和使用"></a>定义和使用</h3><p>常量名称的定义和变量的定义相同，只能包含字母数字下划线，并且只能用下划线和字母开头<br>常量一般也是用大写字母来表示<br>以下是几种定义方法  </p><blockquote><p><code>define(常量名称,常量值)</code><br><code>define(&#39;常量名称&#39;,常量值)</code><br><code>define(&quot;常量名称&quot;,常量值)</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&#x27;MY_NAME&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> MY_NAME;<span class="comment">//周睿</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="常量和变量的区别"><a href="#常量和变量的区别" class="headerlink" title="常量和变量的区别"></a>常量和变量的区别</h3><blockquote><p>1.常量前面没有 <code>$</code> 符号<br>2.常量只能用<code>define()</code>定义，不能通过赋值语句<br>3.常量可以不用理会变量范围的规则而在任何地方定义使用<br>4.常量被定义后就不能重新定义或者取消定义<br>5.常量只能包括bool,int,float,和String类型的数据  </p></blockquote><h3 id="预定义常量"><a href="#预定义常量" class="headerlink" title="预定义常量"></a>预定义常量</h3><p>预定义常量就是php内核已经定义好的常量<br>预定义常量是不区分大小写的，而自己定义的常量是区分大小写的<br>其中有的预定义常量是以<code>__</code>开头的,这些预定义常量又被称为<strong>魔术常量</strong>  </p><blockquote><p><strong>__LINE__</strong> :文件中的当前行号<br><strong>__FILE__</strong> :文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名<br><strong>__DIR__</strong>:文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。它等价于 dirname(__FILE__)。除非是根目录，否则目录中名不包括末尾的斜杠<br><strong>__FUNCTION__</strong>:当前函数的名称。匿名函数则为 {closure}。<br><strong>__CLASS__</strong>:当前类的名称。类名包括其被声明的作用区域（例如 Foo\Bar）。注意自 PHP 5.4 起 __CLASS__ 对 trait 也起作用。当用在 trait 方法中时，__CLASS__ 是调用 trait 方法的类的名字<br><strong>__TRAIT__</strong>:Trait 的名字。Trait 名包括其被声明的作用区域（例如 Foo\Bar）<br><strong>__METHOD__</strong>:类的方法名<br><strong>__NAMESPACE__</strong>:当前命名空间的名称  </p></blockquote><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><p>加号<code>+</code>,表示正常地相加就是了..</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> + <span class="variable">$b</span>;<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>减号<code>-</code>,既可以表示取反也可以表示相减<br>对变量取反并不会影响到变量本身</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$c</span> = -<span class="variable">$a</span>;<span class="comment">//减号在这里就是表示取反</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> - <span class="variable">$b</span>;<span class="comment">//-1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>-<span class="variable">$c</span>;<span class="comment">//2</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>乘号<code>*</code>,用于表示相乘</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> * <span class="variable">$b</span>;<span class="comment">//2</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>除号<code>/</code>,表示相除,<strong>注意被除数不能为0</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">4</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> / <span class="variable">$b</span>;<span class="comment">//2</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>取模<code>%</code>,用于取余数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">4</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> % <span class="variable">$b</span>;<span class="comment">//0</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> % <span class="variable">$c</span>;<span class="comment">//1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>连加<code>++</code>,连加可以分为<strong>前连加</strong>和<strong>后连加</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">前连加：先进行运算再返回值</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">echo</span> ++<span class="variable">$a</span>;<span class="comment">//5</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">后连加：先返回值再进行运算</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>++;<span class="comment">//4</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><p>php中的字符串运算符只有一个英文的句号 <code>·</code> ,也叫连接运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="variable">$b</span>;<span class="comment">//周睿zr</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>赋值运算符 <code>=</code> ，用于赋值,左边的操作数必须是变量，右边可以是一个表达式，也可以是一个值，一个变量等等</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>对操作数进行比较，返回<code>true</code>或者<code>false</code>  </p><p><code>==</code>用于判断值是否相同</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">1</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span> == <span class="variable">$b</span>);<span class="comment">//boolen true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>===</code>用于判断值和类型是否相同</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span> === <span class="variable">$b</span>);<span class="comment">//boolean false</span></span><br><span class="line">var_dump(<span class="variable">$b</span> === <span class="variable">$c</span>);<span class="comment">//boolean true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>!=</code>用于判断两边的值是否不相等，如果相等返回<code>false</code>，不相等返回<code>true</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="number">1</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span> != <span class="variable">$b</span>);<span class="comment">//boolean true</span></span><br><span class="line">var_dump(<span class="variable">$a</span> != <span class="variable">$c</span>);<span class="comment">//boolean false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>!==</code>用于判断两边的值和类型是否不相等，如果相等返回<code>false</code>，不相等返回<code>true</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span> !== <span class="variable">$b</span>);<span class="comment">//boolean true</span></span><br><span class="line">var_dump(<span class="variable">$a</span> !== <span class="variable">$c</span>);<span class="comment">//boolean true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>&gt;</code>大于<br><code>&lt;</code>小于<br><code>&lt;=</code>小于等于<br><code>&gt;=</code>大于等于<br>和上面的判断大同小异，就不浪费时间举例子了</p></blockquote><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>对表达式进行逻辑运算，参与运算的表达式是<strong>布尔类型</strong>，所以得到的结果也是<strong>布尔类型</strong><br>其中<code>true</code>和<code>false</code>可以用<code>1</code>和<code>0</code>,<strong>空字符串</strong>，<strong>空数组</strong>等来代替运算，具体可以看<a href="#bool%E7%B1%BB%E5%9E%8B">自动转换</a></p><p><code>and</code>和<code>&amp;&amp;</code>都是表示<strong>逻辑与</strong>运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">一假全假，全真才真</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="literal">true</span>&amp;&amp;<span class="literal">true</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="literal">true</span>&amp;&amp;<span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="literal">false</span>&amp;&amp;<span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="number">1</span>&amp;&amp;<span class="literal">false</span>)<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>or</code>和<code>||</code>都是表示<strong>逻辑或</strong>运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">一真全真，全假才假</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="literal">true</span>||<span class="literal">true</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="literal">true</span>||<span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="literal">false</span>||<span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="number">1</span>||<span class="literal">false</span>)<span class="comment">//true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>xor</code>表示<strong>逻辑异或</strong>,两边表达式的值不一样则返回<code>true</code>，两边值相等则返回<code>false</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="literal">true</span> <span class="keyword">xor</span> <span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="literal">true</span> <span class="keyword">xor</span> <span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="literal">false</span> <span class="keyword">xor</span> <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="number">1</span> <span class="keyword">xor</span> <span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="number">0</span> <span class="keyword">xor</span> <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>!</code>表示<strong>逻辑非</strong>,将原来表达式的值取反</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(!<span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(!<span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(!<span class="number">1</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(!<span class="number">0</span>);<span class="comment">//true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><p>略</p><h3 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h3><p>三元运算符 <code>? : </code><br>格式：表达式1 ? 表达式2 : 表达式3;  </p><p>如果表达式1的值为true,那么就执行表达式2,否则就执行表达式三</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="literal">true</span> ? <span class="number">10</span> : <span class="number">20</span>;<span class="comment">//10</span></span><br><span class="line"><span class="variable">$b</span> = <span class="literal">false</span> ? <span class="number">10</span> : <span class="number">20</span>;<span class="comment">//20</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>``</code>可以把系统命令放在其中执行<br>由于会涉及到跨平台问题，所以几乎不太用  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = `ipconfig`;<span class="comment">//查看本机ip</span></span><br><span class="line">var_dump(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>@</code>屏蔽表达式用于屏蔽错误</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = `ipconfig`;</span><br><span class="line"><span class="keyword">echo</span> @<span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>=&gt;</code>暂时跳过<br><code>-&gt;</code>暂时跳过<br><code>instanceof</code>暂时跳过  </p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p>详见：<a href="https://www.sojson.com/operation/php.html">https://www.sojson.com/operation/php.html</a></p><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><p>对php代码的运行流程进行控制<br>一般来说是自上而下的执行</p><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p><code>if(表达式)&#123;代码块&#125;</code> ，如果表达式的值为<code>true</code>,就执行后面的语句,否则就不执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &lt; <span class="number">60</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &gt;=<span class="number">60</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>if(表达式)&#123;代码块...&#125; else&#123;代码块...&#125;</code>,if中表达式的的值为<code>true</code>,则执行<code>if</code>后面的语句，否则就执行<code>else</code>中的语句块</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &lt; <span class="number">60</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>if(表达式)&#123;代码块...&#125; else if(表达式)&#123;代码块...&#125; else&#123;代码块...&#125;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">80</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &lt; <span class="number">60</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="variable">$a</span>&gt;<span class="number">60</span>&amp;&amp;<span class="variable">$a</span>&lt;=<span class="number">90</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;良好&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;优秀&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><p><code>case</code>语句会匹配<code>switch</code>表达式中的值，如果相同就执行对应语句的代码块，如果没匹配到则执行<code>defaut</code>代码块中的值<br><code>break</code>用于中断当前循环，不要忘记使用它<br><code>switch</code>中的表达式最好使用字符串或者整型<br>如果某个<code>case</code>语句后面没有接代码块，就说明这个语句块的内容是同下  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">语句块<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">2</span>:</span><br><span class="line">语句块<span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">3</span>:</span><br><span class="line">语句块<span class="number">3</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">语句块n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">80</span>;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$a</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">70</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="number">70</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">80</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="number">80</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">90</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="number">90</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while(表达式)&#123;</span><br><span class="line">循环体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当表达式为true,就执行循环体，每次执行完都会对while中的表达式再进行一次判断，判断其是<code>true</code>或<code>false</code>,如果为<code>true</code>就继续执行其循环体,如果为<code>false</code>就退出循环</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="variable">$a</span> &gt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="variable">$a</span>--;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;<span class="comment">//9876543210</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while"><a href="#do-while" class="headerlink" title="do while"></a>do while</h3><p>格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">do&#123;</span><br><span class="line">循环体</span><br><span class="line">&#125;while(表达式)</span><br></pre></td></tr></table></figure><p>与while循环不同的是，while循环会先进行判断再进入循环，而do while是先进入循环再进行判断,do while语句至少会执行一次</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="variable">$a</span>--;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="variable">$a</span>&gt;<span class="number">0</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><p>格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(表达式a;表达式b;表达式c)&#123;</span><br><span class="line">循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>表达式a</strong>一般用于循环变量的初始化，<strong>表达式b</strong>会放判断语句，用于判断循环是否继续进行,<strong>表达式c</strong>用于操作表达式a中定义的变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">9</span> ; <span class="variable">$i</span>&gt;=<span class="number">0</span> ; <span class="variable">$i</span>--)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>;<span class="comment">//9876543210</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>各类循环之间可以相互嵌套</strong></p><h2 id="特殊的循环控制语句"><a href="#特殊的循环控制语句" class="headerlink" title="特殊的循环控制语句"></a>特殊的循环控制语句</h2><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p><code>break</code>可以用于几乎所有的语句中，它的作用是可以中断循环，如果再break后接上数字，就意味着跳出几层循环。</p><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><p><code>countinue</code>只能用在循环语句中，可以用于跳出当前循环而不是结束整个循环语句</p><h3 id="exit-语句"><a href="#exit-语句" class="headerlink" title="exit()语句"></a>exit()语句</h3><p><code>exit()</code>用于结束当前整个程序的的执行,等同于<code>die()</code>语句</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数的调用和声明"><a href="#函数的调用和声明" class="headerlink" title="函数的调用和声明"></a>函数的调用和声明</h3><p>普普通通的声明和调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;你好&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line">test();</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//$a和$b为形参</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$a</span>+<span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> test(<span class="number">1</span>,<span class="number">2</span>);<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="参数的传递"><a href="#参数的传递" class="headerlink" title="参数的传递"></a>参数的传递</h3><p><strong>按值传递参数</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$i</span></span>)</span>&#123;</span><br><span class="line">++<span class="variable">$i</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line">test(<span class="variable">$a</span>);<span class="comment">//11</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;<span class="comment">//10</span></span><br><span class="line"><span class="comment">//对形参的操作不会影响到实参的值</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>按引用操作参数</strong><br>用<code>&amp;</code>时传入的是变量的地址值,等同于操作实际变量本身<br><?php    function test(&$a){        echo ++$a;    }    $a = 10;    test($a);//11    echo($a);//11?><br><strong>参数默认值</strong><br>相当于给形参设立了一个默认值，在没有参数时直接使用默认值参加运算</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$a</span> = <span class="number">10</span></span>)</span>&#123;</span><br><span class="line">++<span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>);</span><br><span class="line">&#125;</span><br><span class="line">test();<span class="comment">//11</span></span><br><span class="line">test(<span class="number">20</span>)<span class="comment">//21</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>阴 间 传 参</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span> = <span class="number">10</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>+<span class="variable">$b</span>);</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">20</span>)<span class="comment">//30</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>当然这里的20时传给$a的,在搞这种阴间传参时记得遵从<strong>从右往左设置默认值</strong>这个顺序，写成如下就直接报错</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$a</span>=<span class="number">10</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>+<span class="variable">$b</span>);</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">20</span>)<span class="comment">//出错，$b这时候实际上是没值的</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>可变长度参数</strong><br>php自己提供的参数，直接拿来用就行,一共有三个,他们分别是<code>fun_get_args()</code>,<code>fun_get_arg()</code>,<code>func_num_args()</code>,<br>这三个函数可以使用在自定义函数内部，能够返回一些关于参数的信息  </p><blockquote><p><code>fun_get_args()</code>:获取所有参数并以数组的形式返回<br><code>fun_get_arg()</code>:根据下标获取对应的参数并返回<br><code>func_num_args()</code>:返回传入参数的个数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">var_dump(func_get_args());</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=4)</span></span><br><span class="line"><span class="comment">  0 =&gt; int 1</span></span><br><span class="line"><span class="comment">  1 =&gt; int 2</span></span><br><span class="line"><span class="comment">  2 =&gt; int 3</span></span><br><span class="line"><span class="comment">  3 =&gt; int 4</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">var_dump(func_get_arg(<span class="number">2</span>));<span class="comment">//3</span></span><br><span class="line">var_dump(func_num_args());<span class="comment">//4</span></span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="可变函数（变量函数）"><a href="#可变函数（变量函数）" class="headerlink" title="可变函数（变量函数）"></a>可变函数（变量函数）</h3><p>已经不知道怎么吐槽这种写法了。。我有点没办法接受这种写法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;我是test函数&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>();<span class="comment">//我是test函数</span></span><br><span class="line"><span class="string">&#x27;test&#x27;</span>();<span class="comment">//我是test函数</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h3><p>不停调用自己，就这样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$n</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$n</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$n</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">test(<span class="variable">$n</span>-<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;结束&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">3</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">运行结果为<span class="number">3210</span>结束</span><br></pre></td></tr></table></figure><h3 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h3><p>php提供了一些现成的函数给我们使用，如<code>echo()</code>,<code>unset()</code>等。<br> 还有一些函数需要开启特定的php拓展模块，否则会得到‘未定义函数’的错误</p><h2 id="日期与时间"><a href="#日期与时间" class="headerlink" title="日期与时间"></a>日期与时间</h2><p> 在php中可以使用相关函数来获取服务器的时间或日期。对日期类型的数据进行各种处理来满足程序的需要</p><h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><p> php默认时区未UTC<br> 可以使用方法<code>date_default_timezone_set(&#39;Asia/Shanghai&#39;);</code>来将时区设置为亚洲上海<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_set(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);<span class="comment">//设置时区</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="获取UNIX时间戳"><a href="#获取UNIX时间戳" class="headerlink" title="获取UNIX时间戳"></a>获取UNIX时间戳</h3><p> UNIX时间戳:从unix纪元（格林威治时间1970年1月1日00时00分00秒）开始到当前的秒数<br>可以使用<code>time()</code>方法获取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(time());<span class="comment">//int 1621944661</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="获取指定时间的UNIX时间戳"><a href="#获取指定时间的UNIX时间戳" class="headerlink" title="获取指定时间的UNIX时间戳"></a>获取指定时间的UNIX时间戳</h3><p>可以使用<code>mktime()</code>方法来获取指定时间的时间戳  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2020</span>));</span><br><span class="line"><span class="comment">//2020年10月1日0时0分0秒时间戳为1601510400</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>也可以使用上述两种方法来计算距离某个日期的天数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_get(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span> = var_dump(mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2021</span>));</span><br><span class="line"><span class="comment">//2020年10月1日0时0分0秒时间戳为1601510400</span></span><br><span class="line"><span class="variable">$b</span> = time();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;距离2021年国庆节还有&#x27;</span>.((<span class="variable">$b</span>-<span class="variable">$a</span>)/<span class="number">60</span>/<span class="number">60</span>/<span class="number">24</span>).<span class="string">&#x27;天&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="从UNIX获取时间信息"><a href="#从UNIX获取时间信息" class="headerlink" title="从UNIX获取时间信息"></a>从UNIX获取时间信息</h3><p><code>date()</code>:格式化一个本地时间或日期  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_set(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);<span class="comment">//2021-05-25 20:29:21</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="获取UNIX时间戳和微秒数"><a href="#获取UNIX时间戳和微秒数" class="headerlink" title="获取UNIX时间戳和微秒数"></a>获取UNIX时间戳和微秒数</h3><p><code>microtime()</code>:获取UNIX时间戳和微秒数    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(microtime());</span><br><span class="line"><span class="comment">//string &#x27;0.33201300 1621945933&#x27; (length=21)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果传个参数为<code>true</code>，则会返回浮点类型  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(microtime(<span class="literal">true</span>));</span><br><span class="line"><span class="comment">//float 1621946057.2207</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>php可以在服务器上进行生成，创建，修改，编辑，删除等文件属性操作</p><h3 id="判断普通文件和目录（文件夹）"><a href="#判断普通文件和目录（文件夹）" class="headerlink" title="判断普通文件和目录（文件夹）"></a>判断普通文件和目录（文件夹）</h3><p><code>is_file()</code>:判定给定的文件名是否为一个正常的文件<br><code>is_dir()</code>:判断给定文件名是否是一个目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(is_file(<span class="string">&#x27;../myPhp&#x27;</span>));<span class="comment">//false</span></span><br><span class="line">var_dump(is_dir(<span class="string">&#x27;../myPhp&#x27;</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(is_file(<span class="string">&#x27;../myPhp/myPhp/second.php&#x27;</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(is_dir(<span class="string">&#x27;../myPhp/myPhp/second.php&#x27;</span>));<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文件的属性"><a href="#文件的属性" class="headerlink" title="文件的属性"></a>文件的属性</h3><p><code>file_exists()</code>:判断文件是否存在,存在返回<code>true</code>，不存在则返回<code>false</code><br><code>filesize()</code>:取得普通文件的大小(以整型返回字节数大小)<br><code>is_readable()</code>:判断文件是否可读<br><code>is_writable</code>:判断文件是否可读<br><code>fliectime()</code>:获取文件的创建时间(以时间戳形式返回)<br><code>filemtime()</code>:获取文件的修改时间(以时间戳形式返回)<br><code>fileatime()</code>:获取文件上次的访问时间<br><code>stat()</code>:获取文件大部分的属性值(对应的属性值可以查看<a href="https://www.runoob.com/php/func-filesystem-stat.html">php stat函数</a>)  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_set(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line">var_dump(file_exists(<span class="string">&#x27;../myPhp/second.php&#x27;</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(filesize(<span class="string">&#x27;../myPhp/imgs/1.png&#x27;</span>));<span class="comment">//int 19179</span></span><br><span class="line"><span class="keyword">echo</span>(date(<span class="string">&#x27;Y-m-d G:i:s&#x27;</span>,filectime(<span class="string">&#x27;../myPhp/imgs/1.png&#x27;</span>)));<span class="comment">//2021-05-27 16:37:58</span></span><br><span class="line">var_dump(stat(<span class="string">&#x27;../myPhp/imgs/1.png&#x27;</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=26)</span></span><br><span class="line"><span class="comment">  0 =&gt; int 2</span></span><br><span class="line"><span class="comment">  1 =&gt; int 0</span></span><br><span class="line"><span class="comment">  2 =&gt; int 33206</span></span><br><span class="line"><span class="comment">  3 =&gt; int 1</span></span><br><span class="line"><span class="comment">  4 =&gt; int 0</span></span><br><span class="line"><span class="comment">  5 =&gt; int 0</span></span><br><span class="line"><span class="comment">  6 =&gt; int 2</span></span><br><span class="line"><span class="comment">  7 =&gt; int 19179</span></span><br><span class="line"><span class="comment">  8 =&gt; int 1622105682</span></span><br><span class="line"><span class="comment">  9 =&gt; int 1605002378</span></span><br><span class="line"><span class="comment">  10 =&gt; int 1622104678</span></span><br><span class="line"><span class="comment">  11 =&gt; int -1</span></span><br><span class="line"><span class="comment">  12 =&gt; int -1</span></span><br><span class="line"><span class="comment">  &#x27;dev&#x27; =&gt; int 2</span></span><br><span class="line"><span class="comment">  &#x27;ino&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  &#x27;mode&#x27; =&gt; int 33206</span></span><br><span class="line"><span class="comment">  &#x27;nlink&#x27; =&gt; int 1</span></span><br><span class="line"><span class="comment">  &#x27;uid&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  &#x27;gid&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  &#x27;rdev&#x27; =&gt; int 2</span></span><br><span class="line"><span class="comment">  &#x27;size&#x27; =&gt; int 19179</span></span><br><span class="line"><span class="comment">  &#x27;atime&#x27; =&gt; int 1622105682</span></span><br><span class="line"><span class="comment">  &#x27;mtime&#x27; =&gt; int 1605002378</span></span><br><span class="line"><span class="comment">  &#x27;ctime&#x27; =&gt; int 1622104678</span></span><br><span class="line"><span class="comment">  &#x27;blksize&#x27; =&gt; int -1</span></span><br><span class="line"><span class="comment">  &#x27;blocks&#x27; =&gt; int -1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="目录的基本操作"><a href="#目录的基本操作" class="headerlink" title="目录的基本操作"></a>目录的基本操作</h3><p><code>basename()</code>:返回路径中的文件名部分<br><code>dirname()</code>:返回路径中的目录部分<br><code>pathinfo()</code>:返回文件路径的信息  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="keyword">__FILE__</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//C:\wamp64\www\myPhp\文件目录操作.php</span></span><br><span class="line"><span class="keyword">echo</span>(basename(<span class="keyword">__FILE__</span>));<span class="comment">//文件目录操作.php</span></span><br><span class="line">var_dump(pathinfo(<span class="keyword">__FILE__</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=4)</span></span><br><span class="line"><span class="comment">  &#x27;dirname&#x27; =&gt; string &#x27;C:\wamp64\www\myPhp&#x27; (length=19)</span></span><br><span class="line"><span class="comment">  &#x27;basename&#x27; =&gt; string &#x27;文件目录操作.php&#x27; (length=22)</span></span><br><span class="line"><span class="comment">  &#x27;extension&#x27; =&gt; string &#x27;php&#x27; (length=3)</span></span><br><span class="line"><span class="comment">  &#x27;filename&#x27; =&gt; string &#x27;文件目录操作&#x27; (length=18)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>opendir()</code>:打开目录句柄<br><code>readdir()</code>:从目录句柄中读取条目，返回目录中的下一个文件的文件名<br><code>rewinddir()</code>:倒回目录句柄<br><code>closedir()</code>:关闭目录句柄  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dir</span> = opendir(<span class="string">&#x27;../myPhp&#x27;</span>);</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:13:string &#x27;.&#x27; (length=1)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:14:string &#x27;..&#x27; (length=2)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:15:string &#x27;font&#x27; (length=4)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:16:string &#x27;imgs&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">rewinddir(<span class="variable">$dir</span>);<span class="comment">//倒回到目录句柄</span></span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:15:string &#x27;.&#x27; (length=1)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:16:string &#x27;..&#x27; (length=2)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:17:string &#x27;font&#x27; (length=4)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:18:string &#x27;imgs&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">closedir();<span class="comment">//关闭目录句柄，无法读取到目录句柄</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>mkdir()</code>:新建目录,创建成功返回<code>true</code>,创建失败返回<code>false</code>;其中的路径可以填相对路径，也可以填绝对路径;默认访问权为 <strong>0777</strong>,代表<strong>可读可写</strong>;第三个参数为选填参数，默认为<code>false</code>,表示无法创建多层文件夹。若参数为<code>true</code>,则代表可以创建多层目录<br><code>rmdir()</code>:删除指定的<strong>空目录</strong><br><code>scandir()</code>:列出指定路径中的文件和目录,返回为数组  </p><h3 id="文件的基本操作"><a href="#文件的基本操作" class="headerlink" title="文件的基本操作"></a>文件的基本操作</h3><p><code>fopen()</code>:打开文件或者url,第二个参数可以选择打开文件的方式</p><table><thead><tr><th align="center">模式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">r</td><td align="left">只读方式打开，将文件指针指向文件头</td></tr><tr><td align="center">r+</td><td align="left">读写方式打开，将文件指针指向文件头</td></tr><tr><td align="center">w</td><td align="left">写入方式打开，清除文件内容，如果文件不存在则尝试创建之</td></tr><tr><td align="center">w+</td><td align="left">读写方式打开，清除文件内容，如果文件不存在则尝试创建之</td></tr><tr><td align="center">a</td><td align="left">写入方式打开，将文件指针指向文件末尾进行写入，如果文件不存在则尝试创建之</td></tr><tr><td align="center">a+</td><td align="left">读写方式打开，通过将文件指针指向文件末尾进行写入来保存文件内容</td></tr><tr><td align="center">x</td><td align="left">创建一个新的文件并以写入方式打开，如果文件已存在则返回 <code>FALSE</code> 和一个错误</td></tr><tr><td align="center">x+</td><td align="left">创建一个新的文件并以读写方式打开，如果文件已存在则返回 FALSE 和一个错误</td></tr></tbody></table><p><code>fread()</code>:读取文件<br><code>fgets()</code>:从文件指针中读取一行</p><h3 id="文件的上传"><a href="#文件的上传" class="headerlink" title="文件的上传"></a>文件的上传</h3><p>$_FILES数组内容如下: </p><blockquote><p>$_FILES[‘myFile’][‘name’] 客户端文件的原名称。<br>$_FILES[‘myFile’][‘type’] 文件的 MIME 类型，需要浏览器提供该信息的支持，例如”image/gif”。<br>$_FILES[‘myFile’][‘size’] 已上传文件的大小，单位为字节。<br>$_FILES[‘myFile’][‘tmp_name’] 文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php.ini的upload_tmp_dir 指定，但 用 putenv() 函数设置是不起作用的。<br>$_FILES[‘myFile’][‘error’] 和该文件上传相关的错误代码。[‘error’] 是在 PHP 4.2.0 版本中增加的。  </p></blockquote><h4 id="php的文件上传处理函数"><a href="#php的文件上传处理函数" class="headerlink" title="php的文件上传处理函数"></a>php的文件上传处理函数</h4><p>文件上传处理函数主要用于上传文件的后续处理<br><code>is_uploaded_file()</code>:判断指定的文件是否通过HTTP POST上传的<br><code>move_uploaded_file()</code>:文件上传后，首先会存储于服务器的临时目录中，可以使用    该函数上传的文件移动到新位置。文件被上传结束后，默认地被存储在了临时目录中，这时您必须将它从临时目录中删除或移动到其它地方，如果没有，则会被删除。也就是不管是否上传成功，脚本执行完后临时目录里的文件肯定会被删除。所以在删除之前要用PHP的 <code>copy()</code> 函数将它复制到其它位置，此时，才算完成了上传文件过程    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//判断上传的文件是否存在(文件通过submit上传)</span></span><br><span class="line">    <span class="keyword">if</span>(is_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&#x27;myfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">        <span class="comment">//如果存在则判断文件是否通过http post上传（安全性）</span></span><br><span class="line">        <span class="variable">$arr</span> = pathinfo(<span class="variable">$_FILES</span>[<span class="string">&#x27;myfile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="comment">//获取原本文件的扩展名</span></span><br><span class="line">        <span class="variable">$newName</span> = date(<span class="string">&#x27;Ymdhis&#x27;</span>).rand(<span class="number">1000</span>,<span class="number">9099</span>);</span><br><span class="line">        <span class="comment">//防止文件名字重复添加文件的拓展名</span></span><br><span class="line">        var_dump(move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&#x27;myfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],<span class="string">&#x27;a&#x27;</span>.<span class="variable">$newName</span>.<span class="string">&#x27;.&#x27;</span>.<span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>]));</span><br><span class="line">        <span class="comment">//如果文件存在且通过post上传,则将该文件移动到当前文件中（也可以指定路径）并命名为a</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;存在安全问题&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>html代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>上传页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;上传.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;myfile&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文件的下载"><a href="#文件的下载" class="headerlink" title="文件的下载"></a>文件的下载</h3><p>文件的下载一共分为四步<br>1.发送指定的MIME类型的头信息<br>2.指定下载文件的描述<br>3.指定下载文件的大小<br>4.读取文件内容至输出缓冲区  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;1.rar&#x27;</span>;</span><br><span class="line"><span class="variable">$finfo</span> =  finfo_open(FILEINFO_MIME_TYPE);</span><br><span class="line"><span class="comment">//创建一个 fileinfo 资源</span></span><br><span class="line"><span class="variable">$mimeType</span> = finfo_file(<span class="variable">$finfo</span>,<span class="variable">$file</span>);</span><br><span class="line"><span class="comment">//传入文件的finfo类型和文件的后缀名，获取文件的mime类型</span></span><br><span class="line">finfo_close(<span class="variable">$finfo</span>);</span><br><span class="line"><span class="comment">//关闭finfo流</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:&#x27;</span>.<span class="variable">$mimeType</span>);</span><br><span class="line">header(<span class="string">&#x27;Content-Disposition:attachment;filename=&#x27;</span>.basename(<span class="variable">$file</span>));</span><br><span class="line"><span class="comment">//指定下载文件的描述</span></span><br><span class="line">header(<span class="string">&#x27;Content-length:&#x27;</span>.filesize(<span class="variable">$file</span>));</span><br><span class="line"><span class="comment">//获取文件的大小  </span></span><br><span class="line">readfile(<span class="variable">$file</span>);</span><br><span class="line"><span class="comment">//读取文件内容输出至缓冲区</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h2><p>Cookie，有时也用其复数形式 Cookies。类型为“小型文本文件”，是某些网站为了辨别用户身份，进行Session跟踪而储存在用户本地终端上的数据（通常经过加密），由用户客户端计算机暂时或永久保存的信息<br>在php中cookie是存在当前目录中，如果要使用<code>setcookie()</code>删除某一个cookie，需要保证cookie的路径一致<br><code>setcookie()</code>:向客户端中设置cookie，具体参数可见<a href="https://www.w3school.com.cn/php/func_http_setcookie.asp">setcookie()函数详解</a><br><code>$_COOKIE</code>:在服务端上读取cookie的内容<br><code>setcookie(&quot;member&quot;,time()-1)</code>:删除cookie  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>,time()+<span class="number">3600</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;12&#x27;</span>,time()+<span class="number">3600</span>);</span><br><span class="line"><span class="comment">//设置两个个cookie，有效时间为1小时</span></span><br><span class="line">var_dump(<span class="variable">$_COOKIE</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=2)</span></span><br><span class="line"><span class="comment">  &#x27;name&#x27; =&gt; string &#x27;周睿&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  &#x27;age&#x27; =&gt; string &#x27;周睿&#x27; (length=6)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然cookie也可以通过多维数组来设置  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;person[name]&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>,time()+<span class="number">3600</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;person[age]&#x27;</span>,<span class="string">&#x27;19&#x27;</span>,time()+<span class="number">3600</span>);</span><br><span class="line"><span class="comment">//设置两个cookie，有效时间为1小时</span></span><br><span class="line">var_dump(<span class="variable">$_COOKIE</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>删除cookie则是<code>setcookie()</code>方法的另一种运用方式  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;person[name]&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>,time()-<span class="number">100</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;person[age]&#x27;</span>,<span class="string">&#x27;19&#x27;</span>,time()-<span class="number">100</span>);</span><br><span class="line"><span class="comment">//删除cookie，利用setcookie()直接将原本的cookie过期</span></span><br><span class="line">var_dump(<span class="variable">$_COOKIE</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然这里也可以使用循环来一次性清空所有的cookie</p><h2 id="SESSION"><a href="#SESSION" class="headerlink" title="SESSION"></a>SESSION</h2><p>Session：在计算机中，尤其是在网络应用中，称为“会话控制”。Session对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的Web页之间跳转时，存储在Session对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web页时，如果该用户还没有会话，则Web服务器将自动创建一个 Session对象。当会话过期或被放弃后，服务器将终止该会话。<br><code>session_start()</code>:开启一个会话,或返回已经存在的对话<br><code>session_unset()</code>:会释放当前会话注册的所有会话变量<br><code>session_destroy()</code>:销毁session中的所有数据  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;age&#x27;</span>] = <span class="number">12</span>;</span><br><span class="line">session_unset();</span><br><span class="line">session_destroy();</span><br><span class="line">var_dump(<span class="variable">$_SESSION</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=2)</span></span><br><span class="line"><span class="comment">  &#x27;name&#x27; =&gt; string &#x27;周睿&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  &#x27;age&#x27; =&gt; int 12</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(<span class="variable">$_COOKIE</span>);<span class="comment">//查看sessionId</span></span><br><span class="line"><span class="comment">/*&#x27;PHPSESSID&#x27; =&gt; string &#x27;7odiitrhvpdu0f44ai2eajo4ps&#x27; (length=26)*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;初入php&quot;&gt;&lt;a href=&quot;#初入php&quot; class=&quot;headerlink&quot; title=&quot;初入php&quot;&gt;&lt;/a&gt;初入php&lt;/h2&gt;&lt;p&gt;php代码可以嵌入到html代码中的任何位置，并且可以嵌入任意多个&lt;br&gt;php语言标记为&lt;code&gt;&amp;lt;?ph</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
</feed>
