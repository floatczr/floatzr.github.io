<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>floatc.zip</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-12-09T02:10:25.238Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>floatc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构与算法</title>
    <link href="http://example.com/2021/11/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2021/11/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</id>
    <published>2021-11-24T03:44:38.000Z</published>
    <updated>2021-12-09T02:10:25.238Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数组（未实现自动增长）"><a href="#数组（未实现自动增长）" class="headerlink" title="数组（未实现自动增长）"></a>数组（未实现自动增长）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Arr</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span>* pBase;<span class="comment">//首元素地址</span></span><br><span class="line">    <span class="keyword">int</span> len;<span class="comment">//数组长度</span></span><br><span class="line">    <span class="keyword">int</span> cnt;<span class="comment">//有效元素个数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_array</span><span class="params">(struct Arr*,<span class="keyword">int</span>)</span></span>;<span class="comment">//初始化数组</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">append_array</span><span class="params">(struct Arr*,<span class="keyword">int</span>)</span></span>;<span class="comment">//向数组末尾添加元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insert_array</span><span class="params">(struct Arr*,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;<span class="comment">//向数组中插入元素,pos的值从1开始</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">delete_array</span><span class="params">(struct Arr*,<span class="keyword">int</span>,<span class="keyword">int</span>*)</span></span>;<span class="comment">//删除数组中的元素并返回删除的值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(struct Arr*,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_empty</span><span class="params">()</span></span>;<span class="comment">//判断数组是否为空  </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_full</span><span class="params">(struct Arr*)</span></span>;<span class="comment">//判断数组是否满</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_array</span><span class="params">(struct Arr*)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(struct Arr*)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inversion_array</span><span class="params">(struct Arr*)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Arr</span> <span class="title">arr</span>;</span></span><br><span class="line">    <span class="keyword">int</span> lenth;</span><br><span class="line">    <span class="comment">// printf(&quot;请输入数组长度:&quot;);</span></span><br><span class="line">    <span class="comment">// scanf(&quot;%d&quot;,&amp;lenth);</span></span><br><span class="line">    <span class="comment">// init_array(&amp;arr,lenth);</span></span><br><span class="line">    init_array(&amp;arr,<span class="number">4</span>);</span><br><span class="line">    append_array(&amp;arr,<span class="number">33</span>);</span><br><span class="line">    append_array(&amp;arr,<span class="number">22</span>);</span><br><span class="line">    append_array(&amp;arr,<span class="number">100</span>);</span><br><span class="line">    insert_array(&amp;arr,<span class="number">2</span>,<span class="number">99</span>);</span><br><span class="line">    show_array(&amp;arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> pVal = <span class="number">0</span>;</span><br><span class="line">    delete_array(&amp;arr,<span class="number">1</span>,&amp;pVal);</span><br><span class="line">    show_array(&amp;arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,pVal);</span><br><span class="line"></span><br><span class="line">    inversion_array(&amp;arr);</span><br><span class="line">    show_array(&amp;arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    sort_array(&amp;arr);</span><br><span class="line">    show_array(&amp;arr);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_array</span><span class="params">(struct Arr* pArr,<span class="keyword">int</span> lenth)</span></span>&#123;</span><br><span class="line">    pArr-&gt;pBase = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*lenth);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pArr-&gt;pBase)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;动态内存分配失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        pArr-&gt;len = lenth;</span><br><span class="line">        pArr-&gt;cnt = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_empty</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isEmpty = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (pArr-&gt;cnt == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isEmpty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_empty(pArr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;数组为空\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pArr-&gt;cnt; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,pArr-&gt;pBase[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_full</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isFull = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (pArr-&gt;cnt == pArr-&gt;len)</span><br><span class="line">    &#123;</span><br><span class="line">        isFull = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isFull;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">append_array</span><span class="params">(struct Arr* pArr,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isAppend = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (is_full(pArr))</span><br><span class="line">    &#123;</span><br><span class="line">        isAppend =  <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 假设当前数组有0个元素,cnt=0,向数组插入元素1</span></span><br><span class="line"><span class="comment">     * p[0] = ? cnt = 0   =&gt;   p[0] = 1 cnt = 1</span></span><br><span class="line"><span class="comment">     * p[1] = ? cnt = 1   =&gt;   p[1] = 2 cnt = 2</span></span><br><span class="line"><span class="comment">     * 所以可以得出结论每次插入的位置的下标和cnt相同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    pArr-&gt;pBase[pArr-&gt;cnt] = val;</span><br><span class="line">    pArr-&gt;cnt++;</span><br><span class="line">    <span class="keyword">return</span> isAppend;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insert_array</span><span class="params">(struct Arr* pArray,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isInsert = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (is_full(pArray))</span><br><span class="line">    &#123;</span><br><span class="line">        isInsert = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( pos&lt;<span class="number">1</span> || pos&gt;pArray-&gt;cnt+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        isInsert = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = pArray-&gt;cnt<span class="number">-1</span>; i &gt;= pos<span class="number">-1</span>; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        pArray-&gt;pBase[i+<span class="number">1</span>] = pArray-&gt;pBase[i];</span><br><span class="line">    &#125;</span><br><span class="line">    pArray-&gt;pBase[pos<span class="number">-1</span>] = val;</span><br><span class="line">    pArray-&gt;cnt++;</span><br><span class="line">    <span class="keyword">return</span> isInsert;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">delete_array</span><span class="params">(struct Arr* pArr,<span class="keyword">int</span> pos,<span class="keyword">int</span>* pVal)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isDelete = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (is_empty(pArr))</span><br><span class="line">    &#123;</span><br><span class="line">        isDelete = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pos&lt;<span class="number">1</span> || pos&gt;pArr-&gt;cnt)</span><br><span class="line">    &#123;</span><br><span class="line">        isDelete = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    *pVal = pArr-&gt;pBase[pos<span class="number">-1</span>];<span class="comment">//保存被删除元素的地址</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = pos<span class="number">-1</span>; i &lt; pArr-&gt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        pArr-&gt;pBase[i] = pArr-&gt;pBase[i];</span><br><span class="line">    &#125;</span><br><span class="line">    pArr-&gt;cnt--;</span><br><span class="line">    <span class="keyword">return</span> isDelete;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(struct Arr* pArr,<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pArr-&gt;pBase[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inversion_array</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> j = pArr-&gt;cnt - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//第一个与倒数第一个交换，第二个与倒数第二个交换</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">       t = pArr-&gt;pBase[j];</span><br><span class="line">       pArr-&gt;pBase[j] = pArr-&gt;pBase[i];</span><br><span class="line">       pArr-&gt;pBase[i] = t;</span><br><span class="line">       i++;</span><br><span class="line">       j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_array</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="comment">//升序冒泡</span></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pArr-&gt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; pArr-&gt;cnt; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pArr-&gt;pBase[i] &gt; pArr-&gt;pBase[j])</span><br><span class="line">            &#123;</span><br><span class="line">                t = pArr-&gt;pBase[i];</span><br><span class="line">                pArr-&gt;pBase[i] = pArr-&gt;pBase[j];</span><br><span class="line">                pArr-&gt;pBase[j] = t;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h3><p>与数组不同，链表的地址并不连续，这意味着链表可以更加灵活地使用内存。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">pNext</span>;</span></span><br><span class="line">&#125;NODE, *PNODE;</span><br><span class="line"></span><br><span class="line"><span class="function">PNODE <span class="title">create_list</span><span class="params">()</span></span>;<span class="comment">//创建链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse_list</span><span class="params">(PNODE)</span></span>;<span class="comment">//遍历输出链表元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_empty</span><span class="params">(PNODE pHead)</span></span>;<span class="comment">//判断链表是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">length_list</span><span class="params">(PNODE)</span></span>;<span class="comment">//判断链表长度</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insert_list</span><span class="params">(PNODE,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;<span class="comment">//先链表种插入元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">delete_list</span><span class="params">(PNODE,<span class="keyword">int</span>,<span class="keyword">int</span>*)</span></span>;<span class="comment">//删除元素，同时保存被删除的元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_list</span><span class="params">(PNODE)</span></span>;<span class="comment">//链表排序</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    PNODE pHead = <span class="literal">NULL</span>;</span><br><span class="line">    pHead = create_list();</span><br><span class="line">    sort_list(pHead);</span><br><span class="line">    insert_list(pHead,<span class="number">2</span>,<span class="number">22</span>);</span><br><span class="line">    traverse_list(pHead);</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">if</span> (delete_list(pHead,<span class="number">2</span>,&amp;val))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;删除失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function">PNODE <span class="title">create_list</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">int</span> val;<span class="comment">//用户输入的值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化头节点</span></span><br><span class="line">    PNODE pHead = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//pTail永远指向最后一个节点</span></span><br><span class="line">    PNODE pTail = pHead;</span><br><span class="line">    pTail-&gt;pNext = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化节点</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入链表长度&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;len);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        PNODE pNew = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">NULL</span> == pNew)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个链表的数据&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;val);</span><br><span class="line">        pNew-&gt;data = val;</span><br><span class="line">        pNew-&gt;pNext = <span class="literal">NULL</span>; </span><br><span class="line">        pTail-&gt;pNext = pNew;</span><br><span class="line">        pTail = pNew;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse_list</span><span class="params">(PNODE pHead)</span></span>&#123;</span><br><span class="line">    PNODE p = pHead-&gt;pNext;<span class="comment">//注意头节点没有val</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">NULL</span>!=p) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p-&gt;data);</span><br><span class="line">            p = p-&gt;pNext;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_empty</span><span class="params">(PNODE pHead)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isEmpty;</span><br><span class="line">    <span class="keyword">if</span> (pHead-&gt;pNext == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isEmpty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">length_list</span><span class="params">(PNODE pHead)</span></span>&#123;</span><br><span class="line">    PNODE p = pHead-&gt;pNext;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        len++;</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_list</span><span class="params">(PNODE pHead)</span></span>&#123;</span><br><span class="line">    <span class="comment">//升序冒泡</span></span><br><span class="line">    <span class="keyword">int</span> i,j,t;</span><br><span class="line">    <span class="keyword">int</span> length = length_list(pHead);</span><br><span class="line">    PNODE p,q;</span><br><span class="line">    <span class="comment">// 第一层循环是有判断有多少个数参加循环</span></span><br><span class="line">    <span class="comment">// 第二层循环是判断每一个数要循环多少次</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>,p = pHead-&gt;pNext; i &lt; length<span class="number">-1</span>; i++,p = p-&gt;pNext) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = i+<span class="number">1</span>,q = p-&gt;pNext; j &lt; length; j++,q = q-&gt;pNext)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;data &gt; q-&gt;data)</span><br><span class="line">            &#123;</span><br><span class="line">                t = p-&gt;data;</span><br><span class="line">                p-&gt;data = q-&gt;data;</span><br><span class="line">                q-&gt;data = t;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insert_list</span><span class="params">(PNODE pHead,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="comment">//无需判断链表是否满，只要判断其插入位置前所有节点的指针域是否为null即可</span></span><br><span class="line">    <span class="keyword">bool</span> isInsert = <span class="literal">true</span>;</span><br><span class="line">    PNODE p = pHead;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//每遍历一次，p就指向下一个节点，完成时p指向pos-1个节点    </span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">NULL</span>!=p &amp;&amp; i&lt;pos<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//防止负数和空指针</span></span><br><span class="line">    <span class="keyword">if</span> (i&gt;pos<span class="number">-1</span> || <span class="literal">NULL</span>==p)</span><br><span class="line">    &#123;</span><br><span class="line">        isInsert = <span class="literal">false</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    PNODE pNew = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pNew)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    pNew-&gt;data = val;</span><br><span class="line">    pNew-&gt;pNext = p-&gt;pNext;</span><br><span class="line">    p-&gt;pNext = pNew;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> isInsert;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">delete_list</span><span class="params">(PNODE pHead,<span class="keyword">int</span> pos,<span class="keyword">int</span>* pVal)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isDelete = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    PNODE p = pHead;</span><br><span class="line">    <span class="comment">//要删除的元素必须存在</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">NULL</span>!=p-&gt;pNext &amp;&amp; i&lt;pos<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i&gt;pos<span class="number">-1</span> || <span class="literal">NULL</span>==p-&gt;pNext)</span><br><span class="line">    &#123;</span><br><span class="line">        isDelete = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    PNODE q = p-&gt;pNext;</span><br><span class="line">    *pVal = q-&gt;data;</span><br><span class="line">    p-&gt;pNext = q-&gt;pNext;</span><br><span class="line">    <span class="built_in">free</span>(q);</span><br><span class="line">    q = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> isDelete;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><h4 id="动态栈"><a href="#动态栈" class="headerlink" title="动态栈"></a>动态栈</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">NODE</span>* <span class="title">pNext</span>;</span></span><br><span class="line"></span><br><span class="line">&#125;NODE,*PNODE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    PNODE pTop;<span class="comment">//指向栈顶元素</span></span><br><span class="line">    PNODE pBottom;<span class="comment">//指向栈底的第一个无意义节点</span></span><br><span class="line">&#125;STACK,*PSTACK;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(PSTACK)</span></span>;<span class="comment">//初始化栈</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(PSTACK,<span class="keyword">int</span>)</span></span>;<span class="comment">//添加元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(PSTACK)</span></span>;<span class="comment">//遍历元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pop</span><span class="params">(PSTACK,<span class="keyword">int</span>*)</span></span>;<span class="comment">//删除元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">(PSTACK)</span></span>;<span class="comment">//清空元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">(PSTACK)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    STACK s;</span><br><span class="line">    <span class="keyword">int</span> val = <span class="number">0</span>;</span><br><span class="line">    init(&amp;s);</span><br><span class="line">    push(&amp;s,<span class="number">1</span>);</span><br><span class="line">    push(&amp;s,<span class="number">2</span>);</span><br><span class="line">    push(&amp;s,<span class="number">3</span>);</span><br><span class="line">    push(&amp;s,<span class="number">4</span>);</span><br><span class="line">    push(&amp;s,<span class="number">5</span>);</span><br><span class="line">    traverse(&amp;s);</span><br><span class="line">    pop(&amp;s,&amp;val);</span><br><span class="line">    traverse(&amp;s);</span><br><span class="line">    clear(&amp;s);</span><br><span class="line">    traverse(&amp;s);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(PSTACK pS)</span></span>&#123;</span><br><span class="line">    pS-&gt;pTop = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pS-&gt;pTop)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        pS-&gt;pBottom = pS-&gt;pTop;</span><br><span class="line">        pS-&gt;pTop-&gt;pNext = <span class="literal">NULL</span>;<span class="comment">//pS-&gt;pBottom-&gt;pNext = NULL</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(PSTACK pS,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    PNODE pNew = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">    pNew-&gt;data = val;</span><br><span class="line">    pNew-&gt;pNext = pS-&gt;pTop;</span><br><span class="line">    pS-&gt;pTop = pNew;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(PSTACK pS)</span></span>&#123;</span><br><span class="line">    PNODE p = pS-&gt;pTop;</span><br><span class="line">    <span class="keyword">while</span> (p != pS-&gt;pBottom)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p-&gt;data);</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">(PSTACK pS)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isEmpty = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (pS-&gt;pBottom == pS-&gt;pTop)</span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isEmpty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pop</span><span class="params">(PSTACK pS,<span class="keyword">int</span>* pVal)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isPop = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (isEmpty(pS))</span><br><span class="line">    &#123;</span><br><span class="line">        isPop = <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        PNODE r = pS-&gt;pTop;</span><br><span class="line">        *pVal = r-&gt;data;</span><br><span class="line">        pS-&gt;pTop = r-&gt;pNext;</span><br><span class="line">        <span class="built_in">free</span>(r);</span><br><span class="line">        r = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isPop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">(PSTACK pS)</span></span>&#123;</span><br><span class="line">    <span class="comment">//采用依次出战，否则会造成内存泄漏</span></span><br><span class="line">    PNODE p;</span><br><span class="line">    <span class="keyword">if</span> (isEmpty(pS))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        PNODE p = pS-&gt;pTop;</span><br><span class="line">        <span class="keyword">while</span> (p != pS-&gt;pBottom)</span><br><span class="line">        &#123;</span><br><span class="line">            pS-&gt;pTop = pS-&gt;pTop-&gt;pNext;</span><br><span class="line">            <span class="built_in">free</span>(p);</span><br><span class="line">            p = pS-&gt;pTop;</span><br><span class="line">        &#125;</span><br><span class="line">        pS-&gt;pTop = pS-&gt;pBottom;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="循环队列"><a href="#循环队列" class="headerlink" title="循环队列"></a>循环队列</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span>* pBase;<span class="comment">//数组</span></span><br><span class="line">    <span class="keyword">int</span> front;<span class="comment">//指向第一个元素</span></span><br><span class="line">    <span class="keyword">int</span> rear;<span class="comment">//指向最后一个元素的下一个位置</span></span><br><span class="line">&#125;QUEUE;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(QUEUE*)</span></span>;<span class="comment">//初始化数组</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">en_queue</span><span class="params">(QUEUE*,<span class="keyword">int</span>)</span></span>;<span class="comment">//入队</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">out_queue</span><span class="params">(QUEUE*,<span class="keyword">int</span>*)</span></span>;<span class="comment">//出队</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse_queue</span><span class="params">(QUEUE*)</span></span>;<span class="comment">//遍历输出队列元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">full_queue</span><span class="params">(QUEUE*)</span></span>;<span class="comment">//判断是否满队列</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">empty_queue</span><span class="params">(QUEUE*)</span></span>;<span class="comment">//判断队列是否为空</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    QUEUE Q ;</span><br><span class="line">    init(&amp;Q);</span><br><span class="line">    en_queue(&amp;Q,<span class="number">1</span>);</span><br><span class="line">    en_queue(&amp;Q,<span class="number">2</span>);</span><br><span class="line">    en_queue(&amp;Q,<span class="number">3</span>);</span><br><span class="line">    en_queue(&amp;Q,<span class="number">4</span>);</span><br><span class="line">    en_queue(&amp;Q,<span class="number">5</span>);</span><br><span class="line">    traverse_queue(&amp;Q);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    out_queue(&amp;Q,&amp;a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a);</span><br><span class="line">    traverse_queue(&amp;Q);</span><br><span class="line">    en_queue(&amp;Q,<span class="number">6</span>);</span><br><span class="line">    en_queue(&amp;Q,<span class="number">7</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    traverse_queue(&amp;Q);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(QUEUE* pQ)</span></span>&#123;</span><br><span class="line">    pQ-&gt;pBase = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(QUEUE)*<span class="number">6</span>);<span class="comment">//创建一个长度为24字节的数组</span></span><br><span class="line">    pQ-&gt;front = <span class="number">0</span>;</span><br><span class="line">    pQ-&gt;rear = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">full_queue</span><span class="params">(QUEUE* pQ)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isFull = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> ((pQ-&gt;rear + <span class="number">1</span>)%<span class="number">6</span> == pQ-&gt;front)</span><br><span class="line">    &#123;</span><br><span class="line">        isFull = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isFull;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">empty_queue</span><span class="params">(QUEUE* pQ)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isEmpty = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (pQ-&gt;rear == pQ-&gt;front)</span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isEmpty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">en_queue</span><span class="params">(QUEUE* pQ,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isEn = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (full_queue(pQ))</span><br><span class="line">    &#123;</span><br><span class="line">        isEn = <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        pQ-&gt;pBase[pQ-&gt;rear] = val;</span><br><span class="line">        pQ-&gt;rear = (pQ-&gt;rear + <span class="number">1</span>) % <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isEn;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">out_queue</span><span class="params">(QUEUE* pQ,<span class="keyword">int</span>* pVal)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isOut = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (empty_queue(pQ))</span><br><span class="line">    &#123;</span><br><span class="line">        isOut = <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        *pVal = pQ-&gt;pBase[pQ-&gt;front];</span><br><span class="line">        pQ-&gt;front = (pQ-&gt;front + <span class="number">1</span>) % <span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isOut;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse_queue</span><span class="params">(QUEUE* pQ)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = pQ-&gt;front;</span><br><span class="line">    <span class="keyword">while</span> (i != pQ-&gt;rear)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,pQ-&gt;pBase[i]);</span><br><span class="line">        i = (i+<span class="number">1</span>)%<span class="number">6</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><h4 id="汉诺塔"><a href="#汉诺塔" class="headerlink" title="汉诺塔"></a>汉诺塔</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> x,<span class="keyword">char</span> y,<span class="keyword">char</span> z)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">char</span> c1,<span class="keyword">char</span> c2)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hanoi</span><span class="params">(<span class="keyword">int</span> n,<span class="keyword">char</span> x,<span class="keyword">char</span> y,<span class="keyword">char</span> z)</span></span>&#123;</span><br><span class="line">    <span class="comment">//只有一个的情况下就直接将x柱移动到y柱</span></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        move(x,z);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        hanoi(n<span class="number">-1</span>,x,z,y);</span><br><span class="line">        move(x,z);</span><br><span class="line">        hanoi(n<span class="number">-1</span>,y,x,z);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move</span><span class="params">(<span class="keyword">char</span> c1,<span class="keyword">char</span> c2)</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c -&gt; %c\n&quot;</span>,c1,c2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入层数: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    hanoi(n,<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h3><h4 id="动态二叉树"><a href="#动态二叉树" class="headerlink" title="动态二叉树"></a>动态二叉树</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TYPE char</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BiTree</span>&#123;</span></span><br><span class="line">    TYPE data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">BiTree</span>* <span class="title">lchild</span>;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">BiTree</span>* <span class="title">rchild</span>;</span></span><br><span class="line">&#125;BiTree;</span><br><span class="line"></span><br><span class="line"><span class="function">BiTree* <span class="title">create</span><span class="params">(BiTree*)</span></span>;<span class="comment">//初始生成二叉树</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preOrder</span><span class="params">(BiTree*)</span></span>;<span class="comment">//先序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inOrder</span><span class="params">(BiTree*)</span></span>;<span class="comment">//中序遍历</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postOrder</span><span class="params">(BiTree*)</span></span>;<span class="comment">//后续遍历</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    BiTree* tree = <span class="literal">NULL</span>;</span><br><span class="line">    tree = create(tree);</span><br><span class="line">    preOrder(tree);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">BiTree* <span class="title">create</span><span class="params">(BiTree *T)</span></span>&#123;</span><br><span class="line">    TYPE data;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入当前节点的值&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>,&amp;data);</span><br><span class="line">    <span class="keyword">if</span> (data != <span class="string">&#x27;#&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        T = (BiTree*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BiTree*));</span><br><span class="line">        T-&gt;data = data;</span><br><span class="line">        T-&gt;lchild = <span class="literal">NULL</span>;</span><br><span class="line">        T-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line">        T-&gt;lchild = create(T-&gt;lchild);</span><br><span class="line">        T-&gt;rchild = create(T-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> T;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preOrder</span><span class="params">(BiTree* T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,T-&gt;data);</span><br><span class="line">        preOrder(T-&gt;lchild);</span><br><span class="line">        preOrder(T-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inOrder</span><span class="params">(BiTree* T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        preOrder(T-&gt;lchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,T-&gt;data);</span><br><span class="line">        preOrder(T-&gt;rchild);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postOrder</span><span class="params">(BiTree* T)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        preOrder(T-&gt;lchild);</span><br><span class="line">        preOrder(T-&gt;rchild);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,T-&gt;data);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><h4 id="冒泡排序"><a href="#冒泡排序" class="headerlink" title="冒泡排序"></a>冒泡排序</h4><p>冒泡排序的原理是比较相邻元素，将较小（较大）的元素比较后交换位置序列有序为止结束</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>*,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(<span class="keyword">int</span>*,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> arr[] = &#123;<span class="number">3</span>,<span class="number">6</span>,<span class="number">2</span>,<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="keyword">sizeof</span>(arr) / <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    bubbleSort(arr,len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(<span class="keyword">int</span>* arr,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,arr[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubbleSort</span><span class="params">(<span class="keyword">int</span>* arr,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j  = <span class="number">0</span>; j &lt; len<span class="number">-1</span>-i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; arr[j+<span class="number">1</span>])</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> tmp = arr[j];</span><br><span class="line">                arr[j] = arr[j+<span class="number">1</span>];</span><br><span class="line">                arr[j+<span class="number">1</span>] = tmp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    traverse(arr,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="选择排序"><a href="#选择排序" class="headerlink" title="选择排序"></a>选择排序</h4><p>和冒泡排序不同，选择排序是选择当前元素和后面所有元素进行比较，若碰到较小的元素则交换</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectionSort</span><span class="params">(<span class="keyword">int</span>*,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(<span class="keyword">int</span>*,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="built_in">array</span>[] = &#123;<span class="number">4</span>,<span class="number">7</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">6</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="keyword">sizeof</span>(<span class="built_in">array</span>) / <span class="keyword">sizeof</span>(<span class="keyword">int</span>);</span><br><span class="line">    selectionSort(<span class="built_in">array</span>,len);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(<span class="keyword">int</span>* <span class="built_in">array</span>,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,<span class="built_in">array</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">selectionSort</span><span class="params">(<span class="keyword">int</span>* <span class="built_in">array</span>,<span class="keyword">int</span> len)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len<span class="number">-1</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i+<span class="number">1</span>; i &lt; len; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> tmp = <span class="built_in">array</span>[i];</span><br><span class="line">            <span class="built_in">array</span>[i] = <span class="built_in">array</span>[j];</span><br><span class="line">            <span class="built_in">array</span>[j] = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    traverse(<span class="built_in">array</span>,len);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数组（未实现自动增长）&quot;&gt;&lt;a href=&quot;#数组（未实现自动增长）&quot; class=&quot;headerlink&quot; title=&quot;数组（未实现自动增长）&quot;&gt;&lt;/a&gt;数组（未实现自动增长）&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    
    <category term="c" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>简单c语言练习</title>
    <link href="http://example.com/2021/11/02/%E7%AE%80%E5%8D%95c%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A0/"/>
    <id>http://example.com/2021/11/02/%E7%AE%80%E5%8D%95c%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A0/</id>
    <published>2021-11-02T02:22:07.000Z</published>
    <updated>2021-12-09T01:20:43.954Z</updated>
    
    <content type="html"><![CDATA[<h3 id="求输入数字的位数"><a href="#求输入数字的位数" class="headerlink" title="求输入数字的位数"></a>求输入数字的位数</h3><ul><li>输入任意长度的整数判断其位数  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">        n++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (x &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="猜数游戏"><a href="#猜数游戏" class="headerlink" title="猜数游戏"></a>猜数游戏</h3><ul><li>系统会随机产生一个1到100的数字让玩家猜，如果玩家猜的数字大于所生成的随机数则输出”数字大了”，玩家猜的数字小于所生成的随机数则输出”数字小了”，直至猜中为止</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">int</span> number = rand() % <span class="number">100</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已经准备了一个1到100的数\n&quot;</span>);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;试着来猜一猜\n&quot;</span>);</span><br><span class="line">        count++;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="keyword">if</span> (a &gt; number)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;数字大了\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a &lt; number)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;数字小了\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (a != number);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;猜对了,一共用了%d次&quot;</span>,count);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数字颠倒"><a href="#数字颠倒" class="headerlink" title="数字颠倒"></a>数字颠倒</h3><ul><li>输入任意长度数字输出其反转后的数字 </li><li>如输入 12345 输出 54321  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">int</span> digit;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        digit = x % <span class="number">10</span>; <span class="comment">//获得丢弃的一个数字</span></span><br><span class="line">        x /= <span class="number">10</span>; <span class="comment">//每次去掉最后一位</span></span><br><span class="line">        ret = ret * <span class="number">10</span> + digit; <span class="comment">//将每次获得的值*10 ，并加上丢弃的那一位数字</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;现在的x为%d,digit为%d,ret为%d\n&quot;</span>,x,digit,ret);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ret);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="100以内的素数"><a href="#100以内的素数" class="headerlink" title="100以内的素数"></a>100以内的素数</h3><ul><li>输出100以内的所有素数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> flag;<span class="comment">//判断是否为素数，1为素数，0则不为素数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i % j == <span class="number">0</span>)&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d为素数 &quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="输出前五十个素数"><a href="#输出前五十个素数" class="headerlink" title="输出前五十个素数"></a>输出前五十个素数</h3><ul><li>输出前五十个素数  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>; <span class="comment">//计数器</span></span><br><span class="line">    <span class="keyword">int</span> isPrime; <span class="comment">//判断是否为素数，1为素数，0不为素数</span></span><br><span class="line">    <span class="keyword">while</span> (count &lt; <span class="number">50</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        isPrime = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; x; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">                isPrime = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isPrime == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,x);</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (count % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        x++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="面值兑换"><a href="#面值兑换" class="headerlink" title="面值兑换"></a>面值兑换</h3><ul><li>有1角，2角，5角三种价值的纸币，输入需要兑换的金额数（元）,自动给出兑换为上述三种面额纸币的数量（需给出多种方案）  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> total,<span class="built_in">exit</span>;</span><br><span class="line">    <span class="keyword">int</span> one,two,five;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;total);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; total * <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; total * <span class="number">5</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; total * <span class="number">2</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i * <span class="number">0.1</span> + j * <span class="number">0.2</span> + k * <span class="number">0.5</span> == total)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;得到%d元需要%d个一毛，%d个二毛，%d个五毛\n&quot;</span>,total,i,j,k);</span><br><span class="line">                    <span class="comment">// exit = 1;</span></span><br><span class="line">                    <span class="comment">// break;</span></span><br><span class="line">                    <span class="keyword">goto</span> out;</span><br><span class="line">                &#125;</span><br><span class="line">            </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// if (exit)</span></span><br><span class="line">            <span class="comment">// &#123;</span></span><br><span class="line">            <span class="comment">//     break;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// if (exit)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="comment">//     break;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    out:</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="整数分解"><a href="#整数分解" class="headerlink" title="整数分解"></a>整数分解</h3><ul><li>输入任意长度数字后将其分解输出</li><li>如输入：123456</li><li>输出：1 2 3 4 5 6</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 整数分解，先将输入数字倒序，再利用倒序分解将原本倒的数字之间加入空格</span></span><br><span class="line"><span class="comment"> * 这种方法只适用于末尾不为0的数字</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> b = x % <span class="number">10</span>;</span><br><span class="line">        y = y * <span class="number">10</span> + b;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (x &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,y);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a = y % <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line">        <span class="keyword">if</span> (y &gt; <span class="number">9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        y /= <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (y &gt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这种方法的整数分解适用于所有整数</span></span><br><span class="line"><span class="comment"> * 输入的数字num的长度n，10*(n-1)获得其*对应的数的mask,如123的mask为100。123/100=1恰好能获取到其最高位上的数字，而123%100=23恰好能删去最高位上的数字。</span></span><br><span class="line"><span class="comment"> * 不断利用num/mask获取其最高位数字num%mask删去其最高位上的数字，就能拿到所有的数字了  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> mask = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">int</span> t = x;</span><br><span class="line">    <span class="comment">//确定mask(即10的x位数的次方)的值</span></span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">9</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">        mask *= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,mask);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> d = x / mask;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,d);</span><br><span class="line">        <span class="keyword">if</span> (mask &gt; <span class="number">9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        x %= mask;</span><br><span class="line">        mask /= <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (mask &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="两整数的最大公因数"><a href="#两整数的最大公因数" class="headerlink" title="两整数的最大公因数"></a>两整数的最大公因数</h3><ul><li>求出两个整数的最大公因数  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 辗转相除法（欧几里得算法）</span></span><br><span class="line"><span class="comment"> * 输入a=12 b=18，t为余数</span></span><br><span class="line"><span class="comment"> * 第一次循环结果：a=18 b=12 t=12</span></span><br><span class="line"><span class="comment"> * 第二次循环结果：a=12 b=6 t=6</span></span><br><span class="line"><span class="comment"> * 第三次循环结果：a=6 b=0 t=0</span></span><br><span class="line"><span class="comment"> * 当b=0时循环结束，最大公约数为a=6</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t = a % b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="有序输出"><a href="#有序输出" class="headerlink" title="有序输出"></a>有序输出</h3><ul><li>输入一个数字n（3&lt;= n &lt;=6），输出由n+2组成三位数字，且这三位数字不能够重复</li><li>如输入 2，输出234 235 243 253 324 342…</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    i = a;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= a+<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        j = a;</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= a+<span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            k = a;</span><br><span class="line">            <span class="keyword">while</span> (k &lt;= a+<span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i != j &amp;&amp; i != k &amp;&amp; j!= k)</span><br><span class="line">                &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i*<span class="number">100</span>+j*<span class="number">10</span>+k);</span><br><span class="line">                    <span class="keyword">if</span> (count % <span class="number">6</span> == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                    &#125;  </span><br><span class="line">                &#125;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="水仙花数"><a href="#水仙花数" class="headerlink" title="水仙花数"></a>水仙花数</h3><ul><li>打印出所有的”水仙花数”，所谓”水仙花数”是指一个三位数，其各位数字立方和等于该数本身</li><li>例如：153 是一个”水仙花数”，因为 153=1 的三次方＋5 的三次方＋3 的三次方</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    n = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> first = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        first *= <span class="number">10</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i = first;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; first * <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = i;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> d = t % <span class="number">10</span>;<span class="comment">//拿到的个位数</span></span><br><span class="line">            t /= <span class="number">10</span>;<span class="comment">//除去个位数</span></span><br><span class="line">            <span class="keyword">int</span> p = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//每个数字的三次方</span></span><br><span class="line">            <span class="keyword">while</span> (j &lt; n)</span><br><span class="line">            &#123;</span><br><span class="line">                p *= d;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//一个数字各个位数的三次方和</span></span><br><span class="line">            sum += p;</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">while</span> (t &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (sum == i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h3><ul><li>输出一个九九乘法表</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%d&quot;</span>,i,j,i*j);</span><br><span class="line">            <span class="keyword">if</span> (i * j &lt; <span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;   &quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="区间素数"><a href="#区间素数" class="headerlink" title="区间素数"></a>区间素数</h3><ul><li>输入一个区间给出其中的素数和及素数个数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n ,m;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="comment">//1不是素数，碰到1直接从2开始</span></span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        m = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> isPrime;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = m; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        isPrime = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; i - <span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                isPrime = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isPrime)</span><br><span class="line">        &#123;</span><br><span class="line">            count++;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,count,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="真-猜数游戏"><a href="#真-猜数游戏" class="headerlink" title="真.猜数游戏"></a>真.猜数游戏</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">int</span> num = rand() % <span class="number">100</span> - <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;被猜的数字是=%d\n&quot;</span>,num);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">0</span>;<span class="comment">//限制次数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入次数&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">int</span> isNeg = <span class="number">0</span>;<span class="comment">//判断是否为负数，1为负数，0为正数</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入要猜的数字\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            isNeg = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n &gt; num)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;too big\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n &lt; num)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;too small\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count == m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">goto</span> out;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (n != num);</span><br><span class="line">    <span class="keyword">if</span> (!isNeg &amp;&amp; count &lt;= m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;bingo&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (count &lt; <span class="number">3</span> &amp;&amp; count &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Lucky you&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;good guess&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    out: <span class="built_in">printf</span>(<span class="string">&quot;\ngame over\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;一共猜了%d次&quot;</span>,count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="n项求和"><a href="#n项求和" class="headerlink" title="n项求和"></a>n项求和</h3><ul><li>2/1+3/2+5/3+8/5+13/8…n/k+(n+k)/k</li><li>输入一个数字n，计算输出满足上述算式之和</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下一项的分子是上项的分母，下一项的分母是上一项分子和分母之和</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">double</span> son,mo;</span><br><span class="line">    son = <span class="number">1</span>;</span><br><span class="line">    mo = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += (mo/son);</span><br><span class="line">        t = mo;</span><br><span class="line">        mo = mo + son;</span><br><span class="line">        son = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,sum);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分式通分"><a href="#分式通分" class="headerlink" title="分式通分"></a>分式通分</h3><ul><li>将一个分式化为其最简形式</li><li>例如 输入12 18 输出 2/3</li><li>输入 1 2 输出 1/2</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a,b,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">int</span> num1 = a;</span><br><span class="line">    <span class="keyword">int</span> num2 = b;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        m = num1 % num2;</span><br><span class="line">        num1 = num2;</span><br><span class="line">        num2 = m;</span><br><span class="line">    &#125; <span class="keyword">while</span> (num2 &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最大公约数为%d\n&quot;</span>,num1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d/%d\n&quot;</span>,a/num1,b/num1);</span><br></pre></td></tr></table></figure><h3 id="汉字转换"><a href="#汉字转换" class="headerlink" title="汉字转换"></a>汉字转换</h3><ul><li>将汉字转换为拼音</li><li>例如 输入200 输出为 er ling ling</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fu &quot;</span>);</span><br><span class="line">        x = -x;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">int</span> y = x;</span><br><span class="line">    <span class="keyword">int</span> mask = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">        count++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (x &gt; <span class="number">9</span>);</span><br><span class="line">    <span class="keyword">while</span> (count &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mask *= <span class="number">10</span>;</span><br><span class="line">        count--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (mask &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> d = y / mask;</span><br><span class="line">        y = y % mask;</span><br><span class="line">        mask /= <span class="number">10</span>; </span><br><span class="line">        <span class="keyword">switch</span> (d)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ling&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;yi&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;er&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;san&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;si&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;wu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;liu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;qi&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ba&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;jiu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mask &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重复数字相加"><a href="#重复数字相加" class="headerlink" title="重复数字相加"></a>重复数字相加</h3><ul><li>输入一个整数n（0&lt; n &lt;10）和位数m,输出 n + nn + nnn + …</li><li>如输入 2 4 计算得出 2+22+222+2222之和 </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t = t * <span class="number">10</span> + a;</span><br><span class="line">        sum += t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br></pre></td></tr></table></figure><h3 id="大小写自动转换"><a href="#大小写自动转换" class="headerlink" title="大小写自动转换"></a>大小写自动转换</h3><ul><li>实现大小写的自动转换，输入小写字母时将其转换为大写字母，输入大写字母将其转换为小写字母,输入的不是小写字母则输出输入错误</li><li>例如输入 a 输出 A </li><li>输如 B 则输出 b</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**利用ascii码表转换大小写*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> distance;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个字母:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;distance);</span><br><span class="line">    <span class="keyword">int</span> a = distance;</span><br><span class="line">    <span class="keyword">if</span> (a &gt;= <span class="number">97</span> &amp;&amp; a &lt;= <span class="number">122</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//这是一个小写字母</span></span><br><span class="line">        distance -= <span class="number">32</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (a &lt; <span class="number">97</span> &amp;&amp; a &gt;= <span class="number">65</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//这是一个大写字母</span></span><br><span class="line">        distance += <span class="number">32</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入错误&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,distance);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="两数之和"><a href="#两数之和" class="headerlink" title="两数之和"></a>两数之和</h3><p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 target  的那 两个 整数，并返回它们的数组下标。<br>可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span>* <span class="title">twoSum</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize, <span class="keyword">int</span> target, <span class="keyword">int</span>* returnSize)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;numsSize;i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>( <span class="keyword">int</span> j=i+<span class="number">1</span>;j&lt;numsSize;j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i]+nums[j] == target)&#123;</span><br><span class="line">                <span class="keyword">int</span>* ret = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*<span class="number">2</span>);</span><br><span class="line">                ret[<span class="number">0</span>] = i;</span><br><span class="line">                ret[<span class="number">1</span>] = j;</span><br><span class="line">                *returnSize = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">return</span> ret;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    *returnSize = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;求输入数字的位数&quot;&gt;&lt;a href=&quot;#求输入数字的位数&quot; class=&quot;headerlink&quot; title=&quot;求输入数字的位数&quot;&gt;&lt;/a&gt;求输入数字的位数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;输入任意长度的整数判断其位数  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure clas</summary>
      
    
    
    
    
    <category term="c" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>初入c语言</title>
    <link href="http://example.com/2021/06/21/%E5%88%9D%E5%85%A5c%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2021/06/21/%E5%88%9D%E5%85%A5c%E8%AF%AD%E8%A8%80/</id>
    <published>2021-06-21T03:26:39.000Z</published>
    <updated>2021-11-25T01:06:13.744Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一个c语言程序"><a href="#第一个c语言程序" class="headerlink" title="第一个c语言程序"></a>第一个c语言程序</h2><p>连奶奶都知道的hello world  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><table><thead><tr><th align="center">转义字符</th><th align="left">意义</th><th align="center">ASCII码值（十进制）</th></tr></thead><tbody><tr><td align="center">\a</td><td align="left">响铃(BEL)</td><td align="center">007</td></tr><tr><td align="center">\b</td><td align="left">退格(BS) ，将当前位置移到前一列</td><td align="center">008</td></tr><tr><td align="center">\f</td><td align="left">换页(FF)，将当前位置移到下页开头</td><td align="center">012</td></tr><tr><td align="center">\n</td><td align="left">换行(LF) ，将当前位置移到下一行开头</td><td align="center">010</td></tr><tr><td align="center">\r</td><td align="left">回车(CR) ，将当前位置移到本行开头</td><td align="center">013</td></tr><tr><td align="center">\t</td><td align="left">水平制表(HT)</td><td align="center">009</td></tr><tr><td align="center">\v</td><td align="left">垂直制表(VT)</td><td align="center">011</td></tr><tr><td align="center">&#39;</td><td align="left">单引号</td><td align="center">039</td></tr><tr><td align="center">&quot;</td><td align="left">双引号</td><td align="center">034</td></tr><tr><td align="center">\</td><td align="left">反斜杠</td><td align="center">092</td></tr></tbody></table><h3 id="转义字符-0"><a href="#转义字符-0" class="headerlink" title="转义字符\0"></a>转义字符\0</h3><p>转义字符<code>\0</code>用于标识每个字符串的结尾，在每个字符串的后面编译器会自动加上<code>\0</code>来标识字符串的结尾  </p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>c语言变量名规则是：  </p><ul><li>变量名必须以英文字母或下划线开头  </li><li>变量名中的字母是区分大小写的  </li><li>变量名不能是<a href="#c%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97">关键字</a>  </li><li>变量名中不能包含空格、标点符号和类型说明符 </li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><code>char</code>: 字符型，占用一个字节<br><code>int</code>:整型，通常反映了所用机器中整数的最自然长度<br><code>float</code>:单精度浮点型<br><code>double</code>:双精度浮点型<br><code>_Bool</code>:布尔型，只有<code>true</code>和<code>false</code>两种类型<br>还有<code>long int</code>、<code>long long int</code>等不表<br>不同数据类型的长度在不同的位数的操作系统之中是不同的  </p><h3 id="取值范围"><a href="#取值范围" class="headerlink" title="取值范围"></a>取值范围</h3><p>cpu中最小的单位是<strong>比特位</strong>，即<strong>bit</strong>，简写为b，称之为<strong>位</strong>,每个比特位只能存放<code>0或1</code><br>内存机构的最小寻址单位是<strong>字节</strong>，即<strong>byte</strong><br>一字节等于8比特，即等式为<code>1byte = 8bit</code>，所以一个字节中最多能存放二进制最大数为11111111，即8个1，转换为十进制值为255<br>二进制11转化为十进制为3，二进制111转化为十进制为7，二进制1111转化为十进制为15,由此可得出规律,二进制(全是1)类型转化为十进制等于$二进制1的个数^2-1$<br>在计算机中通常是采用补码的形式来存放整数的值，并且会用第一位来标识该数据的正负(0为正，1为负)。对于正数而言，正数的补码就是该数的二进制形式。对于负数而言则需要将除首位字符以外的二进制字符全部按位取反(即将0替换为1，1替换成0)后得到反码，接着将反码的值的末尾再加上一位1得到补码。所以负数的补码要比正数的补码多1位。</p><blockquote><p>例如：<code>0110111</code>的反码为<code>0001000</code>,补码为<code>00010001</code>  </p></blockquote><p>由于位于首位的正负标识符需要多占用一位，所以有效的取值范围应该是$(二进制1的个数-1)^2-1$,又因为默认所有的数据类型都用<a href="#signed%E5%92%8Cunsigned"><code>signed</code></a>修饰，所以存在正负。<br>根据<a href="#sizeof%E8%BF%90%E7%AE%97%E7%AC%A6">sizeof运算符</a>我们可以得到每个数据类型都有对应的字节数，而根据上面的规律我们可以推出每种数据类型的取值范围</p><table><thead><tr><th align="center">数据类型</th><th align="center">字节数</th><th align="center">位数(比特位)</th><th align="center">取值范围(十进制)</th></tr></thead><tbody><tr><td align="center">char</td><td align="center">2bytes</td><td align="center">16bits</td><td align="center">-2^15 ~ 2^15-1</td></tr><tr><td align="center">shrot int</td><td align="center">2bytes</td><td align="center">16bits</td><td align="center">-2^15 ~ 2^{15}-1</td></tr><tr><td align="center">int</td><td align="center">4bytes</td><td align="center">32bits</td><td align="center">-2^31 ~ 2^31-1</td></tr><tr><td align="center">long int</td><td align="center">4bytes</td><td align="center">32bits</td><td align="center">-2^31 ~ 2^31-1</td></tr></tbody></table><h2 id="c语言中的关键字"><a href="#c语言中的关键字" class="headerlink" title="c语言中的关键字"></a>c语言中的关键字</h2><p>关键字（Keywords）是由C语言规定的具有特定意义的字符串，通常也称为保留字，例如 int、char、long、float、unsigned 等。我们定义的标识符不能与关键字相同，否则会出现错误<br>c语言中一共有32个关键字，具体可见<a href="http://c.biancheng.net/cpp/html/797.html">C语言关键字及其解释</a></p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量在运行过程中的值无法被改变,为了区分变量和常量的区别，一般用大写字母来命名<br>常量分为整型常量、实型常量、字符常量、字符串常量、符号常量  </p><ul><li>整型常量：由整数构成的常量  </li><li>实型常量：由小数构成的常量  </li><li>字符常量：由字符构成的常量  </li><li>字符串常量：由字符串构成的常量  </li><li>符号常量：符号常量在使用前必须被定义，由<code>#define</code>关键字来定义  <h3 id="符号常量"><a href="#符号常量" class="headerlink" title="符号常量"></a>符号常量</h3>符号常量在使用前必须被定义，由<code>#define</code>关键字来定义  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> NAME <span class="meta-string">&quot;FLOATC&quot;</span><span class="comment">//注意这里没有用分号结尾</span></span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, NAME);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sizeof运算符"><a href="#sizeof运算符" class="headerlink" title="sizeof运算符"></a>sizeof运算符</h3><code>sizeof</code>运算符用于获得数据类型和表达式的长度(单位是字节)  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(a));<span class="comment">//a的size大小为4</span></span><br><span class="line">    <span class="keyword">float</span> b = <span class="number">2.34121</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(b));<span class="comment">//b的size大小为4</span></span><br><span class="line">    <span class="keyword">double</span> c = <span class="number">23.453342</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span> c);<span class="comment">//c的size大小为8</span></span><br><span class="line">    <span class="keyword">char</span> d = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;d的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span> d);<span class="comment">//d的size大小为1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;short int的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">short</span> <span class="keyword">int</span>));<span class="comment">//short int的size大小为2</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>));<span class="comment">//int的size大小为4</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;long int的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">int</span>));<span class="comment">//long int的size大小为4</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;long long int的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>));<span class="comment">//long long int的size大小为8</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;float的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">float</span>));<span class="comment">//float的size大小为4</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;double的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">double</span>));<span class="comment">//double的size大小为8</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;long double的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">double</span>));<span class="comment">//long double的size大小为16</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;char的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">char</span>));<span class="comment">//char的size大小为1</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;_Bool的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="built_in">_Bool</span>));<span class="comment">//_Bool的size大小为1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="signed和unsigned"><a href="#signed和unsigned" class="headerlink" title="signed和unsigned"></a>signed和unsigned</h3><code>signed</code>修饰的变量是有符号修饰的(即存在负数)，<code>unsigned</code>修饰的变量不带有符号位(即全部为正数)<br>在默认的情况下所有的整型都是带<code>signed</code>修饰符的<br><code>signed</code>存储,符号是有代价的,代价就是存储空间中的一个比特位专门用来存储符号,这一位不能表示数值  </li></ul><h3 id="字符和字符串"><a href="#字符和字符串" class="headerlink" title="字符和字符串"></a>字符和字符串</h3><p>可以用整数%d来输出单个字符<br>与int默认用signed修饰不一样，char的signed和unsigned修饰符是由编译系统自己决定的  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用字符输出&#x27;C&#x27;的值为%d\n&quot;</span>,a);</span><br><span class="line">    <span class="comment">//用字符串输出&#x27;C&#x27;的值为67</span></span><br><span class="line">    <span class="keyword">char</span> num = <span class="number">67</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用字符串输出67的值为%c\n&quot;</span>,num);</span><br><span class="line">    <span class="comment">//用字符串输出67的值为C</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> num1 = <span class="number">160</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用字符串输出67的值为%d&quot;</span>,num1);<span class="comment">//-96</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在计算机中，每个字母大小写和特殊字符都有一个整数与之一一对应，具体可以参照<a href="https://baike.baidu.com/item/ASCII/309296?fr=aladdin">ASCII</a>,ASCII是最通用的信息交换标准，并等同于国际标准ISO/IEC 646。ASCII第一次以规范标准的类型发表是在1967年，最后一次更新则是在1986年，到目前为止共定义了128个字符  </p><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>C 语言虽然没有字符串类型，但是 C语言提是存在字符串这个概念的，也就是字符串常量：以 NULL 字节结尾的 0 个或多个字符组成的序列。字符串常量是不可被修改的，一般用一对双引号(“ “)括起的一串字符来表示字符串常量（实际上字符串就是字符类型的数组）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义一个字符串</span></span><br><span class="line">    <span class="keyword">char</span> name1[<span class="number">7</span>];</span><br><span class="line">    <span class="comment">//给字符串赋值</span></span><br><span class="line">    name1[<span class="number">0</span>] = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">    name1[<span class="number">1</span>] = <span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">    name1[<span class="number">2</span>] = <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    name1[<span class="number">3</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    name1[<span class="number">4</span>] = <span class="string">&#x27;T&#x27;</span>;</span><br><span class="line">    name1[<span class="number">5</span>] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">    name1[<span class="number">6</span>] = <span class="string">&#x27;\0&#x27;</span>;<span class="comment">//得自己手动填充\0来保证字符串的结束</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;name1 = %s\n&quot;</span>,name1);<span class="comment">//name1 = FLOATC</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//也可以这样写</span></span><br><span class="line">    <span class="keyword">char</span> name2[<span class="number">7</span>] = &#123;<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;L&#x27;</span>,<span class="string">&#x27;O&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;name2 = %s\n&quot;</span>,name2);<span class="comment">//name2 = FLOATC</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//甚至连大括号也可以去除</span></span><br><span class="line">    <span class="keyword">char</span> name3[] = <span class="string">&quot;FLOATC&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;name3 = %s\n&quot;</span>,name3);<span class="comment">//name3 = FLOATC</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">例子</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加法运算符（双目）</td><td align="center">5+3</td><td align="center">8</td></tr><tr><td align="center">-</td><td align="center">减法运算符（双目）</td><td align="center">5-3</td><td align="center">2</td></tr><tr><td align="center">*</td><td align="center">乘法运算符（双目）</td><td align="center">5*3</td><td align="center">15</td></tr><tr><td align="center">/</td><td align="center">除法运算符（双目）</td><td align="center">5/3</td><td align="center">1</td></tr><tr><td align="center">%</td><td align="center">求余运算符（双目）</td><td align="center">5%3</td><td align="center">2</td></tr><tr><td align="center">+</td><td align="center">正号运算符（单目）</td><td align="center">+5</td><td align="center">+5</td></tr><tr><td align="center">-</td><td align="center">符号运算符（单目）</td><td align="center">-5</td><td align="center">-5</td></tr></tbody></table><p>在运算中，运算符遵从一定的<a href="https://blog.csdn.net/huangblog/article/details/8271791">运算规律</a>（也就是先后顺序）  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k;</span><br><span class="line">    i = <span class="number">1</span> + <span class="number">2</span>;</span><br><span class="line">    j = <span class="number">1</span> + <span class="number">2</span> * <span class="number">3</span>;</span><br><span class="line">    k = i + j + <span class="number">-1</span> + <span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>,i);<span class="comment">//3</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;j = %d\n&quot;</span>,j);<span class="comment">//7</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;k = %d\n&quot;</span>,k);<span class="comment">//17</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p>关系运算符用于比较两数之间的大小关系<br>关系表达式只会返回<code>true</code>（1）和<code>false</code>（0） </p><table><thead><tr><th align="center">运算符</th><th align="center">名称</th></tr></thead><tbody><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td></tr><tr><td align="center">&gt;=</td><td align="center">大于等于</td></tr><tr><td align="center">==</td><td align="center">等于</td></tr><tr><td align="center">!=</td><td align="center">不等于</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">!</td><td align="center">逻辑非</td><td align="center">取反</td></tr><tr><td align="center">||</td><td align="center">逻辑或</td><td align="center">一真全真，全假才假</td></tr><tr><td align="center">&amp;&amp;</td><td align="center">逻辑与</td><td align="center">全真才真，一假全假</td></tr></tbody></table><h3 id="短路求值"><a href="#短路求值" class="headerlink" title="短路求值"></a>短路求值</h3><p>当在进行到与逻辑运算时，在第一步判断左边的表达式为false时，则直接判断整个表达式为false，而不会继续对右边表达式进行判断（或运算符同理）  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">    (a = <span class="number">-1</span>) &amp;&amp; (b = <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>,a,b);<span class="comment">//a=-1,b=5</span></span><br><span class="line">    (a = <span class="number">1</span>) || (b = <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d&quot;</span>,a,b);<span class="comment">//a=1,b=5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p>当不同类型的数据进新计算的时候，编译器会把需要操作的数据转化为共同的数据类型，一般情况下会选择转换为这些数据中最大的数据类型<br>注意在进行强转时，高精度的数据类型向小低精度据类型转化时会丢失精度</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> i = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整型输出（未强转）：i+j=%d\n&quot;</span>,i + j);<span class="comment">//0（错误）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整型输出（强转）：i+j=%d\n&quot;</span>,(<span class="keyword">int</span>)i + j);<span class="comment">//3</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;浮点型输出：i+j=%.1f&quot;</span>,i + j);<span class="comment">//3.0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><p>千篇一律的if语句语法。。实在不想写了，直接来个例子好了    </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> mark;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入数字\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;mark);</span><br><span class="line">    <span class="keyword">if</span> (mark &lt; <span class="number">60</span> &amp;&amp; mark &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;不及格\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (mark &gt;= <span class="number">60</span> &amp;&amp; mark &lt; <span class="number">70</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;D\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (mark &gt;= <span class="number">70</span> &amp;&amp; mark &lt; <span class="number">80</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;C\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (mark &gt;= <span class="number">80</span> &amp;&amp; mark &lt; <span class="number">90</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;B\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (mark &gt;= <span class="number">90</span> &amp;&amp; mark &lt;= <span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;A\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入错误\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> level;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入等级\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;level);</span><br><span class="line">    <span class="keyword">switch</span> (level)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;你的成绩在90以上&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;你的成绩在80~90之间&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;你的成绩在70~80之间&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;你的成绩在60~70之间&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;你的成绩在60以下&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;输入错误&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里值得一提的居然是有关scanf函数..<br>在利用<code>scanf()</code>函数连续输入多个数值的时候，其中的回车键也会被视为一个字符，记得用<code>getchar()</code>函数来清空空格符和回车符  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第一个c语言程序&quot;&gt;&lt;a href=&quot;#第一个c语言程序&quot; class=&quot;headerlink&quot; title=&quot;第一个c语言程序&quot;&gt;&lt;/a&gt;第一个c语言程序&lt;/h2&gt;&lt;p&gt;连奶奶都知道的hello world  &lt;/p&gt;
&lt;figure class=&quot;highli</summary>
      
    
    
    
    
    <category term="c" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://example.com/2021/05/20/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2021/05/20/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-05-20T07:02:30.000Z</published>
    <updated>2021-12-09T01:19:34.941Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p><font color=#C0C0C0><em>注：正则表达式并不是php所独有的，因为在学习php的缘故，本篇采用php来使用正则表达式</em></font></p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><strong>正则表达式</strong>描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。</p><h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><p>字符串一般是由<strong>普通字符</strong>和<strong>元字符</strong>构成  </p><blockquote><p>普通字符:a-z A-Z 0-9 双引号 单引号等，他们没有特殊的含义<br>元字符:指的是有特殊功能的字符例如<code>*</code>,<code>+</code>,<code>?</code>等，常用的元字符见<a href="https://www.runoob.com/regexp/regexp-metachar.html">常用元字符</a></p></blockquote><p>例如<code>&#39;/a/&#39;</code>,<code>a</code>就是普通字符，<code>/</code>是定界符（用于表示正则表达式的开始和结束）  </p><h4 id="定界符"><a href="#定界符" class="headerlink" title="定界符"></a>定界符</h4><p>我们一般用<strong>正斜线<code>/</code></strong> 作为定界的字符，当然除了<strong>字母</strong>,<strong>数字</strong>和<strong>反斜线</strong>以外的字符都可以作为定界符，比如<code>#</code>,<code>!</code>,<code>&#123;&#125;</code>,<code>|</code>等都是可以的，定界符要放在正则表达式的起始与结尾位置，前后一致</p><h3 id="模式修正符"><a href="#模式修正符" class="headerlink" title="模式修正符"></a>模式修正符</h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><p>模式修正符是在正则表达式的定界符之后使用的，可以调整正则表达式的解释，拓展正则表达式在匹配、替换等操作时的一些功能，增强正则表达式的处理能力</p><table><thead><tr><th align="center">常见模式修正符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">i</td><td align="left">在模式进行匹配时不区分大小写</td></tr><tr><td align="center">m</td><td align="left">多行匹配，如果目标字符串中没有<code>&#39;\n&#39;</code>字符，或者模式中没有出现<code>^</code>或<code>$</code>，设置这个修饰符则不会产生影响</td></tr><tr><td align="center">s</td><td align="left">如果设置了此修饰符，那么将匹配所有的字符包括换行符</td></tr><tr><td align="center">U</td><td align="left">禁止贪婪匹配</td></tr></tbody></table><!-- |常见模式修正符|说明||:-:|:-:||i| 在模式进行匹配时不区分大小写 ||m| 多行匹配，如果目标字符串中没有`'\n'`字符，或者模式中没有出现`^`或`$`，设置这个修饰符则不会产生影响 ||s|如果设置了此修饰符，那么将匹配所有的字符包括换行符||U|禁止贪婪匹配| --><p>修正符<code>i</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$parttern</span> = <span class="string">&#x27;/test/i&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;test Test tESt TEST&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$parttern</span>,<span class="variable">$str</span>,<span class="variable">$arr</span>));<span class="comment">//int 4</span></span><br><span class="line">var_dump(<span class="variable">$arr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=4)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      1 =&gt; string &#x27;Test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      2 =&gt; string &#x27;tESt&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      3 =&gt; string &#x27;TEST&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修正符<code>m</code><strong>使用条件</strong>:<br><strong>1.</strong> 目标字符中必须包括<code>\n</code><br><strong>2.</strong> 所用的正则表达式中必须要出现<code>^</code>和<code>$</code><br>注意不能手动敲换行，在windows操作系统中所看见的换行（现象）实际是由<code>\n\r</code>两个转义字符共同完成的，正则表达式所识别的换行只有<code>\n</code>这一个转义字符，所以手动敲换行不能够识别出来<br><strong>模式修正符可以多个一起搭配使用</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/^test/&#x27;</span>;<span class="comment">//未添加修正符</span></span><br><span class="line"><span class="variable">$pattern2</span> = <span class="string">&#x27;/^test/m&#x27;</span>;<span class="comment">//添加了修正符m</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;test\ntest\ntest\ntest&quot;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern2</span>,<span class="variable">$str</span>,<span class="variable">$arr2</span>));<span class="comment">//int 4</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=4)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      1 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      2 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      3 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">```  </span><br><span class="line">修正符s:能把`\n`识别出来</span><br><span class="line">```php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/t.st/&#x27;</span>;</span><br><span class="line"><span class="variable">$pattern2</span> = <span class="string">&#x27;/t.st/s&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;t\nst&quot;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 0</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=0)</span></span><br><span class="line"><span class="comment">      empty</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern2</span>,<span class="variable">$str</span>,<span class="variable">$arr2</span>));<span class="comment">// int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;tst&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修正符<code>U</code>:<br>贪婪匹配：尽可能多地将满足字符串匹配进来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/a.*f/&#x27;</span>;</span><br><span class="line"><span class="variable">$pattern2</span> = <span class="string">&#x27;/a.*f/U&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;  aasqddqfwfwe  sdasdf&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">     array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;aasqddqfwfwe  sdasdf&#x27; (length=20)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern2</span>,<span class="variable">$str</span>,<span class="variable">$arr2</span>));<span class="comment">//int 2</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">    0 =&gt; </span></span><br><span class="line"><span class="comment">      array (size=2)</span></span><br><span class="line"><span class="comment">        0 =&gt; string &#x27;aasqddqf&#x27; (length=8)</span></span><br><span class="line"><span class="comment">        1 =&gt; string &#x27;asdf&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="正则表达式相关函数"><a href="#正则表达式相关函数" class="headerlink" title="正则表达式相关函数"></a>正则表达式相关函数</h3><p><code>preg_match_all()</code>:<strong>按指定的正则表达式，在给定的字符串中进行搜索，把匹配到符合特征的部分取出来</strong>,可选参数<code>$arr</code>是以二维数组的形式来存储匹配到的字符串,相同的元素将存在同一个数组中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/test/&#x27;</span>;</span><br><span class="line"><span class="variable">$test1</span> = <span class="string">&#x27;asdfghjkl&#x27;</span>;</span><br><span class="line"><span class="variable">$test2</span> = <span class="string">&#x27;asadfgtestftestgn&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="variable">$test1</span>,<span class="variable">$arr1</span>));<span class="comment">//int 0</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="variable">$test2</span>,<span class="variable">$arr2</span>));<span class="comment">//int 2</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">array (size=0)</span></span><br><span class="line"><span class="comment">  empty</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=0)</span></span><br><span class="line"><span class="comment">      empty</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面仅仅使用了普通字符匹配，也可以搭配<a href="https://www.runoob.com/regexp/regexp-metachar.html">元字符</a>来进行使用</p><blockquote><p>元字符<code>\d</code>匹配0-9其中任意一个数组<br>元字符<code>\D</code>匹配除了0-9以外的任意字符<br>元字符<code>.</code>匹配除换行符<code>\n</code>以外的任意字符<br>元字符<code>*</code>匹配0次，1次，或多次前面的字符<br>元字符<code>+</code>匹配1次或多次前面的字符<br>元字符<code>?</code>匹配0次或1次前面的字符<br>元字符<code>&#123;n&#125;</code>匹配前面恰好出现n次的字符<br>元字符<code>&#123;n,&#125;</code>匹配前面出现次数不少于n次的字符<br>元字符<code>&#123;n,m&#125;</code>匹配前面出现次数不少于n次,不多于m次的字符<br>元字符<code>^</code>或<code>\A</code>匹配字符串开始位置，必须以某个字符开头<br>元字符<code>$</code>或<code>\Z</code>匹配字符串结束位置，必须以某个字符结尾<br>元字符<code>|</code>，匹配两个或多个给定字符（有点类似于或的使用）<br>元字符<code>[]</code>，匹配<code>[]</code>中的任意一个字符，也可以搭配<code>|</code>使用<br>元字符<code>[^]</code>，匹配除了<code>[]</code>中的任意一个字符</p></blockquote><p>元字符和元字符之间也可以相互配合使用    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/t.&#123;3,&#125;st/&#x27;</span>;<span class="comment">//相当于&#x27;/t...st/&#x27;</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;test&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 0</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;teeest&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;teee12312st&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 1</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>配合使用默认情况下是<strong>贪婪匹配</strong>，也就是尽可能匹配更多的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/t.*st/&#x27;</span>;<span class="comment">//相当于&#x27;/t...st/&#x27;</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;testsdast&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;testsdast&#x27; (length=9)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;testsdasteweqst&#x27;</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;testsdasteweqst&#x27; (length=15)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果不想使用默认的贪婪匹配，可以在<code>.*</code>后面加上一个<code>?</code>，也就是<strong>懒惰匹配</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/t.*?st/&#x27;</span>;<span class="comment">//相当于&#x27;/t...st/&#x27;</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;testsdasteweqst&#x27;</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=2)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      1 =&gt; string &#x27;teweqst&#x27; (length=7)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>preg_match()</code>:preg_match()返回 pattern 的匹配次数。 它的值将是0次（不匹配）或1次，因为preg_match()在第一次匹配后 将会停止搜索。一般用于判断某个字符串中是否含有符合条件的字符串  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/a.*f/U&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;  aasqddqfwfwe  sdasdf&#x27;</span>;</span><br><span class="line">var_dump(preg_match(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; string &#x27;aasqddqf&#x27; (length=8)</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>判断是否含有某种特征的字符串  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/a.*f/U&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;  aasqddqfwfwe  sdasdf&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;符合特征&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;不符合特征&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>preg_replace()</code>:可以将根据正则表达式把指定部分的字符串进行替换  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$parrern</span> = <span class="string">&#x27;/&lt;div&gt;(.*?)&lt;\/div&gt;/&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;asadasda&lt;div&gt;fger&lt;/div&gt;fs&#x27;</span>;</span><br><span class="line"><span class="variable">$str1</span> = <span class="string">&#x27;&lt;a&gt;测试&lt;/a&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$parrern</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;找到了&#x27;</span>);</span><br><span class="line">var_dump(preg_replace(<span class="variable">$parrern</span>,<span class="variable">$str1</span>,<span class="variable">$str</span>));</span><br><span class="line"><span class="comment">//string &#x27;asadasda&lt;a&gt;测试&lt;/a&gt;fs&#x27; (length=23)</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;没找到&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果只是对<code>&lt;div&gt;&lt;/div&gt;</code>标签进行匹配修改,则可以在用于修改的字符串中加上正则表达式,如下所示  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$parrern</span> = <span class="string">&#x27;/&lt;div&gt;(.*?)&lt;\/div&gt;/&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;asadasda&lt;div&gt;fger&lt;/div&gt;fs&#x27;</span>;</span><br><span class="line"><span class="variable">$str1</span> = <span class="string">&#x27;&lt;a&gt;\\1&lt;/a&gt;&#x27;</span>;<span class="comment">//str1添加了正则表达式</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$parrern</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;找到了&#x27;</span>);</span><br><span class="line">var_dump(preg_replace(<span class="variable">$parrern</span>,<span class="variable">$str1</span>,<span class="variable">$str</span>));</span><br><span class="line"><span class="comment">//string &#x27;asadasda&lt;a&gt;fger&lt;/a&gt;fs&#x27; (length=21)</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;没找到&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h2&gt;&lt;p&gt;&lt;font color=#C0C0C0&gt;&lt;em&gt;注：正则表达式并不是php所独有的，因为在学习php的缘故，本篇采用</summary>
      
    
    
    
    
    <category term="正则表达式" scheme="http://example.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
</feed>
