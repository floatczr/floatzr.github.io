<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>floatc.zip</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-30T01:44:53.134Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>floatc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据结构与算法</title>
    <link href="http://example.com/2021/11/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2021/11/24/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</id>
    <published>2021-11-24T03:44:38.000Z</published>
    <updated>2021-11-30T01:44:53.134Z</updated>
    
    <content type="html"><![CDATA[<h3 id="数组（未实现自动增长）"><a href="#数组（未实现自动增长）" class="headerlink" title="数组（未实现自动增长）"></a>数组（未实现自动增长）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Arr</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span>* pBase;<span class="comment">//首元素地址</span></span><br><span class="line">    <span class="keyword">int</span> len;<span class="comment">//数组长度</span></span><br><span class="line">    <span class="keyword">int</span> cnt;<span class="comment">//有效元素个数</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_array</span><span class="params">(struct Arr*,<span class="keyword">int</span>)</span></span>;<span class="comment">//初始化数组</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">append_array</span><span class="params">(struct Arr*,<span class="keyword">int</span>)</span></span>;<span class="comment">//向数组末尾添加元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insert_array</span><span class="params">(struct Arr*,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;<span class="comment">//向数组中插入元素,pos的值从1开始</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">delete_array</span><span class="params">(struct Arr*,<span class="keyword">int</span>,<span class="keyword">int</span>*)</span></span>;<span class="comment">//删除数组中的元素并返回删除的值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(struct Arr*,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_empty</span><span class="params">()</span></span>;<span class="comment">//判断数组是否为空  </span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_full</span><span class="params">(struct Arr*)</span></span>;<span class="comment">//判断数组是否满</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_array</span><span class="params">(struct Arr*)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(struct Arr*)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inversion_array</span><span class="params">(struct Arr*)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">Arr</span> <span class="title">arr</span>;</span></span><br><span class="line">    <span class="keyword">int</span> lenth;</span><br><span class="line">    <span class="comment">// printf(&quot;请输入数组长度:&quot;);</span></span><br><span class="line">    <span class="comment">// scanf(&quot;%d&quot;,&amp;lenth);</span></span><br><span class="line">    <span class="comment">// init_array(&amp;arr,lenth);</span></span><br><span class="line">    init_array(&amp;arr,<span class="number">4</span>);</span><br><span class="line">    append_array(&amp;arr,<span class="number">33</span>);</span><br><span class="line">    append_array(&amp;arr,<span class="number">22</span>);</span><br><span class="line">    append_array(&amp;arr,<span class="number">100</span>);</span><br><span class="line">    insert_array(&amp;arr,<span class="number">2</span>,<span class="number">99</span>);</span><br><span class="line">    show_array(&amp;arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> pVal = <span class="number">0</span>;</span><br><span class="line">    delete_array(&amp;arr,<span class="number">1</span>,&amp;pVal);</span><br><span class="line">    show_array(&amp;arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,pVal);</span><br><span class="line"></span><br><span class="line">    inversion_array(&amp;arr);</span><br><span class="line">    show_array(&amp;arr);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    sort_array(&amp;arr);</span><br><span class="line">    show_array(&amp;arr);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_array</span><span class="params">(struct Arr* pArr,<span class="keyword">int</span> lenth)</span></span>&#123;</span><br><span class="line">    pArr-&gt;pBase = (<span class="keyword">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">int</span>)*lenth);</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pArr-&gt;pBase)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;动态内存分配失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        pArr-&gt;len = lenth;</span><br><span class="line">        pArr-&gt;cnt = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_empty</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isEmpty = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (pArr-&gt;cnt == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isEmpty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_array</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (is_empty(pArr))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;数组为空\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pArr-&gt;cnt; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,pArr-&gt;pBase[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_full</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isFull = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (pArr-&gt;cnt == pArr-&gt;len)</span><br><span class="line">    &#123;</span><br><span class="line">        isFull = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isFull;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">append_array</span><span class="params">(struct Arr* pArr,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isAppend = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (is_full(pArr))</span><br><span class="line">    &#123;</span><br><span class="line">        isAppend =  <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 假设当前数组有0个元素,cnt=0,向数组插入元素1</span></span><br><span class="line"><span class="comment">     * p[0] = ? cnt = 0   =&gt;   p[0] = 1 cnt = 1</span></span><br><span class="line"><span class="comment">     * p[1] = ? cnt = 1   =&gt;   p[1] = 2 cnt = 2</span></span><br><span class="line"><span class="comment">     * 所以可以得出结论每次插入的位置的下标和cnt相同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    pArr-&gt;pBase[pArr-&gt;cnt] = val;</span><br><span class="line">    pArr-&gt;cnt++;</span><br><span class="line">    <span class="keyword">return</span> isAppend;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insert_array</span><span class="params">(struct Arr* pArray,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isInsert = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (is_full(pArray))</span><br><span class="line">    &#123;</span><br><span class="line">        isInsert = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> ( pos&lt;<span class="number">1</span> || pos&gt;pArray-&gt;cnt+<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        isInsert = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = pArray-&gt;cnt<span class="number">-1</span>; i &gt;= pos<span class="number">-1</span>; --i)</span><br><span class="line">    &#123;</span><br><span class="line">        pArray-&gt;pBase[i+<span class="number">1</span>] = pArray-&gt;pBase[i];</span><br><span class="line">    &#125;</span><br><span class="line">    pArray-&gt;pBase[pos<span class="number">-1</span>] = val;</span><br><span class="line">    pArray-&gt;cnt++;</span><br><span class="line">    <span class="keyword">return</span> isInsert;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">delete_array</span><span class="params">(struct Arr* pArr,<span class="keyword">int</span> pos,<span class="keyword">int</span>* pVal)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isDelete = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (is_empty(pArr))</span><br><span class="line">    &#123;</span><br><span class="line">        isDelete = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pos&lt;<span class="number">1</span> || pos&gt;pArr-&gt;cnt)</span><br><span class="line">    &#123;</span><br><span class="line">        isDelete = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    *pVal = pArr-&gt;pBase[pos<span class="number">-1</span>];<span class="comment">//保存被删除元素的地址</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = pos<span class="number">-1</span>; i &lt; pArr-&gt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        pArr-&gt;pBase[i] = pArr-&gt;pBase[i];</span><br><span class="line">    &#125;</span><br><span class="line">    pArr-&gt;cnt--;</span><br><span class="line">    <span class="keyword">return</span> isDelete;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get</span><span class="params">(struct Arr* pArr,<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> pArr-&gt;pBase[index];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">inversion_array</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> j = pArr-&gt;cnt - <span class="number">1</span>;</span><br><span class="line">    <span class="comment">//第一个与倒数第一个交换，第二个与倒数第二个交换</span></span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">       t = pArr-&gt;pBase[j];</span><br><span class="line">       pArr-&gt;pBase[j] = pArr-&gt;pBase[i];</span><br><span class="line">       pArr-&gt;pBase[i] = t;</span><br><span class="line">       i++;</span><br><span class="line">       j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_array</span><span class="params">(struct Arr* pArr)</span></span>&#123;</span><br><span class="line">    <span class="comment">//升序冒泡</span></span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; pArr-&gt;cnt; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; pArr-&gt;cnt; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (pArr-&gt;pBase[i] &gt; pArr-&gt;pBase[j])</span><br><span class="line">            &#123;</span><br><span class="line">                t = pArr-&gt;pBase[i];</span><br><span class="line">                pArr-&gt;pBase[i] = pArr-&gt;pBase[j];</span><br><span class="line">                pArr-&gt;pBase[j] = t;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h3><p>与数组不同，链表的地址并不连续，这意味着链表可以更加灵活地使用内存。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span>* <span class="title">pNext</span>;</span></span><br><span class="line">&#125;NODE, *PNODE;</span><br><span class="line"></span><br><span class="line"><span class="function">PNODE <span class="title">create_list</span><span class="params">()</span></span>;<span class="comment">//创建链表</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse_list</span><span class="params">(PNODE)</span></span>;<span class="comment">//遍历输出链表元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_empty</span><span class="params">(PNODE pHead)</span></span>;<span class="comment">//判断链表是否为空</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">length_list</span><span class="params">(PNODE)</span></span>;<span class="comment">//判断链表长度</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insert_list</span><span class="params">(PNODE,<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;<span class="comment">//先链表种插入元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">delete_list</span><span class="params">(PNODE,<span class="keyword">int</span>,<span class="keyword">int</span>*)</span></span>;<span class="comment">//删除元素，同时保存被删除的元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_list</span><span class="params">(PNODE)</span></span>;<span class="comment">//链表排序</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    PNODE pHead = <span class="literal">NULL</span>;</span><br><span class="line">    pHead = create_list();</span><br><span class="line">    sort_list(pHead);</span><br><span class="line">    insert_list(pHead,<span class="number">2</span>,<span class="number">22</span>);</span><br><span class="line">    traverse_list(pHead);</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">if</span> (delete_list(pHead,<span class="number">2</span>,&amp;val))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;删除成功&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;删除失败&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function">PNODE <span class="title">create_list</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len;</span><br><span class="line">    <span class="keyword">int</span> val;<span class="comment">//用户输入的值</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化头节点</span></span><br><span class="line">    PNODE pHead = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pHead)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//pTail永远指向最后一个节点</span></span><br><span class="line">    PNODE pTail = pHead;</span><br><span class="line">    pTail-&gt;pNext = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化节点</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入链表长度&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;len);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        PNODE pNew = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">NULL</span> == pNew)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入第%d个链表的数据&quot;</span>,i+<span class="number">1</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;val);</span><br><span class="line">        pNew-&gt;data = val;</span><br><span class="line">        pNew-&gt;pNext = <span class="literal">NULL</span>; </span><br><span class="line">        pTail-&gt;pNext = pNew;</span><br><span class="line">        pTail = pNew;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pHead;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse_list</span><span class="params">(PNODE pHead)</span></span>&#123;</span><br><span class="line">    PNODE p = pHead-&gt;pNext;<span class="comment">//注意头节点没有val</span></span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">NULL</span>!=p) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p-&gt;data);</span><br><span class="line">            p = p-&gt;pNext;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">is_empty</span><span class="params">(PNODE pHead)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isEmpty;</span><br><span class="line">    <span class="keyword">if</span> (pHead-&gt;pNext == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isEmpty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">length_list</span><span class="params">(PNODE pHead)</span></span>&#123;</span><br><span class="line">    PNODE p = pHead-&gt;pNext;</span><br><span class="line">    <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        len++;</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_list</span><span class="params">(PNODE pHead)</span></span>&#123;</span><br><span class="line">    <span class="comment">//升序冒泡</span></span><br><span class="line">    <span class="keyword">int</span> i,j,t;</span><br><span class="line">    <span class="keyword">int</span> length = length_list(pHead);</span><br><span class="line">    PNODE p,q;</span><br><span class="line">    <span class="comment">// 第一层循环是有判断有多少个数参加循环</span></span><br><span class="line">    <span class="comment">// 第二层循环是判断每一个数要循环多少次</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>,p = pHead-&gt;pNext; i &lt; length<span class="number">-1</span>; i++,p = p-&gt;pNext) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (j = i+<span class="number">1</span>,q = p-&gt;pNext; j &lt; length; j++,q = q-&gt;pNext)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p-&gt;data &gt; q-&gt;data)</span><br><span class="line">            &#123;</span><br><span class="line">                t = p-&gt;data;</span><br><span class="line">                p-&gt;data = q-&gt;data;</span><br><span class="line">                q-&gt;data = t;</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">insert_list</span><span class="params">(PNODE pHead,<span class="keyword">int</span> pos,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="comment">//无需判断链表是否满，只要判断其插入位置前所有节点的指针域是否为null即可</span></span><br><span class="line">    <span class="keyword">bool</span> isInsert = <span class="literal">true</span>;</span><br><span class="line">    PNODE p = pHead;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//每遍历一次，p就指向下一个节点，完成时p指向pos-1个节点    </span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">NULL</span>!=p &amp;&amp; i&lt;pos<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//防止负数和空指针</span></span><br><span class="line">    <span class="keyword">if</span> (i&gt;pos<span class="number">-1</span> || <span class="literal">NULL</span>==p)</span><br><span class="line">    &#123;</span><br><span class="line">        isInsert = <span class="literal">false</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    PNODE pNew = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pNew)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    pNew-&gt;data = val;</span><br><span class="line">    pNew-&gt;pNext = p-&gt;pNext;</span><br><span class="line">    p-&gt;pNext = pNew;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> isInsert;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">delete_list</span><span class="params">(PNODE pHead,<span class="keyword">int</span> pos,<span class="keyword">int</span>* pVal)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isDelete = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    PNODE p = pHead;</span><br><span class="line">    <span class="comment">//要删除的元素必须存在</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">NULL</span>!=p-&gt;pNext &amp;&amp; i&lt;pos<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i&gt;pos<span class="number">-1</span> || <span class="literal">NULL</span>==p-&gt;pNext)</span><br><span class="line">    &#123;</span><br><span class="line">        isDelete = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    PNODE q = p-&gt;pNext;</span><br><span class="line">    *pVal = q-&gt;data;</span><br><span class="line">    p-&gt;pNext = q-&gt;pNext;</span><br><span class="line">    <span class="built_in">free</span>(q);</span><br><span class="line">    q = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">return</span> isDelete;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">NODE</span>* <span class="title">pNext</span>;</span></span><br><span class="line"></span><br><span class="line">&#125;NODE,*PNODE;</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">stack</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    PNODE pTop;<span class="comment">//指向栈顶元素</span></span><br><span class="line">    PNODE pBottom;<span class="comment">//指向栈底的第一个无意义节点</span></span><br><span class="line">&#125;STACK,*PSTACK;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(PSTACK)</span></span>;<span class="comment">//初始化栈</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(PSTACK,<span class="keyword">int</span>)</span></span>;<span class="comment">//添加元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(PSTACK)</span></span>;<span class="comment">//遍历元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pop</span><span class="params">(PSTACK,<span class="keyword">int</span>*)</span></span>;<span class="comment">//删除元素</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">(PSTACK)</span></span>;<span class="comment">//清空元素</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">(PSTACK)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    STACK s;</span><br><span class="line">    <span class="keyword">int</span> val = <span class="number">0</span>;</span><br><span class="line">    init(&amp;s);</span><br><span class="line">    push(&amp;s,<span class="number">1</span>);</span><br><span class="line">    push(&amp;s,<span class="number">2</span>);</span><br><span class="line">    push(&amp;s,<span class="number">3</span>);</span><br><span class="line">    push(&amp;s,<span class="number">4</span>);</span><br><span class="line">    push(&amp;s,<span class="number">5</span>);</span><br><span class="line">    traverse(&amp;s);</span><br><span class="line">    pop(&amp;s,&amp;val);</span><br><span class="line">    traverse(&amp;s);</span><br><span class="line">    clear(&amp;s);</span><br><span class="line">    traverse(&amp;s);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(PSTACK pS)</span></span>&#123;</span><br><span class="line">    pS-&gt;pTop = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">    <span class="keyword">if</span> (<span class="literal">NULL</span> == pS-&gt;pTop)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;内存分配失败\n&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        pS-&gt;pBottom = pS-&gt;pTop;</span><br><span class="line">        pS-&gt;pTop-&gt;pNext = <span class="literal">NULL</span>;<span class="comment">//pS-&gt;pBottom-&gt;pNext = NULL</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">push</span><span class="params">(PSTACK pS,<span class="keyword">int</span> val)</span></span>&#123;</span><br><span class="line">    PNODE pNew = (PNODE)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(NODE));</span><br><span class="line">    pNew-&gt;data = val;</span><br><span class="line">    pNew-&gt;pNext = pS-&gt;pTop;</span><br><span class="line">    pS-&gt;pTop = pNew;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">traverse</span><span class="params">(PSTACK pS)</span></span>&#123;</span><br><span class="line">    PNODE p = pS-&gt;pTop;</span><br><span class="line">    <span class="keyword">while</span> (p != pS-&gt;pBottom)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,p-&gt;data);</span><br><span class="line">        p = p-&gt;pNext;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isEmpty</span><span class="params">(PSTACK pS)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isEmpty = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (pS-&gt;pBottom == pS-&gt;pTop)</span><br><span class="line">    &#123;</span><br><span class="line">        isEmpty = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isEmpty;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">pop</span><span class="params">(PSTACK pS,<span class="keyword">int</span>* pVal)</span></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> isPop = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (isEmpty(pS))</span><br><span class="line">    &#123;</span><br><span class="line">        isPop = <span class="literal">false</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        PNODE r = pS-&gt;pTop;</span><br><span class="line">        *pVal = r-&gt;data;</span><br><span class="line">        pS-&gt;pTop = r-&gt;pNext;</span><br><span class="line">        <span class="built_in">free</span>(r);</span><br><span class="line">        r = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isPop;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear</span><span class="params">(PSTACK pS)</span></span>&#123;</span><br><span class="line">    <span class="comment">//采用依次出战，否则会造成内存泄漏</span></span><br><span class="line">    PNODE p;</span><br><span class="line">    <span class="keyword">if</span> (isEmpty(pS))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        PNODE p = pS-&gt;pTop;</span><br><span class="line">        <span class="keyword">while</span> (p != pS-&gt;pBottom)</span><br><span class="line">        &#123;</span><br><span class="line">            pS-&gt;pTop = pS-&gt;pTop-&gt;pNext;</span><br><span class="line">            <span class="built_in">free</span>(p);</span><br><span class="line">            p = pS-&gt;pTop;</span><br><span class="line">        &#125;</span><br><span class="line">        pS-&gt;pTop = pS-&gt;pBottom;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;数组（未实现自动增长）&quot;&gt;&lt;a href=&quot;#数组（未实现自动增长）&quot; class=&quot;headerlink&quot; title=&quot;数组（未实现自动增长）&quot;&gt;&lt;/a&gt;数组（未实现自动增长）&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;t</summary>
      
    
    
    
    
    <category term="c" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>简单c语言练习</title>
    <link href="http://example.com/2021/11/02/%E7%AE%80%E5%8D%95c%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A0/"/>
    <id>http://example.com/2021/11/02/%E7%AE%80%E5%8D%95c%E8%AF%AD%E8%A8%80%E7%BB%83%E4%B9%A0/</id>
    <published>2021-11-02T02:22:07.000Z</published>
    <updated>2021-11-25T01:04:34.624Z</updated>
    
    <content type="html"><![CDATA[<h3 id="求输入数字的位数"><a href="#求输入数字的位数" class="headerlink" title="求输入数字的位数"></a>求输入数字的位数</h3><ul><li>输入任意长度的整数判断其位数  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">        n++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (x &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="猜数游戏"><a href="#猜数游戏" class="headerlink" title="猜数游戏"></a>猜数游戏</h3><ul><li>系统会随机产生一个1到100的数字让玩家猜，如果玩家猜的数字大于所生成的随机数则输出”数字大了”，玩家猜的数字小于所生成的随机数则输出”数字小了”，直至猜中为止</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">int</span> number = rand() % <span class="number">100</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已经准备了一个1到100的数\n&quot;</span>);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;试着来猜一猜\n&quot;</span>);</span><br><span class="line">        count++;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="keyword">if</span> (a &gt; number)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;数字大了\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (a &lt; number)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;数字小了\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (a != number);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;猜对了,一共用了%d次&quot;</span>,count);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数字颠倒"><a href="#数字颠倒" class="headerlink" title="数字颠倒"></a>数字颠倒</h3><ul><li>输入任意长度数字输出其反转后的数字 </li><li>如输入 12345 输出 54321  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">int</span> digit;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        digit = x % <span class="number">10</span>; <span class="comment">//获得丢弃的一个数字</span></span><br><span class="line">        x /= <span class="number">10</span>; <span class="comment">//每次去掉最后一位</span></span><br><span class="line">        ret = ret * <span class="number">10</span> + digit; <span class="comment">//将每次获得的值*10 ，并加上丢弃的那一位数字</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;现在的x为%d,digit为%d,ret为%d\n&quot;</span>,x,digit,ret);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ret);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="100以内的素数"><a href="#100以内的素数" class="headerlink" title="100以内的素数"></a>100以内的素数</h3><ul><li>输出100以内的所有素数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> flag;<span class="comment">//判断是否为素数，1为素数，0则不为素数</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(i % j == <span class="number">0</span>)&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d为素数 &quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="输出前五十个素数"><a href="#输出前五十个素数" class="headerlink" title="输出前五十个素数"></a>输出前五十个素数</h3><ul><li>输出前五十个素数  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>; <span class="comment">//计数器</span></span><br><span class="line">    <span class="keyword">int</span> isPrime; <span class="comment">//判断是否为素数，1为素数，0不为素数</span></span><br><span class="line">    <span class="keyword">while</span> (count &lt; <span class="number">50</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        isPrime = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; x; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (x % i == <span class="number">0</span>) &#123;</span><br><span class="line">                isPrime = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isPrime == <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,x);</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">if</span> (count % <span class="number">5</span> == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        x++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="面值兑换"><a href="#面值兑换" class="headerlink" title="面值兑换"></a>面值兑换</h3><ul><li>有1角，2角，5角三种价值的纸币，输入需要兑换的金额数（元）,自动给出兑换为上述三种面额纸币的数量（需给出多种方案）  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> total,<span class="built_in">exit</span>;</span><br><span class="line">    <span class="keyword">int</span> one,two,five;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;total);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; total * <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; total * <span class="number">5</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; total * <span class="number">2</span>; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i * <span class="number">0.1</span> + j * <span class="number">0.2</span> + k * <span class="number">0.5</span> == total)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;得到%d元需要%d个一毛，%d个二毛，%d个五毛\n&quot;</span>,total,i,j,k);</span><br><span class="line">                    <span class="comment">// exit = 1;</span></span><br><span class="line">                    <span class="comment">// break;</span></span><br><span class="line">                    <span class="keyword">goto</span> out;</span><br><span class="line">                &#125;</span><br><span class="line">            </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// if (exit)</span></span><br><span class="line">            <span class="comment">// &#123;</span></span><br><span class="line">            <span class="comment">//     break;</span></span><br><span class="line">            <span class="comment">// &#125;</span></span><br><span class="line">             </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// if (exit)</span></span><br><span class="line">        <span class="comment">// &#123;</span></span><br><span class="line">        <span class="comment">//     break;</span></span><br><span class="line">        <span class="comment">// &#125;</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    out:</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="整数分解"><a href="#整数分解" class="headerlink" title="整数分解"></a>整数分解</h3><ul><li>输入任意长度数字后将其分解输出</li><li>如输入：123456</li><li>输出：1 2 3 4 5 6</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 整数分解，先将输入数字倒序，再利用倒序分解将原本倒的数字之间加入空格</span></span><br><span class="line"><span class="comment"> * 这种方法只适用于末尾不为0的数字</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x,y = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> b = x % <span class="number">10</span>;</span><br><span class="line">        y = y * <span class="number">10</span> + b;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (x &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,y);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> a = y % <span class="number">10</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line">        <span class="keyword">if</span> (y &gt; <span class="number">9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        y /= <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (y &gt; <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 这种方法的整数分解适用于所有整数</span></span><br><span class="line"><span class="comment"> * 输入的数字num的长度n，10*(n-1)获得其*对应的数的mask,如123的mask为100。123/100=1恰好能获取到其最高位上的数字，而123%100=23恰好能删去最高位上的数字。</span></span><br><span class="line"><span class="comment"> * 不断利用num/mask获取其最高位数字num%mask删去其最高位上的数字，就能拿到所有的数字了  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> mask = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x);</span><br><span class="line">    <span class="keyword">int</span> t = x;</span><br><span class="line">    <span class="comment">//确定mask(即10的x位数的次方)的值</span></span><br><span class="line">    <span class="keyword">while</span> (t &gt; <span class="number">9</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">        mask *= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,mask);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> d = x / mask;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,d);</span><br><span class="line">        <span class="keyword">if</span> (mask &gt; <span class="number">9</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        x %= mask;</span><br><span class="line">        mask /= <span class="number">10</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (mask &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="两整数的最大公因数"><a href="#两整数的最大公因数" class="headerlink" title="两整数的最大公因数"></a>两整数的最大公因数</h3><ul><li>求出两个整数的最大公因数  </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 辗转相除法（欧几里得算法）</span></span><br><span class="line"><span class="comment"> * 输入a=12 b=18，t为余数</span></span><br><span class="line"><span class="comment"> * 第一次循环结果：a=18 b=12 t=12</span></span><br><span class="line"><span class="comment"> * 第二次循环结果：a=12 b=6 t=6</span></span><br><span class="line"><span class="comment"> * 第三次循环结果：a=6 b=0 t=0</span></span><br><span class="line"><span class="comment"> * 当b=0时循环结束，最大公约数为a=6</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a,b,t;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">while</span> (b&gt;<span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        t = a % b;</span><br><span class="line">        a = b;</span><br><span class="line">        b = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="有序输出"><a href="#有序输出" class="headerlink" title="有序输出"></a>有序输出</h3><ul><li>输入一个数字n（3&lt;= n &lt;=6），输出由n+2组成三位数字，且这三位数字不能够重复</li><li>如输入 2，输出234 235 243 253 324 342…</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">    <span class="keyword">int</span> i,j,k;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    i = a;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= a+<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        j = a;</span><br><span class="line">        <span class="keyword">while</span> (j &lt;= a+<span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            k = a;</span><br><span class="line">            <span class="keyword">while</span> (k &lt;= a+<span class="number">3</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (i != j &amp;&amp; i != k &amp;&amp; j!= k)</span><br><span class="line">                &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,i*<span class="number">100</span>+j*<span class="number">10</span>+k);</span><br><span class="line">                    <span class="keyword">if</span> (count % <span class="number">6</span> == <span class="number">0</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">                    &#125;<span class="keyword">else</span></span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">                    &#125;  </span><br><span class="line">                &#125;</span><br><span class="line">                k++;</span><br><span class="line">            &#125;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="水仙花数"><a href="#水仙花数" class="headerlink" title="水仙花数"></a>水仙花数</h3><ul><li>打印出所有的”水仙花数”，所谓”水仙花数”是指一个三位数，其各位数字立方和等于该数本身</li><li>例如：153 是一个”水仙花数”，因为 153=1 的三次方＋5 的三次方＋3 的三次方</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    n = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> first = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        first *= <span class="number">10</span>;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i = first;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; first * <span class="number">10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> t = i;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> d = t % <span class="number">10</span>;<span class="comment">//拿到的个位数</span></span><br><span class="line">            t /= <span class="number">10</span>;<span class="comment">//除去个位数</span></span><br><span class="line">            <span class="keyword">int</span> p = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">            <span class="comment">//每个数字的三次方</span></span><br><span class="line">            <span class="keyword">while</span> (j &lt; n)</span><br><span class="line">            &#123;</span><br><span class="line">                p *= d;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//一个数字各个位数的三次方和</span></span><br><span class="line">            sum += p;</span><br><span class="line">            </span><br><span class="line">        &#125; <span class="keyword">while</span> (t &gt; <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">if</span> (sum == i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="九九乘法表"><a href="#九九乘法表" class="headerlink" title="九九乘法表"></a>九九乘法表</h3><ul><li>输出一个九九乘法表</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%d&quot;</span>,i,j,i*j);</span><br><span class="line">            <span class="keyword">if</span> (i * j &lt; <span class="number">10</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;   &quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;  &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="区间素数"><a href="#区间素数" class="headerlink" title="区间素数"></a>区间素数</h3><ul><li>输入一个区间给出其中的素数和及素数个数</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n ,m;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;m,&amp;n);</span><br><span class="line">    <span class="comment">//1不是素数，碰到1直接从2开始</span></span><br><span class="line">    <span class="keyword">if</span> (m == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        m = <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> isPrime;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = m; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        isPrime = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">2</span>; j &lt; i - <span class="number">1</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % j == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                isPrime = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isPrime)</span><br><span class="line">        &#123;</span><br><span class="line">            count++;</span><br><span class="line">            sum += i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>,count,sum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="真-猜数游戏"><a href="#真-猜数游戏" class="headerlink" title="真.猜数游戏"></a>真.猜数游戏</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    srand(time(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">int</span> num = rand() % <span class="number">100</span> - <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;被猜的数字是=%d\n&quot;</span>,num);</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">0</span>;<span class="comment">//限制次数</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入次数&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line">    <span class="keyword">int</span> isNeg = <span class="number">0</span>;<span class="comment">//判断是否为负数，1为负数，0为正数</span></span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入要猜的数字\n&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">if</span> (n &lt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            isNeg = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (n &gt; num)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;too big\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(n &lt; num)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;too small\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count == m)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">goto</span> out;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (n != num);</span><br><span class="line">    <span class="keyword">if</span> (!isNeg &amp;&amp; count &lt;= m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;bingo&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (count &lt; <span class="number">3</span> &amp;&amp; count &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;Lucky you&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;good guess&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    out: <span class="built_in">printf</span>(<span class="string">&quot;\ngame over\n&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;一共猜了%d次&quot;</span>,count);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="n项求和"><a href="#n项求和" class="headerlink" title="n项求和"></a>n项求和</h3><ul><li>2/1+3/2+5/3+8/5+13/8…n/k+(n+k)/k</li><li>输入一个数字n，计算输出满足上述算式之和</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下一项的分子是上项的分母，下一项的分母是上一项分子和分母之和</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">double</span> son,mo;</span><br><span class="line">    son = <span class="number">1</span>;</span><br><span class="line">    mo = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( <span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += (mo/son);</span><br><span class="line">        t = mo;</span><br><span class="line">        mo = mo + son;</span><br><span class="line">        son = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.2f&quot;</span>,sum);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="分式通分"><a href="#分式通分" class="headerlink" title="分式通分"></a>分式通分</h3><ul><li>将一个分式化为其最简形式</li><li>例如 输入12 18 输出 2/3</li><li>输入 1 2 输出 1/2</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a,b,m;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;b);</span><br><span class="line">    <span class="keyword">int</span> num1 = a;</span><br><span class="line">    <span class="keyword">int</span> num2 = b;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        m = num1 % num2;</span><br><span class="line">        num1 = num2;</span><br><span class="line">        num2 = m;</span><br><span class="line">    &#125; <span class="keyword">while</span> (num2 &gt; <span class="number">0</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;最大公约数为%d\n&quot;</span>,num1);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d/%d\n&quot;</span>,a/num1,b/num1);</span><br></pre></td></tr></table></figure><h3 id="汉字转换"><a href="#汉字转换" class="headerlink" title="汉字转换"></a>汉字转换</h3><ul><li>将汉字转换为拼音</li><li>例如 输入200 输出为 er ling ling</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;fu &quot;</span>);</span><br><span class="line">        x = -x;</span><br><span class="line">    &#125;</span><br><span class="line">     <span class="keyword">int</span> y = x;</span><br><span class="line">    <span class="keyword">int</span> mask = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">        count++;</span><br><span class="line">    &#125; <span class="keyword">while</span> (x &gt; <span class="number">9</span>);</span><br><span class="line">    <span class="keyword">while</span> (count &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mask *= <span class="number">10</span>;</span><br><span class="line">        count--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (mask &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> d = y / mask;</span><br><span class="line">        y = y % mask;</span><br><span class="line">        mask /= <span class="number">10</span>; </span><br><span class="line">        <span class="keyword">switch</span> (d)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ling&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;yi&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;er&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;san&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;si&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;wu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;liu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">7</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;qi&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;ba&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">9</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;jiu&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (mask &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="重复数字相加"><a href="#重复数字相加" class="headerlink" title="重复数字相加"></a>重复数字相加</h3><ul><li>输入一个整数n（0&lt; n &lt;10）和位数m,输出 n + nn + nnn + …</li><li>如输入 2 4 计算得出 2+22+222+2222之和 </li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a,n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>,&amp;a,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        t = t * <span class="number">10</span> + a;</span><br><span class="line">        sum += t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,sum);</span><br></pre></td></tr></table></figure><h3 id="大小写自动转换"><a href="#大小写自动转换" class="headerlink" title="大小写自动转换"></a>大小写自动转换</h3><ul><li>实现大小写的自动转换，输入小写字母时将其转换为大写字母，输入大写字母将其转换为小写字母,输入的不是小写字母则输出输入错误</li><li>例如输入 a 输出 A </li><li>输如 B 则输出 b</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**利用ascii码表转换大小写*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> distance;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入一个字母:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;distance);</span><br><span class="line">    <span class="keyword">int</span> a = distance;</span><br><span class="line">    <span class="keyword">if</span> (a &gt;= <span class="number">97</span> &amp;&amp; a &lt;= <span class="number">122</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//这是一个小写字母</span></span><br><span class="line">        distance -= <span class="number">32</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (a &lt; <span class="number">97</span> &amp;&amp; a &gt;= <span class="number">65</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//这是一个大写字母</span></span><br><span class="line">        distance += <span class="number">32</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入错误&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,distance);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;求输入数字的位数&quot;&gt;&lt;a href=&quot;#求输入数字的位数&quot; class=&quot;headerlink&quot; title=&quot;求输入数字的位数&quot;&gt;&lt;/a&gt;求输入数字的位数&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;输入任意长度的整数判断其位数  &lt;/li&gt;
&lt;/ul&gt;
&lt;figure clas</summary>
      
    
    
    
    
    <category term="c" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>数据结构入门</title>
    <link href="http://example.com/2021/07/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%85%A5%E9%97%A8/"/>
    <id>http://example.com/2021/07/15/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%85%A5%E9%97%A8/</id>
    <published>2021-07-14T18:25:12.000Z</published>
    <updated>2021-07-21T07:33:20.852Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本数组的操作"><a href="#基本数组的操作" class="headerlink" title="基本数组的操作"></a>基本数组的操作</h2><h3 id="数组元素的添加"><a href="#数组元素的添加" class="headerlink" title="数组元素的添加"></a>数组元素的添加</h3><p><strong>首先要认清楚，数组在被定义后是无法进行长度的修改的！！</strong><br>这里的添加只是在原有数组的基础上，创建一个长度增加的新数组，再把原数组的元素遍历塞到新数组中，在末尾再添加上新添加的元素，最后把新数组的名称改为原数组的名称，原数组由于没有指针指向它，会被jvm自动回收。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Array</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         *  解决数组长度不可变的问题，就是新创建一个数组添加对应长度</span></span><br><span class="line"><span class="comment">         *  原数组中的数据复制到新数组中,把要添加的数组元素添加到数组中</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">            <span class="keyword">int</span> arr[] = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">9</span>,<span class="number">7</span>,<span class="number">8</span>&#125;;</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入要添加的数据个数&quot;</span>);</span><br><span class="line">            Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">            <span class="keyword">int</span> addLength = scanner.nextInt();</span><br><span class="line">            <span class="keyword">int</span> newArr[] = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length + addLength];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">                newArr[i] = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = arr.length; i &lt; newArr.length; i++) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;请输入数据&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> newData = scanner.nextInt();</span><br><span class="line">                newArr[i] = newData;</span><br><span class="line">            &#125;</span><br><span class="line">        arr = newArr;<span class="comment">//替换数组名称</span></span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="数组元素的删除"><a href="#数组元素的删除" class="headerlink" title="数组元素的删除"></a>数组元素的删除</h3><p>原理和元素的添加类似，只不过在处理被删除元素之后的元素的索引值需要注意一下就行。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo01</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 该案例用于解决数组删除元素的问题</span></span><br><span class="line"><span class="comment">         * 具体思路还是先获取需要删除元素的索引，若索引越界则返回错误信息，</span></span><br><span class="line"><span class="comment">         * 若元素存在则先创建一个长度-1的数组，然后将要删除的元素剔除即可</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        <span class="keyword">int</span> originArray[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> transArray[] = <span class="keyword">new</span> <span class="keyword">int</span>[originArray.length-<span class="number">1</span>];</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入要删除的数据的下标&quot;</span>);</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> index = scanner.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (index &lt; <span class="number">0</span> || index &gt; originArray.length -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;输入索引错误&quot;</span>);</span><br><span class="line">            System.exit(<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; transArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= index) &#123;</span><br><span class="line">                transArray[i] = originArray[i + <span class="number">1</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                transArray[i] = originArray[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        originArray = transArray;<span class="comment">//注意替换数组名称</span></span><br><span class="line">        System.out.println(Arrays.toString(originArray));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="数组元素查找"><a href="#数组元素查找" class="headerlink" title="数组元素查找"></a>数组元素查找</h2><p>这里运用了线性查找和二分法查找两种查找方式  </p><h3 id="线性查找"><a href="#线性查找" class="headerlink" title="线性查找"></a>线性查找</h3><p>线性查找就是最简单最暴力的查找方式，直接遍历所有元素来寻找匹配上的数据  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SearchDemo01</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 普通的线性查找</span></span><br><span class="line"><span class="comment">     * 查找所在元素的下标</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] originArray = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入元素&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> element = scanner.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; originArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (element == originArray[i])&#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;所在下标为&quot;</span> + i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="二分法查找"><a href="#二分法查找" class="headerlink" title="二分法查找"></a>二分法查找</h3><p>二分法就是不断把数组分为二分之一，每次判断其数组的中值与输入输入数据的大小，不断地缩小其范围直至找到该数据<br>相比于线性查找来说，二分法查找确实效率更高更快，但这种查找方式只适用于有序数组之中  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinarySearch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 二分法查找</span></span><br><span class="line"><span class="comment">         * 需要注意的是二分法查询的只能是有序数组</span></span><br><span class="line"><span class="comment">         * 所谓二分，就是不断把查询范围一分为二，不断地缩小查询范围，进而找到所查找的元素</span></span><br><span class="line"><span class="comment">         * */</span></span><br><span class="line">        <span class="comment">//初始化目标数组</span></span><br><span class="line">        <span class="keyword">int</span>[] originArray = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">100</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; originArray.length; i++) &#123;</span><br><span class="line">            originArray[i] = i + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入查找的数据&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> index;</span><br><span class="line">        <span class="keyword">int</span> target = <span class="keyword">new</span> Scanner(System.in).nextInt();</span><br><span class="line">        <span class="keyword">int</span> begin = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> end = originArray.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mid = (begin + end)/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (originArray[mid] == target)&#123;</span><br><span class="line">                index = target;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (target &lt; originArray[mid])&#123;</span><br><span class="line">                    end = originArray[mid - <span class="number">1</span>];</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    begin = originArray[mid + <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                mid = (begin + end) / <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;所在索引为&quot;</span> + index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="面向对象的数组操作"><a href="#面向对象的数组操作" class="headerlink" title="面向对象的数组操作"></a>面向对象的数组操作</h2><p>运用了面向对象的思想，对数组封装了添加，删除，插入等基本操作（其实可以变相看作是ArrayList）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayDemo03</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 利用面向对象创建一个可变的数组</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//利用构造函数创建数组</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] originArray;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ArrayDemo03</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        originArray = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//抛出异常方法</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">throwException</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (index &lt; -<span class="number">1</span> || index &gt; originArray.length - <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;下表越界&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取数组的长度方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> originArray.length;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//展示数组的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">showArray</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Arrays.toString(originArray);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加新元素方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> newData)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] newArray = <span class="keyword">new</span> <span class="keyword">int</span>[originArray.length + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; originArray.length; i++) &#123;</span><br><span class="line">            newArray[i] = originArray[i];</span><br><span class="line">        &#125;</span><br><span class="line">        newArray[newArray.length-<span class="number">1</span>] = newData;</span><br><span class="line">        originArray = newArray;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据下标删除元素方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">minus</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        throwException(index);</span><br><span class="line">        <span class="keyword">int</span>[] newArray = <span class="keyword">new</span> <span class="keyword">int</span>[originArray.length - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; newArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt;= index) &#123;</span><br><span class="line">                newArray[i] = originArray[i + <span class="number">1</span>];</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                newArray[i] = originArray[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        originArray = newArray;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据下标获取元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> index)</span></span>&#123;</span><br><span class="line">        throwException(index);</span><br><span class="line">        <span class="keyword">return</span> originArray[index];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插入元素到指定位置</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(<span class="keyword">int</span> index, <span class="keyword">int</span> data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] newArray = <span class="keyword">new</span> <span class="keyword">int</span>[originArray.length + <span class="number">1</span>];</span><br><span class="line">        <span class="comment">//在索引之前的数据直接放入，在索引之后的数据索引加一位再放，空出的以为直接赋值即可</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; originArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &lt; index)&#123;</span><br><span class="line">                newArray[i] = originArray[i];</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                newArray[i + <span class="number">1</span>] = originArray[i];</span><br><span class="line">            &#125;</span><br><span class="line">            newArray[index] = data;</span><br><span class="line">        &#125;</span><br><span class="line">        originArray = newArray;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//替换指定索引的元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">set</span><span class="params">(<span class="keyword">int</span> index,<span class="keyword">int</span> data)</span></span>&#123;</span><br><span class="line">        throwException(index);</span><br><span class="line">        originArray[index] = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找指定元素的索引（线性查找）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; originArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (originArray[i] == data)&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;<span class="comment">//索引不存在</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查找指定元素的索引（二分法）</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span> data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> end = originArray.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> mid = (start + end) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (start &gt; end)&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (data == originArray[mid])&#123;</span><br><span class="line">                <span class="keyword">return</span> mid;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (data &lt; originArray[mid])&#123;</span><br><span class="line">                    end = originArray[mid - <span class="number">1</span>];</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    start = originArray[mid + <span class="number">1</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                mid = (start + end) / <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="稀疏数组"><a href="#稀疏数组" class="headerlink" title="稀疏数组"></a>稀疏数组</h2><p>稀疏数组可以看做是普通数组的压缩，但是这里说的普通数组是值无效数据量远大于有效数据量的数组，而稀疏数组的压缩就是只把有效的数据记录下来，其他无效的数据进行压缩。<br>稀疏数组是一个只有三列的二维数组，其第一行用于保存数组的具体的行数、列数和有效数值个数。从第二行开始，第一列和第二列分别用于保存有效数值的所在的行数和列数（这里可以近似看成x,y坐标），第三列用于保存有效数值的具体数值。<br>具体代码如下，这段代码中额外添加了将数组保存在本地的两个方法。<br><font color='gray'><del>美中不足的是在磁盘读取时必须手动指定行数.,回头试试用map集合看下能不能解决.</del> </font>   </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SprseArray</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个原始的二维数组11*11,并设置有效数值</span></span><br><span class="line">        <span class="keyword">int</span> array1[][] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">11</span>][<span class="number">11</span>];</span><br><span class="line">        array1[<span class="number">1</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line">        array1[<span class="number">2</span>][<span class="number">3</span>] = <span class="number">2</span>;</span><br><span class="line">        array1[<span class="number">3</span>][<span class="number">4</span>] = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将二维数组转化为稀疏数组</span></span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array1.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array1[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">                    sum++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">//设置第一行的数据</span></span><br><span class="line">        <span class="keyword">int</span> sparseArray[][] = <span class="keyword">new</span> <span class="keyword">int</span>[sum + <span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">11</span>;</span><br><span class="line">        sparseArray[<span class="number">0</span>][<span class="number">2</span>] = sum;</span><br><span class="line">        <span class="comment">//给稀疏数组添加有效值坐标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; array1.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (array1[i][j] != <span class="number">0</span>)&#123;</span><br><span class="line">                    sparseArray[count][<span class="number">0</span>] = i;</span><br><span class="line">                    sparseArray[count][<span class="number">1</span>] = j;</span><br><span class="line">                    sparseArray[count][<span class="number">2</span>] = array1[i][j];</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//调用方法将数组保存在本地</span></span><br><span class="line">        System.out.println(<span class="string">&quot;将稀疏数组存储到本地&quot;</span>);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            sparseArrayToIo(sparseArray);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用方法从本地读取稀疏数组</span></span><br><span class="line">        System.out.println(<span class="string">&quot;从本地读取稀疏数组&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span>[][] sparseArrayRead = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>][];</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">             sparseArrayRead = sparseArrayFromIo(<span class="number">4</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//将稀疏数组转化为二维数组</span></span><br><span class="line">        <span class="keyword">int</span> array2[][] = <span class="keyword">new</span> <span class="keyword">int</span>[sparseArrayRead[<span class="number">0</span>][<span class="number">0</span>]][sparseArrayRead[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; sparseArrayRead.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; sparseArrayRead.length; j++) &#123;</span><br><span class="line">                array2[sparseArrayRead[i][<span class="number">0</span>]][sparseArrayRead[i][<span class="number">1</span>]] = sparseArrayRead[i][<span class="number">2</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] testArray : array2)&#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> data : testArray)&#123;</span><br><span class="line">                System.out.print(data);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将稀疏数组保存至本地</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sparseArrayToIo</span><span class="params">(<span class="keyword">int</span>[][] sparseArray)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(<span class="string">&quot;sparseArray.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (!file.exists())&#123;</span><br><span class="line">            file.createNewFile();</span><br><span class="line">        &#125;</span><br><span class="line">        FileWriter writer = <span class="keyword">new</span> FileWriter(file);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; sparseArray.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                writer.write(sparseArray[i][j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        writer.flush();</span><br><span class="line">        writer.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//从本地读取稀疏数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] sparseArrayFromIo(<span class="keyword">int</span> lineNums) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        FileReader reader = <span class="keyword">new</span> FileReader(<span class="string">&quot;sparseArray.txt&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> data;</span><br><span class="line">        <span class="keyword">int</span>[][] sparseArray = <span class="keyword">new</span> <span class="keyword">int</span>[lineNums][<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; lineNums; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">3</span>; j++) &#123;</span><br><span class="line">                data = reader.read();</span><br><span class="line">                sparseArray[i][j] = data;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sparseArray;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><p>栈（stack）又名堆栈，它是一种运算受限的线性表。限定仅在表尾进行插入和删除操作的线性表。这一端被称为栈顶，相对地，把另一端称为栈底。向一个栈插入新元素又称作进栈、入栈或压栈，它是把新元素放到栈顶元素的上面，使之成为新的栈顶元素；从一个栈删除元素又称作出栈或退栈，它是把栈顶元素删除掉，使其相邻的元素成为新的栈顶元素。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StackDemo01</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] originArray;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">StackDemo01</span><span class="params">()</span></span>&#123;</span><br><span class="line">        originArray = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//向栈顶添加元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] newArray = <span class="keyword">new</span> <span class="keyword">int</span>[originArray.length + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; originArray.length; i++) &#123;</span><br><span class="line">            newArray[i] = originArray[i];</span><br><span class="line">        &#125;</span><br><span class="line">        newArray[originArray.length] = data;</span><br><span class="line">        originArray = newArray;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看所有元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">showStack</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(Arrays.toString(originArray));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//弹出栈顶元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (originArray.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;stack is empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> popNum = originArray[originArray.length - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span>[] newArray = <span class="keyword">new</span> <span class="keyword">int</span>[originArray.length - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; newArray.length; i++) &#123;</span><br><span class="line">            newArray[i] = originArray[i];</span><br><span class="line">        &#125;</span><br><span class="line">        originArray = newArray;</span><br><span class="line">        <span class="keyword">return</span> popNum;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//查看栈顶元素</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">peek</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (originArray.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;stack is empty&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> originArray[originArray.length - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断栈是否为空</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> originArray.length == <span class="number">0</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><p>链表是一种物理存储单元上非连续、非顺序的存储结构，数据元素的逻辑顺序是通过链表中的指针链接次序实现的。链表由一系列结点（链表中每一个元素称为结点）组成，结点可以在运行时动态生成。每个结点包括两个部分：一个是存储数据元素的数据域，另一个是存储下一个结点地址的指针域。 相比于线性表顺序结构，操作复杂。由于不必须按顺序存储，链表在插入的时候可以达到O(1)的复杂度，比另一种线性表顺序表快得多，但是查找一个节点或者访问特定编号的节点则需要O(n)的时间，而线性表和顺序表相应的时间复杂度分别是O(logn)和O(1)  </p><h3 id="单向链表"><a href="#单向链表" class="headerlink" title="单向链表"></a>单向链表</h3><p>单向链表（单链表）是链表的一种，其特点是链表的链接方向是单向的，对链表的访问要通过顺序读取从头部开始；链表是使用指针进行构造的列表；又称为结点列表，因为链表是由一个个结点组装起来的；其中每个结点都有指针成员变量指向列表中的下一个结点  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 一个链表由头指针开始，指向下一个节点头节点地址</span></span><br><span class="line"><span class="comment">     * 一个节点包括节点数据和下一个节点的地址</span></span><br><span class="line"><span class="comment">     * 与前面的栈和队列一样，不仅仅可以使用int类型的数据，也可以使用其他的数据类型</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">int</span> data;<span class="comment">//存储数据</span></span><br><span class="line">    Node next;<span class="comment">//下一个节点</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(<span class="keyword">int</span> data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//为节点追加节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">append</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line">        Node currentNode = <span class="keyword">this</span>;</span><br><span class="line">        Node nextNode = currentNode.next;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span> (nextNode == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            currentNode = nextNode;</span><br><span class="line">        &#125;</span><br><span class="line">        currentNode.next = node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除下一个节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line">        <span class="comment">//把下下个节点设置为当前节点的下个节点</span></span><br><span class="line">        <span class="keyword">this</span>.next = <span class="keyword">this</span>.next.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得当前节点的数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取下一个节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Node <span class="title">next</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断当前节点是否为最后一个节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isLast</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line">        node.next == <span class="keyword">null</span> ? <span class="keyword">true</span> : <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示所有节点信息</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">show</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Node currentNode = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            System.out.println(currentNode.data);</span><br><span class="line">            currentNode.next = currentNode;</span><br><span class="line">            <span class="keyword">if</span> (currentNode == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//插入节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(Node node)</span></span>&#123;</span><br><span class="line">       <span class="keyword">this</span>.next = node;</span><br><span class="line">       node.next = <span class="keyword">this</span>.next.next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="循环链表"><a href="#循环链表" class="headerlink" title="循环链表"></a>循环链表</h3><p>循环链表是另一种形式的链式存储结构。它的特点是表中最后一个结点的指针域指向头结点，整个链表形成一个环<br>这里代码是单向循环链表  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoopNode</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 循环链表中的最后一个节点的指针指向第一个节点</span></span><br><span class="line"><span class="comment">     * 实际上循环链表并没有头尾这一说法</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">int</span> data;<span class="comment">//存储数据</span></span><br><span class="line">    LoopNode next = <span class="keyword">this</span>;<span class="comment">//下一个节点就是第一个节点</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LoopNode</span><span class="params">(<span class="keyword">int</span> data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除下一个节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//把下下个节点设置为当前节点的下个节点</span></span><br><span class="line">        <span class="keyword">this</span>.next = <span class="keyword">this</span>.next.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获得当前节点的数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取下一个节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LoopNode <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//追加节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(LoopNode node)</span> </span>&#123;</span><br><span class="line">        LoopNode nextNode = next;<span class="comment">//这里是第一个节点</span></span><br><span class="line">        <span class="keyword">this</span>.next = node;</span><br><span class="line">        node.next = nextNode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="双向链表"><a href="#双向链表" class="headerlink" title="双向链表"></a>双向链表</h3><p>双向链表也叫双链表，是链表的一种，它的每个数据结点中都有两个指针，分别指向前驱和后继。<br>这里的代码写的是双向循环链表</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DoubleNode</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 双向链表在单链表的基础上，每个节点添加了一个前节点</span></span><br><span class="line"><span class="comment">     * 所以双向链表的每个节点一共有三个部分，分别为前节点 数据 后节点</span></span><br><span class="line"><span class="comment">     * 双向链表也有循环双向链表，最后一个节点的的后节点指向第一个节点</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line"></span><br><span class="line">    DoubleNode pre = <span class="keyword">this</span>;<span class="comment">//上一个节点</span></span><br><span class="line">    DoubleNode next = <span class="keyword">this</span>;<span class="comment">//下一个节点</span></span><br><span class="line">    <span class="keyword">int</span> data;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DoubleNode</span><span class="params">(<span class="keyword">int</span> data)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.data = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//增加节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">after</span><span class="params">(DoubleNode node)</span></span>&#123;</span><br><span class="line">        DoubleNode nextNextNode = <span class="keyword">this</span>.next;<span class="comment">//原来的下一个节点（也是插入后的下下个节点）</span></span><br><span class="line">        <span class="keyword">this</span>.next = node;</span><br><span class="line">        node.pre = <span class="keyword">this</span>;</span><br><span class="line">        node.next = nextNextNode;</span><br><span class="line">        nextNextNode.pre = node;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//上一个节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DoubleNode <span class="title">pre</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.pre;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//下一个节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DoubleNode <span class="title">next</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取当前节点的数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getData</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.data;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;基本数组的操作&quot;&gt;&lt;a href=&quot;#基本数组的操作&quot; class=&quot;headerlink&quot; title=&quot;基本数组的操作&quot;&gt;&lt;/a&gt;基本数组的操作&lt;/h2&gt;&lt;h3 id=&quot;数组元素的添加&quot;&gt;&lt;a href=&quot;#数组元素的添加&quot; class=&quot;headerlink</summary>
      
    
    
    
    
    <category term="数据结构与算法" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>初入c语言</title>
    <link href="http://example.com/2021/06/21/%E5%88%9D%E5%85%A5c%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2021/06/21/%E5%88%9D%E5%85%A5c%E8%AF%AD%E8%A8%80/</id>
    <published>2021-06-21T03:26:39.000Z</published>
    <updated>2021-11-25T01:06:13.744Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一个c语言程序"><a href="#第一个c语言程序" class="headerlink" title="第一个c语言程序"></a>第一个c语言程序</h2><p>连奶奶都知道的hello world  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;hello world\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="转义字符"><a href="#转义字符" class="headerlink" title="转义字符"></a>转义字符</h2><table><thead><tr><th align="center">转义字符</th><th align="left">意义</th><th align="center">ASCII码值（十进制）</th></tr></thead><tbody><tr><td align="center">\a</td><td align="left">响铃(BEL)</td><td align="center">007</td></tr><tr><td align="center">\b</td><td align="left">退格(BS) ，将当前位置移到前一列</td><td align="center">008</td></tr><tr><td align="center">\f</td><td align="left">换页(FF)，将当前位置移到下页开头</td><td align="center">012</td></tr><tr><td align="center">\n</td><td align="left">换行(LF) ，将当前位置移到下一行开头</td><td align="center">010</td></tr><tr><td align="center">\r</td><td align="left">回车(CR) ，将当前位置移到本行开头</td><td align="center">013</td></tr><tr><td align="center">\t</td><td align="left">水平制表(HT)</td><td align="center">009</td></tr><tr><td align="center">\v</td><td align="left">垂直制表(VT)</td><td align="center">011</td></tr><tr><td align="center">&#39;</td><td align="left">单引号</td><td align="center">039</td></tr><tr><td align="center">&quot;</td><td align="left">双引号</td><td align="center">034</td></tr><tr><td align="center">\</td><td align="left">反斜杠</td><td align="center">092</td></tr></tbody></table><h3 id="转义字符-0"><a href="#转义字符-0" class="headerlink" title="转义字符\0"></a>转义字符\0</h3><p>转义字符<code>\0</code>用于标识每个字符串的结尾，在每个字符串的后面编译器会自动加上<code>\0</code>来标识字符串的结尾  </p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>c语言变量名规则是：  </p><ul><li>变量名必须以英文字母或下划线开头  </li><li>变量名中的字母是区分大小写的  </li><li>变量名不能是<a href="#c%E8%AF%AD%E8%A8%80%E4%B8%AD%E7%9A%84%E5%85%B3%E9%94%AE%E5%AD%97">关键字</a>  </li><li>变量名中不能包含空格、标点符号和类型说明符 </li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><p><code>char</code>: 字符型，占用一个字节<br><code>int</code>:整型，通常反映了所用机器中整数的最自然长度<br><code>float</code>:单精度浮点型<br><code>double</code>:双精度浮点型<br><code>_Bool</code>:布尔型，只有<code>true</code>和<code>false</code>两种类型<br>还有<code>long int</code>、<code>long long int</code>等不表<br>不同数据类型的长度在不同的位数的操作系统之中是不同的  </p><h3 id="取值范围"><a href="#取值范围" class="headerlink" title="取值范围"></a>取值范围</h3><p>cpu中最小的单位是<strong>比特位</strong>，即<strong>bit</strong>，简写为b，称之为<strong>位</strong>,每个比特位只能存放<code>0或1</code><br>内存机构的最小寻址单位是<strong>字节</strong>，即<strong>byte</strong><br>一字节等于8比特，即等式为<code>1byte = 8bit</code>，所以一个字节中最多能存放二进制最大数为11111111，即8个1，转换为十进制值为255<br>二进制11转化为十进制为3，二进制111转化为十进制为7，二进制1111转化为十进制为15,由此可得出规律,二进制(全是1)类型转化为十进制等于$二进制1的个数^2-1$<br>在计算机中通常是采用补码的形式来存放整数的值，并且会用第一位来标识该数据的正负(0为正，1为负)。对于正数而言，正数的补码就是该数的二进制形式。对于负数而言则需要将除首位字符以外的二进制字符全部按位取反(即将0替换为1，1替换成0)后得到反码，接着将反码的值的末尾再加上一位1得到补码。所以负数的补码要比正数的补码多1位。</p><blockquote><p>例如：<code>0110111</code>的反码为<code>0001000</code>,补码为<code>00010001</code>  </p></blockquote><p>由于位于首位的正负标识符需要多占用一位，所以有效的取值范围应该是$(二进制1的个数-1)^2-1$,又因为默认所有的数据类型都用<a href="#signed%E5%92%8Cunsigned"><code>signed</code></a>修饰，所以存在正负。<br>根据<a href="#sizeof%E8%BF%90%E7%AE%97%E7%AC%A6">sizeof运算符</a>我们可以得到每个数据类型都有对应的字节数，而根据上面的规律我们可以推出每种数据类型的取值范围</p><table><thead><tr><th align="center">数据类型</th><th align="center">字节数</th><th align="center">位数(比特位)</th><th align="center">取值范围(十进制)</th></tr></thead><tbody><tr><td align="center">char</td><td align="center">2bytes</td><td align="center">16bits</td><td align="center">-2^15 ~ 2^15-1</td></tr><tr><td align="center">shrot int</td><td align="center">2bytes</td><td align="center">16bits</td><td align="center">-2^15 ~ 2^{15}-1</td></tr><tr><td align="center">int</td><td align="center">4bytes</td><td align="center">32bits</td><td align="center">-2^31 ~ 2^31-1</td></tr><tr><td align="center">long int</td><td align="center">4bytes</td><td align="center">32bits</td><td align="center">-2^31 ~ 2^31-1</td></tr></tbody></table><h2 id="c语言中的关键字"><a href="#c语言中的关键字" class="headerlink" title="c语言中的关键字"></a>c语言中的关键字</h2><p>关键字（Keywords）是由C语言规定的具有特定意义的字符串，通常也称为保留字，例如 int、char、long、float、unsigned 等。我们定义的标识符不能与关键字相同，否则会出现错误<br>c语言中一共有32个关键字，具体可见<a href="http://c.biancheng.net/cpp/html/797.html">C语言关键字及其解释</a></p><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><p>常量在运行过程中的值无法被改变,为了区分变量和常量的区别，一般用大写字母来命名<br>常量分为整型常量、实型常量、字符常量、字符串常量、符号常量  </p><ul><li>整型常量：由整数构成的常量  </li><li>实型常量：由小数构成的常量  </li><li>字符常量：由字符构成的常量  </li><li>字符串常量：由字符串构成的常量  </li><li>符号常量：符号常量在使用前必须被定义，由<code>#define</code>关键字来定义  <h3 id="符号常量"><a href="#符号常量" class="headerlink" title="符号常量"></a>符号常量</h3>符号常量在使用前必须被定义，由<code>#define</code>关键字来定义  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">define</span> NAME <span class="meta-string">&quot;FLOATC&quot;</span><span class="comment">//注意这里没有用分号结尾</span></span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, NAME);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="sizeof运算符"><a href="#sizeof运算符" class="headerlink" title="sizeof运算符"></a>sizeof运算符</h3><code>sizeof</code>运算符用于获得数据类型和表达式的长度(单位是字节)  <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(a));<span class="comment">//a的size大小为4</span></span><br><span class="line">    <span class="keyword">float</span> b = <span class="number">2.34121</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;b的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(b));<span class="comment">//b的size大小为4</span></span><br><span class="line">    <span class="keyword">double</span> c = <span class="number">23.453342</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;c的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span> c);<span class="comment">//c的size大小为8</span></span><br><span class="line">    <span class="keyword">char</span> d = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;d的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span> d);<span class="comment">//d的size大小为1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;short int的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">short</span> <span class="keyword">int</span>));<span class="comment">//short int的size大小为2</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;int的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">int</span>));<span class="comment">//int的size大小为4</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;long int的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">int</span>));<span class="comment">//long int的size大小为4</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;long long int的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span>));<span class="comment">//long long int的size大小为8</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;float的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">float</span>));<span class="comment">//float的size大小为4</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;double的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">double</span>));<span class="comment">//double的size大小为8</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;long double的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">long</span> <span class="keyword">double</span>));<span class="comment">//long double的size大小为16</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;char的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="keyword">char</span>));<span class="comment">//char的size大小为1</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;_Bool的size大小为%d\n&quot;</span>,<span class="keyword">sizeof</span>(<span class="built_in">_Bool</span>));<span class="comment">//_Bool的size大小为1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="signed和unsigned"><a href="#signed和unsigned" class="headerlink" title="signed和unsigned"></a>signed和unsigned</h3><code>signed</code>修饰的变量是有符号修饰的(即存在负数)，<code>unsigned</code>修饰的变量不带有符号位(即全部为正数)<br>在默认的情况下所有的整型都是带<code>signed</code>修饰符的<br><code>signed</code>存储,符号是有代价的,代价就是存储空间中的一个比特位专门用来存储符号,这一位不能表示数值  </li></ul><h3 id="字符和字符串"><a href="#字符和字符串" class="headerlink" title="字符和字符串"></a>字符和字符串</h3><p>可以用整数%d来输出单个字符<br>与int默认用signed修饰不一样，char的signed和unsigned修饰符是由编译系统自己决定的  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用字符输出&#x27;C&#x27;的值为%d\n&quot;</span>,a);</span><br><span class="line">    <span class="comment">//用字符串输出&#x27;C&#x27;的值为67</span></span><br><span class="line">    <span class="keyword">char</span> num = <span class="number">67</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用字符串输出67的值为%c\n&quot;</span>,num);</span><br><span class="line">    <span class="comment">//用字符串输出67的值为C</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> num1 = <span class="number">160</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;用字符串输出67的值为%d&quot;</span>,num1);<span class="comment">//-96</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在计算机中，每个字母大小写和特殊字符都有一个整数与之一一对应，具体可以参照<a href="https://baike.baidu.com/item/ASCII/309296?fr=aladdin">ASCII</a>,ASCII是最通用的信息交换标准，并等同于国际标准ISO/IEC 646。ASCII第一次以规范标准的类型发表是在1967年，最后一次更新则是在1986年，到目前为止共定义了128个字符  </p><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><p>C 语言虽然没有字符串类型，但是 C语言提是存在字符串这个概念的，也就是字符串常量：以 NULL 字节结尾的 0 个或多个字符组成的序列。字符串常量是不可被修改的，一般用一对双引号(“ “)括起的一串字符来表示字符串常量（实际上字符串就是字符类型的数组）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义一个字符串</span></span><br><span class="line">    <span class="keyword">char</span> name1[<span class="number">7</span>];</span><br><span class="line">    <span class="comment">//给字符串赋值</span></span><br><span class="line">    name1[<span class="number">0</span>] = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">    name1[<span class="number">1</span>] = <span class="string">&#x27;L&#x27;</span>;</span><br><span class="line">    name1[<span class="number">2</span>] = <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    name1[<span class="number">3</span>] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    name1[<span class="number">4</span>] = <span class="string">&#x27;T&#x27;</span>;</span><br><span class="line">    name1[<span class="number">5</span>] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">    name1[<span class="number">6</span>] = <span class="string">&#x27;\0&#x27;</span>;<span class="comment">//得自己手动填充\0来保证字符串的结束</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;name1 = %s\n&quot;</span>,name1);<span class="comment">//name1 = FLOATC</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//也可以这样写</span></span><br><span class="line">    <span class="keyword">char</span> name2[<span class="number">7</span>] = &#123;<span class="string">&#x27;F&#x27;</span>,<span class="string">&#x27;L&#x27;</span>,<span class="string">&#x27;O&#x27;</span>,<span class="string">&#x27;A&#x27;</span>,<span class="string">&#x27;T&#x27;</span>,<span class="string">&#x27;C&#x27;</span>,<span class="string">&#x27;\0&#x27;</span>&#125;;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;name2 = %s\n&quot;</span>,name2);<span class="comment">//name2 = FLOATC</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//甚至连大括号也可以去除</span></span><br><span class="line">    <span class="keyword">char</span> name3[] = <span class="string">&quot;FLOATC&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;name3 = %s\n&quot;</span>,name3);<span class="comment">//name3 = FLOATC</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">例子</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">+</td><td align="center">加法运算符（双目）</td><td align="center">5+3</td><td align="center">8</td></tr><tr><td align="center">-</td><td align="center">减法运算符（双目）</td><td align="center">5-3</td><td align="center">2</td></tr><tr><td align="center">*</td><td align="center">乘法运算符（双目）</td><td align="center">5*3</td><td align="center">15</td></tr><tr><td align="center">/</td><td align="center">除法运算符（双目）</td><td align="center">5/3</td><td align="center">1</td></tr><tr><td align="center">%</td><td align="center">求余运算符（双目）</td><td align="center">5%3</td><td align="center">2</td></tr><tr><td align="center">+</td><td align="center">正号运算符（单目）</td><td align="center">+5</td><td align="center">+5</td></tr><tr><td align="center">-</td><td align="center">符号运算符（单目）</td><td align="center">-5</td><td align="center">-5</td></tr></tbody></table><p>在运算中，运算符遵从一定的<a href="https://blog.csdn.net/huangblog/article/details/8271791">运算规律</a>（也就是先后顺序）  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, j, k;</span><br><span class="line">    i = <span class="number">1</span> + <span class="number">2</span>;</span><br><span class="line">    j = <span class="number">1</span> + <span class="number">2</span> * <span class="number">3</span>;</span><br><span class="line">    k = i + j + <span class="number">-1</span> + <span class="built_in">pow</span>(<span class="number">2</span>,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;i = %d\n&quot;</span>,i);<span class="comment">//3</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;j = %d\n&quot;</span>,j);<span class="comment">//7</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;k = %d\n&quot;</span>,k);<span class="comment">//17</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="关系运算符"><a href="#关系运算符" class="headerlink" title="关系运算符"></a>关系运算符</h3><p>关系运算符用于比较两数之间的大小关系<br>关系表达式只会返回<code>true</code>（1）和<code>false</code>（0） </p><table><thead><tr><th align="center">运算符</th><th align="center">名称</th></tr></thead><tbody><tr><td align="center">&lt;</td><td align="center">小于</td></tr><tr><td align="center">&gt;</td><td align="center">大于</td></tr><tr><td align="center">&lt;=</td><td align="center">小于等于</td></tr><tr><td align="center">&gt;=</td><td align="center">大于等于</td></tr><tr><td align="center">==</td><td align="center">等于</td></tr><tr><td align="center">!=</td><td align="center">不等于</td></tr></tbody></table><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><table><thead><tr><th align="center">运算符</th><th align="center">名称</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">!</td><td align="center">逻辑非</td><td align="center">取反</td></tr><tr><td align="center">||</td><td align="center">逻辑或</td><td align="center">一真全真，全假才假</td></tr><tr><td align="center">&amp;&amp;</td><td align="center">逻辑与</td><td align="center">全真才真，一假全假</td></tr></tbody></table><h3 id="短路求值"><a href="#短路求值" class="headerlink" title="短路求值"></a>短路求值</h3><p>当在进行到与逻辑运算时，在第一步判断左边的表达式为false时，则直接判断整个表达式为false，而不会继续对右边表达式进行判断（或运算符同理）  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> b = <span class="number">3</span>;</span><br><span class="line">    (a = <span class="number">-1</span>) &amp;&amp; (b = <span class="number">5</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d\n&quot;</span>,a,b);<span class="comment">//a=-1,b=5</span></span><br><span class="line">    (a = <span class="number">1</span>) || (b = <span class="number">2</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;a=%d,b=%d&quot;</span>,a,b);<span class="comment">//a=1,b=5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h3><p>当不同类型的数据进新计算的时候，编译器会把需要操作的数据转化为共同的数据类型，一般情况下会选择转换为这些数据中最大的数据类型<br>注意在进行强转时，高精度的数据类型向小低精度据类型转化时会丢失精度</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> i = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整型输出（未强转）：i+j=%d\n&quot;</span>,i + j);<span class="comment">//0（错误）</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;整型输出（强转）：i+j=%d\n&quot;</span>,(<span class="keyword">int</span>)i + j);<span class="comment">//3</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;浮点型输出：i+j=%.1f&quot;</span>,i + j);<span class="comment">//3.0</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h2><p>千篇一律的if语句语法。。实在不想写了，直接来个例子好了    </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">float</span> mark;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入数字\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;mark);</span><br><span class="line">    <span class="keyword">if</span> (mark &lt; <span class="number">60</span> &amp;&amp; mark &gt;= <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;不及格\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (mark &gt;= <span class="number">60</span> &amp;&amp; mark &lt; <span class="number">70</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;D\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (mark &gt;= <span class="number">70</span> &amp;&amp; mark &lt; <span class="number">80</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;C\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (mark &gt;= <span class="number">80</span> &amp;&amp; mark &lt; <span class="number">90</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;B\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (mark &gt;= <span class="number">90</span> &amp;&amp; mark &lt;= <span class="number">100</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;A\n&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;输入错误\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> level;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入等级\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>, &amp;level);</span><br><span class="line">    <span class="keyword">switch</span> (level)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;你的成绩在90以上&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;你的成绩在80~90之间&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;你的成绩在70~80之间&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;你的成绩在60~70之间&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="string">&#x27;E&#x27;</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;你的成绩在60以下&#x27;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&#x27;输入错误&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里值得一提的居然是有关scanf函数..<br>在利用<code>scanf()</code>函数连续输入多个数值的时候，其中的回车键也会被视为一个字符，记得用<code>getchar()</code>函数来清空空格符和回车符  </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;第一个c语言程序&quot;&gt;&lt;a href=&quot;#第一个c语言程序&quot; class=&quot;headerlink&quot; title=&quot;第一个c语言程序&quot;&gt;&lt;/a&gt;第一个c语言程序&lt;/h2&gt;&lt;p&gt;连奶奶都知道的hello world  &lt;/p&gt;
&lt;figure class=&quot;highli</summary>
      
    
    
    
    
    <category term="c" scheme="http://example.com/tags/c/"/>
    
  </entry>
  
  <entry>
    <title>php简单的crud练习</title>
    <link href="http://example.com/2021/06/13/php%E7%AE%80%E5%8D%95%E7%9A%84crud%E7%BB%83%E4%B9%A0/"/>
    <id>http://example.com/2021/06/13/php%E7%AE%80%E5%8D%95%E7%9A%84crud%E7%BB%83%E4%B9%A0/</id>
    <published>2021-06-13T12:21:10.000Z</published>
    <updated>2021-06-15T11:27:27.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="面向过程"><a href="#面向过程" class="headerlink" title="面向过程"></a>面向过程</h1><h2 id="首页"><a href="#首页" class="headerlink" title="首页"></a>首页</h2><p>mysql.php 为首页，在该页面上可以选择对数据进行增删改等操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//连接数据库</span></span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>);</span><br><span class="line"><span class="comment">//判断数据库是否连接成功，若连接失败则返回</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$link</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&#x27;数据库连接失败&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置数据库字符集</span></span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line"><span class="comment">//选择数据库</span></span><br><span class="line">mysqli_select_db(<span class="variable">$link</span>,<span class="string">&#x27;market&#x27;</span>);</span><br><span class="line"><span class="comment">//设置sql语句</span></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&#x27;select * from goods&#x27;</span>;</span><br><span class="line"><span class="comment">//执行sql语句</span></span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;table width=&quot;600&quot; border=&quot;1&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;th&gt;id&lt;/th&gt;&lt;th&gt;name&lt;/th&gt;&lt;th&gt;place&lt;/th&gt;&lt;th&gt;操作&lt;/th&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$rows</span> = mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;name&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;place&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&lt;a href=&quot;del.php?id=&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&#x27;&quot;&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="string">        /&lt;a href=&quot;update.php?id=&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&#x27;&quot;&gt;修改&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;add.php&quot;&gt;添加&lt;/a&gt;&#x27;</span>;</span><br><span class="line">mysqli_close(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h2><p>值得一提的时<code>mysqli_affected_rows($link)</code>方法，该方法返回修改后受影响的行数，可以用于判断sql语句是否执行成功  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*该文件用于删除操作*/</span></span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$link</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&#x27;数据库连接失败&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">mysqli_select_db(<span class="variable">$link</span>,<span class="string">&#x27;market&#x27;</span>);</span><br><span class="line"><span class="comment">//获取删除的哪一条数据</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;delete from goods where id = <span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="variable">$bool</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line"><span class="comment">//如果操作成功且有受影响的行数则操作成功</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$bool</span> &amp;&amp; mysqli_affected_rows(<span class="variable">$link</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;删除成功&lt;br&gt;&lt;a href=&quot;mysql.php&quot;&gt;返回&lt;/a&gt;&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;删除失败&#x27;</span>);</span><br><span class="line">    var_dump(mysqli_error(<span class="variable">$link</span>));</span><br><span class="line">&#125;</span><br><span class="line">mysqli_close(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h2><h3 id="update-php"><a href="#update-php" class="headerlink" title="update.php"></a>update.php</h3><p>不同于java中靠session传id，这里使用了隐藏input来传出去id的值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*这是获取修改操作的值的方法*/</span></span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$link</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&#x27;数据库连接失败&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">mysqli_select_db(<span class="variable">$link</span>,<span class="string">&#x27;market&#x27;</span>);</span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select * from goods where id = <span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line"><span class="variable">$rows</span> = mysqli_fetch_assoc(<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;doUpdate.php&quot;</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--设置隐藏表单传id值--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;?php echo $id;?&gt;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br><span class="line">        name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;?php echo $rows[&#x27;name&#x27;]?&gt;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        place:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&lt;?php echo $rows[&#x27;place&#x27;]?&gt;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;place&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;修改&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="doUpdate-php"><a href="#doUpdate-php" class="headerlink" title="doUpdate.php"></a>doUpdate.php</h3><p>接受update.php传来的值来进行insert操作</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*将从update.php中获取来的值对进行操作*/</span></span><br><span class="line"><span class="variable">$id</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;id&#x27;</span>];</span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$place</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;place&#x27;</span>];</span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$link</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&#x27;数据库连接失败&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">mysqli_select_db(<span class="variable">$link</span>,<span class="string">&#x27;market&#x27;</span>);</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;update goods set name=&#x27;<span class="subst">$name</span>&#x27;,place=&#x27;<span class="subst">$place</span>&#x27; where id=<span class="subst">$id</span>&quot;</span>;</span><br><span class="line"><span class="variable">$res</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$res</span> &amp;&amp; mysqli_affected_rows(<span class="variable">$link</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;修改成功&lt;br&gt;&lt;a href=&quot;mysql.php&quot;&gt;返回&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;修改失败&#x27;</span>;</span><br><span class="line">&#125;   </span><br><span class="line">mysqli_close(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="增加"><a href="#增加" class="headerlink" title="增加"></a>增加</h2><h3 id="add-php"><a href="#add-php" class="headerlink" title="add.php"></a>add.php</h3><p>仅仅只有个表单，可以考虑和后边的doAdd.php合并一下  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--提交用户添加操作表单--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;doAdd.php&quot;</span>&gt;</span></span><br><span class="line">        name:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        place:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;place&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="doAdd-php"><a href="#doAdd-php" class="headerlink" title="doAdd.php"></a>doAdd.php</h3><p>提一下<code>mysqli_insert_id($link)</code>这个方法，该方法是在进行insert操作后返回insert语句的id值，可以用于判断sql语句是否执行成功</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/*用于添加数据*/</span></span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$place</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;place&#x27;</span>];</span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$link</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&#x27;数据库连接失败&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">mysqli_select_db(<span class="variable">$link</span>,<span class="string">&#x27;market&#x27;</span>);</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;insert into goods(name,place) value (&#x27;<span class="subst">$name</span>&#x27;,&#x27;<span class="subst">$place</span>&#x27;)&quot;</span>;</span><br><span class="line"><span class="variable">$bool</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line"><span class="comment">//mysqli_insert_id($link)返回插入成功的id值</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$bool</span> &amp;&amp; mysqli_insert_id(<span class="variable">$link</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;添加成功&lt;br&gt;&lt;a href=&quot;mysql.php&quot;&gt;返回&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;添加失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h2><p>在一开始只有单页查询的基础上添加了分页查询<br>说说一些注意的点</p><ul><li><code>select count(*) as count from goods</code>:查询名为goods的表格中数据的数量，并将其别名为<code>count</code>返回。利用<code>as</code>关键字可以给复杂的查询结果取别名，极大简化了后边从结果集中取数据的过程。</li><li>分页查询具体的思路是数据库中获取数据的条目数量，然后设置每页的数据的个数，再利用限制查询<code>&#39;select * from goods limit $offset , $count</code>来查找出每页的数据。特别注意的是限制查询的偏移量是从0开始计算，所以在计算时要注意先减一再进行计算。<figure class="highlight php"><figcaption><span>html</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$link</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>(<span class="string">&#x27;数据库连接失败&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将提交的当前页数保存在$page中，初始话页面时不会收到数据则强制设置$page为1,</span></span><br><span class="line"><span class="comment">//若存在$page变量中则获取当前的$page变量值</span></span><br><span class="line"><span class="variable">$page</span> = <span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>]) ? <span class="number">1</span> : <span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">mysqli_select_db(<span class="variable">$link</span>,<span class="string">&#x27;market&#x27;</span>);</span><br><span class="line"><span class="comment">//获取数据库中数据字段数量</span></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&#x27;select count(*) as count from goods&#x27;</span>;</span><br><span class="line"><span class="variable">$res</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$pageRes</span> = mysqli_fetch_assoc(<span class="variable">$res</span>);</span><br><span class="line"><span class="variable">$count</span> = <span class="variable">$pageRes</span>[<span class="string">&#x27;count&#x27;</span>];</span><br><span class="line"><span class="comment">//设置每页数据为4条</span></span><br><span class="line"><span class="variable">$num</span> = <span class="number">4</span>;</span><br><span class="line"><span class="comment">//计算出总共的页数</span></span><br><span class="line"><span class="variable">$pageCount</span> = ceil(<span class="variable">$count</span>/<span class="variable">$num</span>);</span><br><span class="line"><span class="comment">//设置偏移量</span></span><br><span class="line"><span class="variable">$offset</span> = (<span class="variable">$page</span> - <span class="number">1</span>) * <span class="variable">$num</span>;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&#x27;select * from goods limit &#x27;</span>.<span class="variable">$offset</span>.<span class="string">&#x27;,&#x27;</span>.<span class="variable">$num</span>;</span><br><span class="line"><span class="comment">//限制查询数据，保证查询的数据在0和做最大页数之间</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$page</span> &lt; <span class="number">1</span>)&#123;</span><br><span class="line">    <span class="variable">$page</span> = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$page</span> &gt; <span class="variable">$pageCount</span>)&#123;</span><br><span class="line">    <span class="variable">$page</span> = <span class="variable">$pageCount</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;table width=&quot;600&quot; border=&quot;1&quot;&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;th&gt;id&lt;/th&gt;&lt;th&gt;name&lt;/th&gt;&lt;th&gt;place&lt;/th&gt;&lt;th&gt;操作&lt;/th&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$rows</span> = mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;name&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;place&#x27;</span>].<span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;td&gt;&lt;a href=&quot;del.php?id=&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&#x27;&quot;&gt;删除&lt;/a&gt;</span></span><br><span class="line"><span class="string">        /&lt;a href=&quot;update.php?id=&#x27;</span>.<span class="variable">$rows</span>[<span class="string">&#x27;id&#x27;</span>].<span class="string">&#x27;&quot;&gt;修改&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/table&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;add.php&quot;&gt;添加&lt;/a&gt;&#x27;</span>;</span><br><span class="line">mysqli_close(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head lang=<span class="string">&quot;en&quot;</span>&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;mysql.php?page=1&quot;</span>&gt;首页&lt;/a&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;mysql.php?page=&lt;?php echo <span class="subst">$page</span>-1;?&gt;&quot;</span>&gt;上一页&lt;/a&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;mysql.php?page=&lt;?php echo <span class="subst">$page</span>+1;?&gt;&quot;</span>&gt;下一页&lt;/a&gt;</span><br><span class="line">    &lt;a href=<span class="string">&quot;mysql.php?page=&lt;?php echo (int)<span class="subst">$pageCount</span>;?&gt;&quot;</span>&gt;尾页&lt;/a&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></li></ul><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><h2 id="数据库连接操作封装"><a href="#数据库连接操作封装" class="headerlink" title="数据库连接操作封装"></a>数据库连接操作封装</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#数据库操作类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Sql</span></span>&#123;</span><br><span class="line">    <span class="comment">#定义属性</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$host</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$port</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$dbname</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#传入数组</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$arr</span> = []</span>)</span>&#123;</span><br><span class="line">        <span class="comment">#完成初始化,设置默认值</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;host = <span class="variable">$arr</span>[<span class="string">&#x27;host&#x27;</span>] ?? <span class="string">&#x27;localhost&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;port = <span class="variable">$arr</span>[<span class="string">&#x27;port&#x27;</span>] ?? <span class="string">&#x27;3308&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;user = <span class="variable">$arr</span>[<span class="string">&#x27;user&#x27;</span>] ?? <span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;password = <span class="variable">$arr</span>[<span class="string">&#x27;password&#x27;</span>] ?? <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;dbname = <span class="variable">$arr</span>[<span class="string">&#x27;dbname&#x27;</span>] ?? <span class="string">&#x27;market&#x27;</span>;</span><br><span class="line">        <span class="comment">#自动调用连接和字符集设置</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;connect())&#123;</span><br><span class="line">            <span class="keyword">return</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;charset();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#连接认证</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$link</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$errno</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$error</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;link = mysqli_connect(<span class="keyword">$this</span>-&gt;host,<span class="keyword">$this</span>-&gt;user,<span class="keyword">$this</span>-&gt;password,<span class="keyword">$this</span>-&gt;dbname,<span class="keyword">$this</span>-&gt;port);</span><br><span class="line">        <span class="comment">#加工结果，对连接结果进行处理</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">$this</span>-&gt;link)&#123;</span><br><span class="line">            <span class="comment">#记录错误信息返回false</span></span><br><span class="line">            <span class="comment">#iconv();</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;error = iconv(<span class="string">&#x27;gbk&#x27;</span>,<span class="string">&#x27;utf8&#x27;</span>,mysqli_error(<span class="keyword">$this</span>-&gt;link));</span><br><span class="line">            <span class="keyword">$this</span>-&gt;errno = iconv(<span class="string">&#x27;gbk&#x27;</span>,<span class="string">&#x27;utf8&#x27;</span>,mysqli_errno(<span class="keyword">$this</span>-&gt;link));</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#字符集设置</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$charset</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">charset</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = @mysqli_set_charset(<span class="keyword">$this</span>-&gt;link,<span class="keyword">$this</span>-&gt;charset);</span><br><span class="line">        <span class="comment">#判定结果</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;errno = mysqli_errno(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error = mysqli_error(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#执行sql检查</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">#mysqli_query执行</span></span><br><span class="line">        <span class="variable">$res</span> = @mysqli_query(<span class="keyword">$this</span>-&gt;link,<span class="variable">$sql</span>);</span><br><span class="line">        <span class="comment">#判定错误</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;errno = mysqli_errno(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;error = mysqli_error(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#成功返回结果</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">#碰到insert语句则返回受影响的行数</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">#调用sql检查方法</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;check(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="comment">#如果$res为true,说明执行成功</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$res</span> ? mysqli_affected_rows(<span class="keyword">$this</span>-&gt;link) : <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#获取自增长id</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">inset_id</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="comment">#可以增加判定</span></span><br><span class="line">        <span class="keyword">return</span> mysqli_insert_id(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#执行单条读取操作</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$column</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;check(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="comment">#执行检查</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;column = mysqli_fetch_assoc(<span class="variable">$res</span>);</span><br><span class="line">            <span class="keyword">return</span> mysqli_fetch_assoc(<span class="variable">$res</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#执行多条读取操作</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$rows</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">read_all</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">        <span class="comment">#执行操作</span></span><br><span class="line">        <span class="variable">$res</span> = <span class="keyword">$this</span>-&gt;check(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="comment">#错误检查</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$res</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#结果正确</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;rows = @mysqli_num_rows(<span class="variable">$res</span>);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;column = @mysqli_field_count(<span class="keyword">$this</span>-&gt;link);</span><br><span class="line">        <span class="comment">#取出所有数据</span></span><br><span class="line">        <span class="variable">$list</span> = [];</span><br><span class="line">        <span class="keyword">while</span>(<span class="variable">$row</span> = mysqli_fetch_assoc(<span class="variable">$res</span>))&#123;</span><br><span class="line">            <span class="variable">$list</span>[] = <span class="variable">$row</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$list</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;面向过程&quot;&gt;&lt;a href=&quot;#面向过程&quot; class=&quot;headerlink&quot; title=&quot;面向过程&quot;&gt;&lt;/a&gt;面向过程&lt;/h1&gt;&lt;h2 id=&quot;首页&quot;&gt;&lt;a href=&quot;#首页&quot; class=&quot;headerlink&quot; title=&quot;首页&quot;&gt;&lt;/a&gt;首页&lt;/h</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php数据库</title>
    <link href="http://example.com/2021/06/09/php%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>http://example.com/2021/06/09/php%E6%95%B0%E6%8D%AE%E5%BA%93/</id>
    <published>2021-06-09T10:37:46.000Z</published>
    <updated>2021-06-12T09:59:32.297Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>数据库：数据库指的是可以存储信息的仓库，包含着一系列的关系措施<br>表：一个数据库中可以有若干张表（形式上可以看成日常生活中建立的表）<br>字段：表中的信息会分成若干个栏目来存储，在数据库技术中称为<strong>字段</strong>，每个栏目中存储的具体信息叫做<strong>字段值</strong><br>记录：一条信息称为一条记录  </p><p>一个数据库管理系统中可以建立若干个数据库，每个数据库中又可以建立若干张表，每张表中又可以有若干条数据  </p><h2 id="mysql数据类型"><a href="#mysql数据类型" class="headerlink" title="mysql数据类型"></a>mysql数据类型</h2><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><table><thead><tr><th align="center">类型</th><th align="center">大小</th><th align="center">范围（有符号）</th><th align="center">范围（无符号）</th><th align="center">用途</th></tr></thead><tbody><tr><td align="center">TINYINT</td><td align="center">1 byte</td><td align="center">(-128，127)</td><td align="center">(0，255)</td><td align="center">小整数值</td></tr><tr><td align="center">SMALLINT</td><td align="center">2 bytes</td><td align="center">(-32 768，32 767)</td><td align="center">(0，65 535)</td><td align="center">大整数值</td></tr><tr><td align="center">MEDIUMINT</td><td align="center">3 bytes</td><td align="center">(-8 388 608，8 388 607)</td><td align="center">(0，16 777 215)</td><td align="center">大整数值</td></tr><tr><td align="center">INT或INTEGER</td><td align="center">4 bytes</td><td align="center">(-2 147 483 648，2 147 483 647)</td><td align="center">(0，4 294 967 295)</td><td align="center">大整数值</td></tr><tr><td align="center">BIGINT</td><td align="center">8 bytes</td><td align="center">(-9,223,372,036,854,775,808，9 223 372 036 854 775 807)</td><td align="center">(0，18 446 744 073 709 551 615)</td><td align="center">极大整数值</td></tr><tr><td align="center">FLOAT</td><td align="center">4 bytes</td><td align="center">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td align="center">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td><td align="center">单精度</td></tr><tr><td align="center">浮点数值</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">DOUBLE</td><td align="center">8 bytes</td><td align="center">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="center">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td align="center">双精度浮点数值</td></tr><tr><td align="center">DECIMAL</td><td align="center">对DECIMAL(M,D) ，如果M&gt;D，为M+2否则为D+2</td><td align="center">依赖于M和D的值</td><td align="center">依赖于M和D的值</td><td align="center">小数值</td></tr></tbody></table><h3 id="日期和时间类型"><a href="#日期和时间类型" class="headerlink" title="日期和时间类型"></a>日期和时间类型</h3><table><thead><tr><th align="center">类型</th><th align="center">大小(bytes)</th><th align="center">范围</th><th align="center">格式</th><th align="center">用途</th></tr></thead><tbody><tr><td align="center">DATE</td><td align="center">3</td><td align="center">1000-01-01/9999-12-31</td><td align="center">YYYY-MM-DD</td><td align="center">日期值</td></tr><tr><td align="center">TIME</td><td align="center">3</td><td align="center">‘-838:59:59’/‘838:59:59’</td><td align="center">HH:MM:SS</td><td align="center">时间值或持续时间</td></tr><tr><td align="center">YEAR</td><td align="center">1</td><td align="center">1901/2155</td><td align="center">YYYY</td><td align="center">年份值</td></tr><tr><td align="center">DATETIME</td><td align="center">8</td><td align="center">1000-01-01 00:00:00/9999-12-31 23:59:59</td><td align="center">YYYY-MM-DD HH:MM:SS</td><td align="center">混合日期和时间值</td></tr></tbody></table><h3 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h3><table><thead><tr><th align="center">类型</th><th align="center">大小</th><th align="center">用途</th></tr></thead><tbody><tr><td align="center">CHAR</td><td align="center">0-255 bytes</td><td align="center">定长字符串</td></tr><tr><td align="center">VARCHAR</td><td align="center">0-65535 bytes</td><td align="center">变长字符串</td></tr><tr><td align="center">TINYBLOB</td><td align="center">0-255 bytes</td><td align="center">不超过 255 个字符的二进制字符串</td></tr><tr><td align="center">TINYTEXT</td><td align="center">0-255 bytes</td><td align="center">短文本字符串</td></tr><tr><td align="center">BLOB</td><td align="center">0-65 535 bytes</td><td align="center">二进制形式的长文本数据</td></tr><tr><td align="center">TEXT</td><td align="center">0-65 535 bytes</td><td align="center">长文本数据</td></tr><tr><td align="center">MEDIUMBLOB</td><td align="center">0-16 777 215 bytes</td><td align="center">二进制形式的中等长度文本数据</td></tr><tr><td align="center">MEDIUMTEXT</td><td align="center">0-16 777 215 bytes</td><td align="center">中等长度文本数据</td></tr><tr><td align="center">LONGBLOB</td><td align="center">0-4 294 967 295 bytes</td><td align="center">二进制形式的极大文本数据</td></tr><tr><td align="center">LONGTEXT</td><td align="center">0-4 294 967 295 bytes</td><td align="center">极大文本数据</td></tr></tbody></table><h2 id="SQL（结构化查询语言）"><a href="#SQL（结构化查询语言）" class="headerlink" title="SQL（结构化查询语言）"></a>SQL（结构化查询语言）</h2><h3 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h3><p>结构化查询语言(Structured Query Language)简称SQL，结构化查询语言是一种数据库查询和程序设计语言，用于存放数据以及查询、更新和管理关系数据库系统；同时也是数据库脚本文件的扩展名。结构化查询语言是高级的非过程化编程语言，允许用户在高层数据结构上工作。它不要求用户指定对数据的存放方法，也不需要用户了解具体的数据存放方式，所以具有完全不同底层结构的不同数据库系统，可以使用相同的结构化查询语言作为数据输入与管理的接口。结构化查询语言语句可以嵌套，这使它具有极大的灵活性和强大的功能  </p><h3 id="SQL分类"><a href="#SQL分类" class="headerlink" title="SQL分类"></a>SQL分类</h3><p><font color=grey>这篇文章主要讲述php对mysql的操作，对于sql语句则暂时略过</font></p><h4 id="数据查询语言（DQL）"><a href="#数据查询语言（DQL）" class="headerlink" title="数据查询语言（DQL）"></a>数据查询语言（DQL）</h4><p>数据查询语言（Data Query Language, DQL）是SQL语言中，负责进行数据查询而不会对数据本身进行修改的语句，这是最基本的SQL语句。保留字SELECT是DQL（也是所有SQL）用得最多的动词，其他DQL常用的保留字有FROM，WHERE，GROUP BY，HAVING和ORDER BY。这些DQL保留字常与其他类型的SQL语句一起使用。</p><h4 id="数据定义语言（DDL）"><a href="#数据定义语言（DDL）" class="headerlink" title="数据定义语言（DDL）"></a>数据定义语言（DDL）</h4><p>数据定义语言 (Data Definition Language, DDL) 是SQL语言集中，负责数据结构定义与数据库对象定义的语言，由CREATE、ALTER与DROP三个语法所组成，最早是由 Codasyl (Conference on Data Systems Languages) 数据模型开始，现在被纳入 SQL 指令中作为其中一个子集。</p><h4 id="数据操纵语言（DML）"><a href="#数据操纵语言（DML）" class="headerlink" title="数据操纵语言（DML）"></a>数据操纵语言（DML）</h4><p>数据操纵语言（Data Manipulation Language, DML）是SQL语言中，负责对数据库对象运行数据访问工作的指令集，以INSERT、UPDATE、DELETE三种指令为核心，分别代表插入、更新与删除。</p><h4 id="数据控制语言（DCL）"><a href="#数据控制语言（DCL）" class="headerlink" title="数据控制语言（DCL）"></a>数据控制语言（DCL）</h4><p>数据控制语言 (Data Control Language) 在SQL语言中，是一种可对数据访问权进行控制的指令，它可以控制特定用户账户对数据表、查看表、预存程序、用户自定义函数等数据库对象的控制权。由 GRANT 和 REVOKE 两个指令组成。DCL以控制用户的访问权限为主，GRANT为授权语句，对应的REVOKE是撤销授权语句。</p><h4 id="指针控制语言（CCL）"><a href="#指针控制语言（CCL）" class="headerlink" title="指针控制语言（CCL）"></a>指针控制语言（CCL）</h4><p>它的语句，像DECLARE CURSOR，FETCH INTO和UPDATE WHERE CURRENT用于对一个或多个表单独行的操作。</p><h4 id="事务处理语言（TPL）"><a href="#事务处理语言（TPL）" class="headerlink" title="事务处理语言（TPL）"></a>事务处理语言（TPL）</h4><p>它的语句能确保被DML语句影响的表的所有行及时得以更新。TPL语句包括BEGIN TRANSACTION，COMMIT和ROLLBACK。</p><h2 id="PHP与mysql的交互"><a href="#PHP与mysql的交互" class="headerlink" title="PHP与mysql的交互"></a>PHP与mysql的交互</h2><h3 id="入门操作"><a href="#入门操作" class="headerlink" title="入门操作"></a>入门操作</h3><p>连接指定的服务器<br><code>mysqli_connect($host,$user,$password,$database,$port,$socket);</code><br>参数依次为:<br><code>$host</code>:ip地址<br><code>$user</code>:数据库用户名<br><code>$password</code>:数据库密码<br><code>$database</code>:选择操作的数据库名字<br><code>$port</code>:端口号<br><code>$socket</code>:较少使用（不表）  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="comment">//与指定的mysql数据库进行连接</span></span><br><span class="line">var_dump(mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">返回值为一个数组</span></span><br><span class="line"><span class="comment">object(mysqli)[1]</span></span><br><span class="line"><span class="comment">  public &#x27;affected_rows&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  public &#x27;client_info&#x27; =&gt; string &#x27;mysqlnd 7.4.0&#x27; (length=13)</span></span><br><span class="line"><span class="comment">  public &#x27;client_version&#x27; =&gt; int 70400</span></span><br><span class="line"><span class="comment">  public &#x27;connect_errno&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  public &#x27;connect_error&#x27; =&gt; null</span></span><br><span class="line"><span class="comment">  public &#x27;errno&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  public &#x27;error&#x27; =&gt; string &#x27;&#x27; (length=0)</span></span><br><span class="line"><span class="comment">  public &#x27;error_list&#x27; =&gt; </span></span><br><span class="line"><span class="comment">    array (size=0)</span></span><br><span class="line"><span class="comment">      empty</span></span><br><span class="line"><span class="comment">  public &#x27;field_count&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  public &#x27;host_info&#x27; =&gt; string &#x27;localhost via TCP/IP&#x27; (length=20)</span></span><br><span class="line"><span class="comment">  public &#x27;info&#x27; =&gt; null</span></span><br><span class="line"><span class="comment">  public &#x27;insert_id&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  public &#x27;server_info&#x27; =&gt; string &#x27;5.7.28&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  public &#x27;server_version&#x27; =&gt; int 50728</span></span><br><span class="line"><span class="comment">  public &#x27;sqlstate&#x27; =&gt; string &#x27;00000&#x27; (length=5)</span></span><br><span class="line"><span class="comment">  public &#x27;protocol_version&#x27; =&gt; int 10</span></span><br><span class="line"><span class="comment">  public &#x27;thread_id&#x27; =&gt; int 6</span></span><br><span class="line"><span class="comment">  public &#x27;warning_count&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>mysqli_connect_errno()</code>:返回最后一次连接错误的错误代码(int类型),如果上一次成功连接则返回<code>flase</code><br><code>mysqli_connect_error()</code>:以字符串的形式返回上一次连接错误的具体内容<br><code>mysqli_set_charset($link,charset)</code>:用于设置mysql的字符集，参数<code>$link</code>为数据库连接对象，<code>$charset</code>为数据库字符集<br><code>mysqli_select_db($link,dbname);</code>:用于选择数据库,参数<code>$link</code>为数据库连接对象,<code>dbanne</code>为数据库名称，选择成功返回<code>true</code>，选择失败返回<code>false</code><br><code>mysqli_close($link);</code>:传入数据库连接对象，关闭连接  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="comment">//与指定的mysql数据库进行连接</span></span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>);</span><br><span class="line"><span class="comment">//如果发生了连接错误就打印连接错误的详细信息</span></span><br><span class="line"><span class="keyword">if</span>(mysqli_connect_errno())&#123;</span><br><span class="line">    var_dump(mysqli_connect_error());</span><br><span class="line">    <span class="comment">//&#x27;Access denied for user &#x27;root&#x27;@&#x27;localhost&#x27; (using password: YES)&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置默认字符编码  </span></span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line"><span class="comment">//选择特定的数据库</span></span><br><span class="line">mysqli_select_db(<span class="variable">$link</span>,<span class="string">&#x27;market&#x27;</span>);</span><br><span class="line"><span class="comment">//关闭服务器连接</span></span><br><span class="line">mysqli_close(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="处理结果集"><a href="#处理结果集" class="headerlink" title="处理结果集"></a>处理结果集</h3><p>执行sql语句使用<code>mysqli_query($link,$query)</code>语句,参数<code>$link</code>为数据库结果集,<code>$query</code>为要执行的sql语句,返回值为查询结果对象  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select * from goods&quot;</span>;<span class="comment">//设置查询语句</span></span><br><span class="line">var_dump(mysqli_query(<span class="variable">$link</span>,<span class="variable">$query</span>));<span class="comment">//查询并返回结果集对象</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(mysqli_result)[2]</span></span><br><span class="line"><span class="comment">  public &#x27;current_field&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  public &#x27;field_count&#x27; =&gt; int 3</span></span><br><span class="line"><span class="comment">  public &#x27;lengths&#x27; =&gt; null</span></span><br><span class="line"><span class="comment">  public &#x27;num_rows&#x27; =&gt; int 3</span></span><br><span class="line"><span class="comment">  public &#x27;type&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">```  </span><br><span class="line">`mysqli_fetch_row(<span class="variable">$result</span>)`：用于操作`mysqli_query()`方法返回的结果集对象。以索引数组的方式获取一条记录的数据  </span><br><span class="line">```php</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select * from goods&quot;</span>;</span><br><span class="line"><span class="comment">//执行sql语句并返回结果集对象</span></span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$data</span> = mysqli_fetch_row(<span class="variable">$result</span>))&#123;</span><br><span class="line">    var_dump(<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=3)</span></span><br><span class="line"><span class="comment">  0 =&gt; string &#x27;1&#x27; (length=1)</span></span><br><span class="line"><span class="comment">  1 =&gt; string &#x27;苹果&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  2 =&gt; string &#x27;南极&#x27; (length=6)</span></span><br><span class="line"><span class="comment">array (size=3)</span></span><br><span class="line"><span class="comment">  0 =&gt; string &#x27;3&#x27; (length=1)</span></span><br><span class="line"><span class="comment">  1 =&gt; string &#x27;鸭梨&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  2 =&gt; string &#x27;北极&#x27; (length=6)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><code>mysqli_fetch_assoc($result)</code>:以关联数组的形式获取一条记录的数据  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select * from goods&quot;</span>;</span><br><span class="line"><span class="variable">$result</span> = mysqli_query(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="variable">$data</span> = mysqli_fetch_assoc(<span class="variable">$result</span>))&#123;</span><br><span class="line">    var_dump(<span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=3)</span></span><br><span class="line"><span class="comment">  &#x27;id&#x27; =&gt; string &#x27;1&#x27; (length=1)</span></span><br><span class="line"><span class="comment">  &#x27;name&#x27; =&gt; string &#x27;苹果&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  &#x27;place&#x27; =&gt; string &#x27;南极&#x27; (length=6)</span></span><br><span class="line"><span class="comment">array (size=3)</span></span><br><span class="line"><span class="comment">  &#x27;id&#x27; =&gt; string &#x27;3&#x27; (length=1)</span></span><br><span class="line"><span class="comment">  &#x27;name&#x27; =&gt; string &#x27;鸭梨&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  &#x27;place&#x27; =&gt; string &#x27;北极&#x27; (length=6)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><code>mysqli_fetch_field($result)</code>:返回结果集中下一字段（列），然后输出每个字段名称、表格和最大长度<br><code>mysqli_fetch_fields($result)</code>:以数组形式返回结果集中所有字段<br><code>mysqli_num_rows($result)</code>:获取结果集的数量  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">var_dump(mysqli_num_rows(<span class="variable">$result</span>));<span class="comment">//2</span></span><br><span class="line">var_dump(mysqli_fetch_field(<span class="variable">$result</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(stdClass)[3]</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;id&#x27; (length=2)</span></span><br><span class="line"><span class="comment">  public &#x27;orgname&#x27; =&gt; string &#x27;id&#x27; (length=2)</span></span><br><span class="line"><span class="comment">  public &#x27;table&#x27; =&gt; string &#x27;goods&#x27; (length=5)</span></span><br><span class="line"><span class="comment">  public &#x27;orgtable&#x27; =&gt; string &#x27;goods&#x27; (length=5)</span></span><br><span class="line"><span class="comment">  public &#x27;def&#x27; =&gt; string &#x27;&#x27; (length=0)</span></span><br><span class="line"><span class="comment">  public &#x27;db&#x27; =&gt; string &#x27;market&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  public &#x27;catalog&#x27; =&gt; string &#x27;def&#x27; (length=3)</span></span><br><span class="line"><span class="comment">  public &#x27;max_length&#x27; =&gt; int 1</span></span><br><span class="line"><span class="comment">  public &#x27;length&#x27; =&gt; int 50</span></span><br><span class="line"><span class="comment">  public &#x27;charsetnr&#x27; =&gt; int 63</span></span><br><span class="line"><span class="comment">  public &#x27;flags&#x27; =&gt; int 49667</span></span><br><span class="line"><span class="comment">  public &#x27;type&#x27; =&gt; int 3</span></span><br><span class="line"><span class="comment">  public &#x27;decimals&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><code>mysqli_real_query($link,$query)</code>:判断查询是否成功，成功返回<code>true</code>，否则返回<code>false</code><br><code>mysqli_store_result($link)</code>:传入一个数据库对象，返回一个结果集对象</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$query</span> = <span class="string">&quot;select * from goods&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(mysqli_real_query(<span class="variable">$link</span>,<span class="variable">$query</span>))&#123;</span><br><span class="line">    <span class="variable">$result</span> = mysqli_store_result(<span class="variable">$link</span>);</span><br><span class="line">    var_dump(mysqli_fetch_fields(<span class="variable">$result</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="一些常用的其他参数"><a href="#一些常用的其他参数" class="headerlink" title="一些常用的其他参数"></a>一些常用的其他参数</h3><p><code>mysqli_affected_rows($link)</code>:获取前一条mysql操作影响的行数.执行成功，则返回受影响的行的数目，如果最近一次查询失败的话，函数返回 -1  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(mysqli_real_query(<span class="variable">$link</span>,<span class="variable">$query</span>))&#123;</span><br><span class="line">    var_dump(mysqli_affected_rows(<span class="variable">$link</span>));<span class="comment">//1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>mysqli_real_escape_string($link,$str)</code>:转义sql中的特殊字符防止出错,<code>$link</code>为数据库连接对象,<code>$str</code>为需要转义的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$str</span> = <span class="string">&lt;&lt;&lt;STRING</span></span><br><span class="line"><span class="string">SADADAS\/1``&quot;&quot;;</span></span><br><span class="line"><span class="string">STRING</span>;</span><br><span class="line">var_dump(mysqli_real_escape_string(<span class="variable">$link</span>,<span class="variable">$str</span>));<span class="comment">//mysqli_real_escape_string($link,$str);</span></span><br></pre></td></tr></table></figure><p><code>mysqli_multi_query($link,$query);</code>:一次性执行多条sql语句，sql语句之间用<code>;</code>隔开  </p><h3 id="预处理机制"><a href="#预处理机制" class="headerlink" title="预处理机制"></a>预处理机制</h3><p><code>mysqli_prepare($link,$query)</code>:准备执行的sql语句并返回一个statement对象<br><code>mysqli_stmt_bind_param ( mysqli_stmt $stmt , string $types , mixed &amp;$var1 [, mixed &amp;$... ] )</code><br><code>stmt</code>:由<code>mysqli_prepare()</code>方法返回的statement对象<br><code>$types</code>:一个包含一个或多个字符的字符串，这些字符指定相应绑定变量的类型：  </p><ul><li>i - 对应的变量具有整数类型  </li><li>d - 对应变量的类型为double  </li><li>s - 对应的变量具有字符串类型  </li><li>b - 对应的变量是blob，将以数据包形式发送  </li></ul><p>其格式的选择必须和后面的变量的类型和数量相同<br><code>$var1</code>:填充的参数，在sql语句定义时会用<code>?</code>来替代原本的参数，而在该方法中就必须为参数填充原本的内容，这里的参数必须与前面<code>$types</code>中定义的数量与类型一致    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>);</span><br><span class="line"><span class="keyword">if</span>(mysqli_connect_errno())&#123;</span><br><span class="line">    var_dump(mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">mysqli_select_db(<span class="variable">$link</span>,<span class="string">&#x27;market&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$val1</span> = <span class="string">&#x27;樱桃&#x27;</span>;</span><br><span class="line"><span class="variable">$val2</span> = <span class="string">&#x27;喜马拉雅山&#x27;</span>;</span><br><span class="line"><span class="comment">//准备的sql语句中使用占位符号</span></span><br><span class="line"><span class="variable">$query</span> = <span class="string">&quot;insert into goods(name,place) values(?,?)&quot;</span>;</span><br><span class="line"><span class="comment">//准备要执行的sql语句</span></span><br><span class="line"><span class="variable">$stmt</span> = mysqli_prepare(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line"><span class="comment">//绑定变量并执行sql语句</span></span><br><span class="line">mysqli_stmt_bind_param(<span class="variable">$stmt</span>,<span class="string">&#x27;ss&#x27;</span>,<span class="variable">$val1</span>,<span class="variable">$val2</span>);</span><br><span class="line">mysqli_close(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>在进行查询语句时我们需要将返回的数据拿到而不仅仅是返回一个<code>true</code>这时候需要使用<code>mysqli_stmt_bind_result($stmt,$vals..)</code>来将查询到的内容绑定到对应的变量上，再调用<code>mysqli_stmt_fetch($stmt)</code>来处理绑定好的对象  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="variable">$link</span> = mysqli_connect(<span class="string">&#x27;localhost&#x27;</span>,<span class="string">&#x27;root&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="string">&#x27;&#x27;</span>,<span class="number">3308</span>);</span><br><span class="line"><span class="keyword">if</span>(mysqli_connect_errno())&#123;</span><br><span class="line">    var_dump(mysqli_connect_error());</span><br><span class="line">&#125;</span><br><span class="line">mysqli_set_charset(<span class="variable">$link</span>,<span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">mysqli_select_db(<span class="variable">$link</span>,<span class="string">&#x27;market&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$val1</span> = <span class="number">6</span>;</span><br><span class="line"><span class="variable">$query</span> = <span class="string">&#x27;select * from goods where id &lt; ?&#x27;</span>;</span><br><span class="line"><span class="variable">$stmt</span> = mysqli_prepare(<span class="variable">$link</span>,<span class="variable">$query</span>);</span><br><span class="line">mysqli_stmt_bind_param(<span class="variable">$stmt</span>,<span class="string">&#x27;i&#x27;</span>,<span class="variable">$val1</span>);</span><br><span class="line">mysqli_stmt_execute(<span class="variable">$stmt</span>);</span><br><span class="line"><span class="comment">//将查询到的内容绑定到对应的变量上</span></span><br><span class="line">mysqli_stmt_bind_result(<span class="variable">$stmt</span>,<span class="variable">$id</span>,<span class="variable">$name</span>,<span class="variable">$place</span>);</span><br><span class="line"><span class="comment">//获取绑定好的变量的值</span></span><br><span class="line"><span class="keyword">while</span>(mysqli_stmt_fetch(<span class="variable">$stmt</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="variable">$id</span>.<span class="string">&#x27;:&#x27;</span>.<span class="variable">$name</span>.<span class="string">&#x27;:&#x27;</span>.<span class="variable">$place</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        1:苹果:南极</span></span><br><span class="line"><span class="comment">        3:鸭梨:北极</span></span><br><span class="line"><span class="comment">        5:樱桃:喜马拉雅山</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">&#125;</span><br><span class="line">mysqli_close(<span class="variable">$link</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;数据库：数据库指的是可以存储信息的仓库，包含着一系列的关系措施&lt;br&gt;表：一个数据库中可以有若干张表（形式上可以看成日常生活中建立的表）&lt;b</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php高级</title>
    <link href="http://example.com/2021/06/05/php%E9%AB%98%E7%BA%A7/"/>
    <id>http://example.com/2021/06/05/php%E9%AB%98%E7%BA%A7/</id>
    <published>2021-06-05T09:32:14.000Z</published>
    <updated>2021-06-09T09:04:23.324Z</updated>
    
    <content type="html"><![CDATA[<h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><p>面向对象开发方法将面向对象的思想应用于软件开发过程中，指导开发活动，是建立在对象”概念基础上的方法学，简称OO( Object-Oriented)方法。面向对象方法的本质是主张参照人们认识一个现实系统的方法，完成分析、设计与实现一个软件系统，提倡用人类在现实生活中常用的思维方法来认识和理解描述客观事物，强调最终建立的系统能映射冋题域，使得系统中的对象，以及对象之间的关系能够如实地反映问题域中固有的事物及其关系。<br><font color=grey><em>实在不想多写了，老生常谈的问题</em></font>  </p><h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p>通过<code>class</code>关键字来定义类<br>在这里定义了两个成员变量<code>$age</code>、<code>$name</code>和一个方法<code>eat()</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;eating&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">```  </span><br><span class="line">通过`<span class="keyword">new</span>`关键字来创建对象,也可以通过字符串赋值来创建对象  </span><br><span class="line">```php</span><br><span class="line"><span class="comment">//第一种创建对象的方法</span></span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="comment">//第二种创建对象的阴间方法</span></span><br><span class="line"><span class="variable">$name</span> = <span class="string">&#x27;person&#x27;</span>;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> <span class="variable">$name</span>();</span><br></pre></td></tr></table></figure><p>在php中是通过<code>-&gt;</code>符号来访问对象的成员变量或方法的,需要注意的是访问的成员变量和方法不需要加<code>$</code>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line">var_dump(<span class="variable">$zr</span>-&gt;age);<span class="comment">//null</span></span><br><span class="line">var_dump(<span class="variable">$zr</span>-&gt;eat());<span class="comment">//eating</span></span><br></pre></td></tr></table></figure><p>对象也可以直接通过<code>=</code>来进行赋值  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="variable">$zr</span>-&gt;age = <span class="number">19</span>;</span><br><span class="line">var_dump(<span class="variable">$zr</span>-&gt;age);<span class="comment">//int 19</span></span><br></pre></td></tr></table></figure><p>也可以在创建类是就对成员变量进行赋值,不过这种写法过于死板，直接指定了成员变量的值  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eat</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;eating&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  public &#x27;age&#x27; =&gt; int 19</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;zr&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><p>从上面对类的赋值也能够看到，无论是在类中，还是在类实例化之后进行对象的赋值都是十分不方便的，所以我们采用<strong>构造方法</strong>来对类进行初始化</p><h4 id="基本语法-1"><a href="#基本语法-1" class="headerlink" title="基本语法"></a>基本语法</h4><p>声明构造方法需要使用<code>__construct</code>关键字来进行修饰,本质上是个<a href="#%E5%B8%B8%E7%94%A8%E7%9A%84%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95">魔术方法</a>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;构造方法调用&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">//构造方法调用</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  public &#x27;age&#x27; =&gt; int 19</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;zr&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>构造方法也是可以带参数的，这使得对象的实例化更加灵活<br>这里的<code>$this</code>关键字代指的就是当前对象，即这里的person对象  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person(<span class="string">&#x27;zr&#x27;</span>,<span class="number">20</span>);</span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  public &#x27;age&#x27; =&gt; int 20</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;zr&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有了这个<code>$this</code>关键字，我们甚至可以在成员方法中调用另一个成员方法  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">first</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;第一步&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">second</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;first();</span><br><span class="line">        <span class="comment">//调用了first()方法</span></span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;第二部&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="variable">$zr</span>-&gt;second();<span class="comment">//第一步第二部</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><h4 id="概念-2"><a href="#概念-2" class="headerlink" title="概念"></a>概念</h4><p>继承是面向对象当中的一个概念，与多态、封装共为面向对象的三个基本特征。继承可以使得子类具有父类的属性和方法或者重新定义、追加属性和方法等<br><strong>php是单继承！</strong>  </p><h4 id="基本语法-2"><a href="#基本语法-2" class="headerlink" title="基本语法"></a>基本语法</h4><p>继承采用<code>extends</code>关键字，子类继承了父类可以调用父类的方法  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;人类&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eating</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;人类都会吃饭&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zr</span> <span class="keyword">extends</span> <span class="title">human</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> zr();</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$zr</span>-&gt;name.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//人类</span></span><br><span class="line"><span class="variable">$zr</span>-&gt;eating();<span class="comment">//人类都会吃饭</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然子类也可以拥有属于自己特有的成员变量和方法，当子类成员变量或方法于父类名字相同时，子类的成员变量和方法将会覆盖父类的成员变量和方法 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;人类&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eating</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;人类都会吃饭&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">coding</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;但是并不是所有的人类都会敲代码&#x27;</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zr</span> <span class="keyword">extends</span> <span class="title">human</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">coding</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;zr不仅继承了human还顺手敲了个代码&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> zr();</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$zr</span>-&gt;name).<span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$zr</span>-&gt;eating();</span><br><span class="line"><span class="variable">$zr</span>-&gt;coding();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">zr</span></span><br><span class="line"><span class="comment">人类都会吃饭</span></span><br><span class="line"><span class="comment">zr不仅继承了human还顺手敲了个代码</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="访问修饰符"><a href="#访问修饰符" class="headerlink" title="访问修饰符"></a>访问修饰符</h3><table><thead><tr><th align="center">修饰符</th><th align="center">外部访问</th><th align="center">子类继承</th></tr></thead><tbody><tr><td align="center">public</td><td align="center">允许</td><td align="center">允许</td></tr><tr><td align="center">protected</td><td align="center">不允许</td><td align="center">允许</td></tr><tr><td align="center">private</td><td align="center">不允许</td><td align="center">不允许</td></tr></tbody></table><p>访问修饰符对方法和成员变量的修饰同样适用<br><code>public</code>:公共权限，在类的内外都可以直接访问到  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span>,<span class="variable">$height</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;height = <span class="variable">$height</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person(<span class="string">&#x27;zr&#x27;</span>,<span class="number">19</span>,<span class="number">165</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;name;<span class="comment">//可以访问</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;age;<span class="comment">//无法访问</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;height;<span class="comment">//无法访问</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">```  </span><br><span class="line">`<span class="keyword">protected</span>`:受保护,只能在在本类中或许子类中访问到  </span><br><span class="line">```php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$person</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;name;<span class="comment">//可以访问</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;age;<span class="comment">//无法访问</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$zr</span>-&gt;height;<span class="comment">//无法访问</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">zr</span> <span class="keyword">extends</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">say</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;name.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//可以访问</span></span><br><span class="line">        <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;age.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//可以访问</span></span><br><span class="line">        <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;height  .<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//无法访问</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>private</code>：私有,不能再类的外部访问到，同时被改属性修饰的成员变量或方法都不能被继承  </p><h3 id="重写"><a href="#重写" class="headerlink" title="重写"></a>重写</h3><h4 id="概念-3"><a href="#概念-3" class="headerlink" title="概念"></a>概念</h4><p>重写又称为覆盖，就是将从父类继承下来的属性或方法重新定义再写一遍。子类覆盖父类的方法，虽然可以去调用父类的同名方法去完成一定的工作，但不是必须的。也有可能父类的该方法所执行的结果并不适合子类，此时子类就得重新覆盖这个方法，填充属于自己使用的方法</p><h4 id="完全重写"><a href="#完全重写" class="headerlink" title="完全重写"></a>完全重写</h4><p>完全重写适用于子类把父类方法继承之后全部重写的情况<br>在下面这个例子中子类继承了父类中的<code>jump()</code>并且重写了这个方法    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">jump</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;这个父类能跳三米&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> <span class="keyword">extends</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">jump</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;但是这个子类只能跳一米&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$father</span> = <span class="keyword">new</span> father();</span><br><span class="line"><span class="variable">$father</span>-&gt;jump();<span class="comment">//这个父类能跳三米</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$son</span> = <span class="keyword">new</span> son();</span><br><span class="line"><span class="variable">$son</span>-&gt;jump();<span class="comment">//但是这个子类只能跳一米</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="部分重写"><a href="#部分重写" class="headerlink" title="部分重写"></a>部分重写</h4><p>部分重写适用于要保留父类方法的一部分，同时添加或属于子类的特有方法<br>部分重写使用<code>parent::</code>关键字<br>在这个案例之中子类继承了父类的work方法，同时对其部分重写  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">work</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;这个工作真难做&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> <span class="keyword">extends</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">work</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::work();</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;所以子类可以选择摸鱼&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$father</span> = <span class="keyword">new</span> father();</span><br><span class="line"><span class="variable">$father</span>-&gt;work();<span class="comment">//这个工作真难做</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$son</span> = <span class="keyword">new</span> son();</span><br><span class="line"><span class="variable">$son</span>-&gt;work();<span class="comment">//这个工作真难做所以子类可以选择摸鱼</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>不仅可以对自己定义的方法部分重写，还可以对构造方法进行部分重写  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$firstName</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lastName</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$firstName</span>,<span class="variable">$lastName</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;firstName;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;lastName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">son</span> <span class="keyword">extends</span> <span class="title">father</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$firstName</span>,<span class="variable">$lastName</span></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">parent</span>::__construct(<span class="variable">$firstName</span>);<span class="comment">//调用父类的构造方法来初始化firstName变量</span></span><br><span class="line">        <span class="keyword">$this</span>-&gt;lastName = <span class="variable">$lastName</span>;<span class="comment">//自己初始化lastName变量</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="final关键字"><a href="#final关键字" class="headerlink" title="final关键字"></a>final关键字</h4><p>使用了<code>final</code>关键字类无法被继承，使用了<code>final</code>关键字的方法无法被重写</p><h4 id="重写中的权限修改"><a href="#重写中的权限修改" class="headerlink" title="重写中的权限修改"></a>重写中的权限修改</h4><p>重写之后的方法可以被修改权限,被重写方法的权限只能放大不能缩小  </p><blockquote><p>public修饰的方法被重写也只能用public修饰<br>protected修饰的方法可以被punlic和protected修饰<br>private无法被继承，所以无法重写  </p></blockquote><h3 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h3><h4 id="概念-4"><a href="#概念-4" class="headerlink" title="概念"></a>概念</h4><p>魔术方法是系统在特定时期自己调用的方法  </p><h4 id="常用的魔术方法"><a href="#常用的魔术方法" class="headerlink" title="常用的魔术方法"></a>常用的魔术方法</h4><table><thead><tr><th align="center">方法名称</th><th align="left">触发时机</th><th align="left">参数</th></tr></thead><tbody><tr><td align="center"><code>__get</code></td><td align="left">对象在外部访问私有成员变量或者受保护属性时调用</td><td align="left">属性名</td></tr><tr><td align="center"><code>__set</code></td><td align="left">对象在外部设置私有或者受保护成员属性值的时候调用</td><td align="left">成员属性名、要设置的值</td></tr><tr><td align="center"><code>__unset</code></td><td align="left">对象在外部销毁私有或受保护成员变量属性的时候调用</td><td align="left">受保护的或私有的成员变量属性名</td></tr><tr><td align="center"><code>__isset</code></td><td align="left">对象在外部判断私有或者受保护成员变量属性时调用</td><td align="left">受保护的或私有的成员变量属性名</td></tr><tr><td align="center"><code>__construct</code></td><td align="left">对象在创建时调用</td><td align="left">详细见<a href="#%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95">构造方法</a></td></tr><tr><td align="center"><code>__destruct</code></td><td align="left">方法在对象被销毁时调用</td><td align="left">无参</td></tr><tr><td align="center"><code>__sleep</code></td><td align="left">在对象序列化时调用</td><td align="left">无参，需要在返回值中填写需要序列化的属性名的数组</td></tr><tr><td align="center"><code>__wakeup</code></td><td align="left">在对象反序列化时调用</td><td align="left">无参，需要在返回值中进行对字符串的相关操作</td></tr><tr><td align="center"><code>__clone</code></td><td align="left">在克隆成功对象时调用</td><td align="left">无参，可以在方法内对克隆出来的属性值及方法进行修改</td></tr><tr><td align="center"><code>__autoload</code></td><td align="left">当new一个对象不存在时就会触发这个方法</td><td align="left">该类类名的字符串格式</td></tr></tbody></table><h4 id="get和-set魔术方法"><a href="#get和-set魔术方法" class="headerlink" title="__get和__set魔术方法"></a>__get和__set魔术方法</h4><p>利用<code>__get</code>和<code>__set</code>设置和取出属性值  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">    <span class="comment">//使用__get魔术方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$attr</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;age.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="keyword">$this</span>-&gt;height.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$attr</span>,<span class="variable">$val</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;height = <span class="variable">$val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="comment">//利用set方法设置属性值</span></span><br><span class="line"><span class="variable">$zr</span>-&gt;name = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line"><span class="variable">$zr</span>-&gt;__set(<span class="string">&#x27;age&#x27;</span>,<span class="number">17</span>);</span><br><span class="line"><span class="variable">$zr</span>-&gt;__set(<span class="string">&#x27;height&#x27;</span>,<span class="number">100</span>);</span><br><span class="line"><span class="comment">//利用get方法获取属性值</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$zr</span>-&gt;name);<span class="comment">//zs</span></span><br><span class="line"><span class="variable">$zr</span>-&gt;__get(<span class="string">&#x27;age&#x27;</span>);<span class="comment">//17</span></span><br><span class="line"><span class="variable">$zr</span>-&gt;__get(<span class="string">&#x27;height&#x27;</span>);<span class="comment">//100</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="unset和-isset魔术方法"><a href="#unset和-isset魔术方法" class="headerlink" title="__unset和__isset魔术方法"></a>__unset和__isset魔术方法</h4><p>一般来说可以使用<code>unset()</code>方法来销毁一个公共的成员变量属性，但是<code>unset()</code>方法无法删除一个受保护或私有的变量  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;name);<span class="comment">//销毁了name成员变量</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;age);<span class="comment">//报错,该变量为受保护变量</span></span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;height);<span class="comment">//报错,该变量为私有变量</span></span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  protected &#x27;age&#x27; =&gt; int 19</span></span><br><span class="line"><span class="comment">  private &#x27;height&#x27; =&gt; int 120</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>但在用<code>unset()</code>方法删除删除一个受保护或私有的变量时，会触发<code>__unset</code>魔术方法,可以利用<code>__unset</code>魔术方法来对这些成员变量进行删除  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unset</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$name</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$name</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">unset</span>(<span class="keyword">$this</span>-&gt;height);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;age);</span><br><span class="line"><span class="keyword">unset</span>(<span class="variable">$zr</span>-&gt;height);</span><br><span class="line">var_dump(<span class="variable">$zr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[1]</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;zr&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>同理<code>__isset</code>魔术方法，在判断对象外部对受保护或私有的成员变量有无设置过时会触发该魔术方法  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$age</span> = <span class="number">19</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$height</span> = <span class="number">120</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$attr</span>,<span class="variable">$val</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;age = <span class="variable">$val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$attr</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;height = <span class="variable">$val</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__isset</span>(<span class="params"><span class="variable">$val</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$val</span> == <span class="string">&#x27;age&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;age);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$val</span> == <span class="string">&#x27;height&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;height);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="variable">$zr</span>-&gt;height = <span class="number">100</span>;</span><br><span class="line">var_dump(<span class="keyword">isset</span>(<span class="variable">$zr</span>-&gt;height));<span class="comment">//true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="construct和-destruct魔术方法"><a href="#construct和-destruct魔术方法" class="headerlink" title="__construct和__destruct魔术方法"></a>__construct和__destruct魔术方法</h4><p><code>__construct</code>构造方法，详细请看之前<a href="#%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95">构造方法</a><br><code>__destruct</code>析构方法,该方法在对象被销毁时自动调用  </p><h4 id="sleep和-wakeup"><a href="#sleep和-wakeup" class="headerlink" title="__sleep和__wakeup"></a>__sleep和__wakeup</h4><p><code>serialize()</code>:序列化一个对象<br><code>unserialize()</code>:将一个对象反序列化<br><code>__sleep</code>:在序列化一个对象的时候会自动调用，可以选择将部分属性序列化<br><code>__wakeup</code>:反序列化一个对象的时候自动调用，可以选择将部分属性反序列化  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$height</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span>,<span class="variable">$height</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;height = <span class="variable">$height</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span>[<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;height&#x27;</span>];</span><br><span class="line">        <span class="comment">//选择只序列化age和height属性</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;反序列化成功&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person(<span class="string">&#x27;zr&#x27;</span>,<span class="number">19</span>,<span class="number">165</span>);</span><br><span class="line"><span class="variable">$str</span> = serialize(<span class="variable">$zr</span>);<span class="comment">//将实例对象序列化</span></span><br><span class="line">file_put_contents(<span class="string">&#x27;zr.txt&#x27;</span>,<span class="variable">$str</span>);<span class="comment">//将序列化后的字符串保存到本地</span></span><br><span class="line"><span class="variable">$obj</span> = unserialize(file_get_contents(<span class="string">&#x27;zr.txt&#x27;</span>));<span class="comment">//将序列化后的文件读入内存并反序列化</span></span><br><span class="line">var_dump(<span class="variable">$obj</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">反序列化成功</span></span><br><span class="line"><span class="comment">object(person)[2]</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; null</span></span><br><span class="line"><span class="comment">  public &#x27;age&#x27; =&gt; int 19</span></span><br><span class="line"><span class="comment">  public &#x27;height&#x27; =&gt; int 165</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="clone魔术方法"><a href="#clone魔术方法" class="headerlink" title="__clone魔术方法"></a>__clone魔术方法</h4><p><code>clone()</code>:克隆一个对象<br><code>__clone</code>:在克隆出一个对象的时候自动调用  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$height</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span>,<span class="variable">$height</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;height = <span class="variable">$height</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__clone</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="number">17</span>;<span class="comment">//将克隆出的对象age属性改为17</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person(<span class="string">&#x27;zr&#x27;</span>,<span class="number">19</span>,<span class="number">165</span>);</span><br><span class="line"><span class="variable">$obj</span> = <span class="keyword">clone</span>(<span class="variable">$zr</span>);<span class="comment">//对$zr对象进行克隆</span></span><br><span class="line">var_dump(<span class="variable">$obj</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">object(person)[2]</span></span><br><span class="line"><span class="comment">  public &#x27;name&#x27; =&gt; string &#x27;zr&#x27; (length=2)</span></span><br><span class="line"><span class="comment">  public &#x27;age&#x27; =&gt; int 17</span></span><br><span class="line"><span class="comment">  public &#x27;height&#x27; =&gt; int 165</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="autoload魔术方法"><a href="#autoload魔术方法" class="headerlink" title="__autoload魔术方法"></a>__autoload魔术方法</h4><p><code>__autoload</code>:当new一个对象不存在时就会触发这个方法，参数是该类类名字符串，这是唯一一个在类外的魔术方法    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$height</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>,<span class="variable">$age</span>,<span class="variable">$height</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = <span class="variable">$name</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = <span class="variable">$age</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;height = <span class="variable">$height</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$className</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$className</span>.<span class="string">&#x27;.php&#x27;</span>;<span class="comment">//引入对应的class文件</span></span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$zr</span> = <span class="keyword">new</span> person(<span class="string">&#x27;zr&#x27;</span>,<span class="number">19</span>,<span class="number">165</span>);</span><br><span class="line"><span class="variable">$zs</span> = <span class="keyword">new</span> zs();<span class="comment">//不存在该类，将会自动调用__autoload魔术方法</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="call魔术方法"><a href="#call魔术方法" class="headerlink" title="__call魔术方法"></a>__call魔术方法</h4><p><code>__call</code>:在对象调用一个不可访问的方法时调用  </p><h3 id="类常量"><a href="#类常量" class="headerlink" title="类常量"></a>类常量</h3><h4 id="概念-5"><a href="#概念-5" class="headerlink" title="概念"></a>概念</h4><p>类常量不同于之前的常量概念，类常量指的是在类中定义的常量，用关键字<code>const</code>定义，且<strong>类常量不能够使用修饰符</strong><br>在类的外部我们可以使用<code>define</code>和<code>const</code>两种关键字来定义常量，而在类的内部我们只能使用<code>const</code>关键字来获取常量  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$height</span>;</span><br><span class="line">    <span class="keyword">const</span> PI = <span class="number">3.14</span>;<span class="comment">//定义一个值为3.14名为PI的常量</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="获取常量"><a href="#获取常量" class="headerlink" title="获取常量"></a>获取常量</h4><p>类的外部获取常量使用<code>类名::常量名称</code>来获取<br>类的内部获取常量使用<code>self::常量名称</code>来获取  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$height</span>;</span><br><span class="line">    <span class="keyword">const</span> PI = <span class="number">3.14</span>;<span class="comment">//定义一个值为3.14名为PI的常量</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="built_in">self</span>::PI;<span class="comment">//在类内部获取定义的常量</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> person::PI;<span class="comment">//在类外获取名为PI的常量</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="静态属性和方法"><a href="#静态属性和方法" class="headerlink" title="静态属性和方法"></a>静态属性和方法</h3><h4 id="概念-6"><a href="#概念-6" class="headerlink" title="概念"></a>概念</h4><p>定义静态方法使用<code>static</code>关键字，如果<code>static</code>用于修饰属性和方法之后，那么该属性和方法是属于整个类的，不是属于某个对象的  </p><h4 id="获取静态属性和方法"><a href="#获取静态属性和方法" class="headerlink" title="获取静态属性和方法"></a>获取静态属性和方法</h4><p>在类中获取静态属性和静态方法采用<code>self::静态属性名(或静态方法名)</code><br>在类外获取静态属性和静态方法采用<code>类名::静态属性名(或静态方法名)</code>   </p><p>需要注意的是:</p><ul><li>静态属性和静态方法前面可以加属性修饰符    </li><li>静态属性和静态方法效率高  </li><li>通过静态方法来创建单例对象（唯一对象） </li><li>静态方法中不能存在<code>$this</code>关键字  </li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="built_in">static</span> <span class="keyword">public</span> <span class="variable">$name</span>;<span class="comment">//定义了一个静态属性$name</span></span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;这是一个静态方法&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getStaticMethod</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="built_in">self</span>::<span class="variable">$name</span>;<span class="comment">//在类中获取静态属性</span></span><br><span class="line">        <span class="built_in">self</span>::test();<span class="comment">//在类中获取静态方法</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> person::<span class="variable">$name</span>;<span class="comment">//获取静态属性$name</span></span><br><span class="line"><span class="keyword">echo</span> person::test();<span class="comment">//获取静态方法</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="variable">$p</span>-&gt;getStaticMethod();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h3><h4 id="概念-7"><a href="#概念-7" class="headerlink" title="概念"></a>概念</h4><p>用关键字<code>abstract</code>修饰的类叫做抽象类<br>需要注意的是：</p><ul><li>抽象类不能实例化对象</li><li>抽象类存在的目的是让子类继承  </li><li>抽象类之中一般会有抽象方法，子类继承该抽象类之后必须重写抽象方法，否则会报错  </li><li>抽象方法只能用<code>public</code>和<code>protected</code>来修饰  </li><li>抽象方法如果有参数，参数有默认值，那么实现该方法的时候参数和默认值也要实现  </li><li>抽象类也可以继承抽象类，子类在实现的时候<strong>抽象方法</strong>都得实现  </li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个抽象类</span></span><br><span class="line"> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>;</span><br><span class="line">     <span class="comment">//定义一个抽象方法</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$name</span></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">man</span> <span class="keyword">extends</span> <span class="title">person</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;实现了抽象类中的抽象方法&#x27;</span>.<span class="variable">$name</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><p><code>interface</code>:接口是完全抽象的抽象类，接口中的方法只能是抽象方法，且不具有方法体，所以可以省略<code>abstract</code>关键字  </p><ul><li>接口中的方法必须是<code>public</code>修饰，所以可以省略不写修饰符</li><li>接口中只能规定方法，不能写属性，但是可以写常量<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">test1</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="keyword">abstract</span> <span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;<span class="comment">//这是一个完全的抽象类，因为其中只有抽象方法</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">eat</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test1</span>(<span class="params"></span>)</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">test2</span>(<span class="params"></span>)</span>;</span><br><span class="line"><span class="meta">?&gt;</span><span class="comment">//接口时特殊的抽象类，其中的方法全都是抽象方法，可以省略`abstract`</span></span><br><span class="line">&#125;</span><br><span class="line">```  </span><br><span class="line">`<span class="keyword">implements</span>`:实现  </span><br><span class="line">* 一个类可以实现多个接口，中间用`,`隔开  </span><br><span class="line">* 接口可以继承接口，但其中的方法都要实现    </span><br><span class="line">```php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">eat</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">eatBread</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">interface</span> <span class="title">sleeping</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sleeping</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">animal</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">animals</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;继承了父类接口&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//多接口实现用逗号隔开</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span> <span class="keyword">extends</span> <span class="title">animal</span> <span class="keyword">implements</span> <span class="title">eat</span>,<span class="title">sleeping</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">eatBread</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;实现了抽象接口eat&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">sleeping</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;实现了抽象接口sleeping&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$person</span> = <span class="keyword">new</span> person();</span><br><span class="line"><span class="variable">$person</span>-&gt;animals();<span class="comment">//继承了父类接口</span></span><br><span class="line"><span class="variable">$person</span>-&gt;eatBread();<span class="comment">//实现了抽象接口eat</span></span><br><span class="line"><span class="variable">$person</span>-&gt;sleeping();<span class="comment">//实现了抽象接口sleeping</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="trait"><a href="#trait" class="headerlink" title="trait"></a>trait</h3><p>trait是用来模拟多继承的<br>定义trait要以<code>trait</code>关键字开头，里面的写法和类的写法一样<br>一般情况下在trait中不加成员属性，只加成员方法<br>使用<code>use</code>关键字来对trait进行引用  </p><p>需要注意的是:  </p><ul><li>trait不能够被实例化  </li><li>trait中的方法想让子类来使用，该方法必须是public修饰  </li><li>trait中可以再次嵌套trait  </li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">defense</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">defense</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;现在能进行防御&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">trait</span> <span class="title">attack</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">attack</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;现在能进行攻击&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">hero</span></span>&#123;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">defense</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">attack</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$hero</span> = <span class="keyword">new</span> hero();</span><br><span class="line"><span class="variable">$hero</span>-&gt;defense();<span class="comment">//现在能进行防御</span></span><br><span class="line"><span class="variable">$hero</span>-&gt;attack();<span class="comment">//现在能进行攻击</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;面向对象&quot;&gt;&lt;a href=&quot;#面向对象&quot; class=&quot;headerlink&quot; title=&quot;面向对象&quot;&gt;&lt;/a&gt;面向对象&lt;/h2&gt;&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>php基于cookie和session的登录模块</title>
    <link href="http://example.com/2021/06/03/php%E5%9F%BA%E4%BA%8Ecookie%E5%92%8Csession%E7%9A%84%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97/"/>
    <id>http://example.com/2021/06/03/php%E5%9F%BA%E4%BA%8Ecookie%E5%92%8Csession%E7%9A%84%E7%99%BB%E5%BD%95%E6%A8%A1%E5%9D%97/</id>
    <published>2021-06-03T10:07:18.000Z</published>
    <updated>2021-06-13T12:54:08.711Z</updated>
    
    <content type="html"><![CDATA[<p>login php部分</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp;</span><br><span class="line">       <span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]===<span class="string">&#x27;zr&#x27;</span> &amp;&amp; <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]===<span class="string">&#x27;123&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(setcookie(<span class="string">&#x27;name&#x27;</span>,<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>],time()+<span class="number">3600</span>))&#123;</span><br><span class="line">            header(<span class="string">&#x27;Location:https://floatc.top/&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span>(<span class="string">&#x27;cookie设置错误&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;密码错误&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>login html部分  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>无标题文档<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">action</span>=<span class="string">&quot;login.php&quot;</span>&gt;</span></span><br><span class="line">    姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>index php部分  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>]) &amp;&amp; <span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>] === <span class="string">&#x27;zr&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&#x27;欢迎你回来&#x27;</span>.<span class="variable">$_COOKIE</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;a href=&#x27;login.php&#x27;&gt;请登录&lt;/a&gt;&quot;</span>);</span><br><span class="line">    var_dump(<span class="variable">$_COOKIE</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><font color=red><del>基本可以说有手就行</del></font></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;login php部分&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/spa</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>水印</title>
    <link href="http://example.com/2021/05/27/%E6%B0%B4%E5%8D%B0/"/>
    <id>http://example.com/2021/05/27/%E6%B0%B4%E5%8D%B0/</id>
    <published>2021-05-27T08:56:54.000Z</published>
    <updated>2021-05-30T09:34:27.021Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文字水印"><a href="#文字水印" class="headerlink" title="文字水印"></a>文字水印</h2><p>跟昨天的验证码大同小异，无非是一些方法的调用  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line"><span class="comment">//设置content-type为jpeg格式</span></span><br><span class="line"><span class="variable">$img</span> = imagecreatefromjpeg(<span class="string">&#x27;C:/wamp64/www/myPhp/imgs/ps.jpg&#x27;</span>);</span><br><span class="line"><span class="comment">//打开对应路径下的jpg文件（也可以使用url地址定位网络上的一张图片）</span></span><br><span class="line"><span class="variable">$width</span> = imagesx(<span class="variable">$img</span>);</span><br><span class="line"><span class="variable">$height</span> = imagesy(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//获取图片的长宽</span></span><br><span class="line"><span class="variable">$position</span> = imagettfbbox(<span class="number">14</span>,<span class="number">0</span>,<span class="string">&#x27;C:/wamp64/www/myPhp/font/tancai.TTC&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>);</span><br><span class="line"><span class="comment">//判断输入字符串各个角的所在坐标</span></span><br><span class="line"><span class="variable">$strWidth</span> = <span class="variable">$position</span>[<span class="number">2</span>]-<span class="variable">$position</span>[<span class="number">0</span>];</span><br><span class="line"><span class="comment">//根据获取到的坐标来判断所输入字符串的长度</span></span><br><span class="line"><span class="variable">$color</span> = imagecolorallocate(<span class="variable">$img</span>,<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>);</span><br><span class="line"><span class="comment">//设置水印的字体颜色</span></span><br><span class="line">imagettftext(<span class="variable">$img</span>,<span class="number">100</span>,<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">1</span>-<span class="variable">$strWidth</span>-(<span class="variable">$width</span>/<span class="number">3</span>),<span class="variable">$height</span>-(<span class="variable">$height</span>/<span class="number">20</span>),<span class="variable">$color</span>,<span class="string">&#x27;C:/wamp64/www/myPhp/font/tancai.TTC&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>);</span><br><span class="line"><span class="comment">//设置水印的字体大小，倾斜角度，开始坐标（从左下角开始），字体颜色，字体格式和写入的内容</span></span><br><span class="line">imagejpeg(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//输出指定的jpg文件</span></span><br><span class="line">imagedestroy(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//销毁文件，释放资源</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="图片水印"><a href="#图片水印" class="headerlink" title="图片水印"></a>图片水印</h2><p>在文字水印的基础上增加了另外一张图片而已  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line"><span class="comment">//设置content-type为jpeg格式</span></span><br><span class="line"><span class="variable">$img</span> = imagecreatefromjpeg(<span class="string">&#x27;C:/wamp64/www/myPhp/imgs/ps.jpg&#x27;</span>);</span><br><span class="line"><span class="comment">//打开对应路径下的jpg文件（也可以使用url地址定位网络上的一张图片）</span></span><br><span class="line"><span class="variable">$width</span> = imagesx(<span class="variable">$img</span>);</span><br><span class="line"><span class="variable">$height</span> = imagesy(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//获取图片的长宽</span></span><br><span class="line"><span class="variable">$water</span> = imagecreatefrompng(<span class="string">&#x27;C:/wamp64/www/myPhp/imgs/1.png&#x27;</span>);</span><br><span class="line"><span class="comment">//获取水印图片</span></span><br><span class="line">imagecopymerge(<span class="variable">$img</span>,<span class="variable">$water</span>,<span class="number">600</span>,<span class="number">700</span>,<span class="number">70</span>,<span class="number">50</span>,imagesx(<span class="variable">$water</span>)-<span class="number">150</span>,imagesy(<span class="variable">$water</span>)-<span class="number">150</span>,<span class="number">20</span>);</span><br><span class="line"><span class="comment">//将水影图片拷贝到目标图片上</span></span><br><span class="line"><span class="comment">//imagecopy参数依次为:目标图片,水印图片,目标图片的初始位置(x,y),水印的开始拷贝位置(x,y),水印图片的拷贝长度,水印图片的拷贝高度,水印透明度(0-100)</span></span><br><span class="line">imagejpeg(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//输出指定的jpg文件</span></span><br><span class="line">imagedestroy(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//销毁文件，释放资源</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;文字水印&quot;&gt;&lt;a href=&quot;#文字水印&quot; class=&quot;headerlink&quot; title=&quot;文字水印&quot;&gt;&lt;/a&gt;文字水印&lt;/h2&gt;&lt;p&gt;跟昨天的验证码大同小异，无非是一些方法的调用  &lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;ta</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>验证码</title>
    <link href="http://example.com/2021/05/26/%E9%AA%8C%E8%AF%81%E7%A0%81/"/>
    <id>http://example.com/2021/05/26/%E9%AA%8C%E8%AF%81%E7%A0%81/</id>
    <published>2021-05-26T09:52:36.000Z</published>
    <updated>2021-05-26T11:07:57.740Z</updated>
    
    <content type="html"><![CDATA[<p>这玩意儿就是个验证码，拿php写的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ob_clean();</span><br><span class="line">header(<span class="string">&#x27;Content-type:image/jpeg&#x27;</span>);</span><br><span class="line"><span class="variable">$width</span> = <span class="number">120</span>;</span><br><span class="line"><span class="variable">$height</span> = <span class="number">40</span>;</span><br><span class="line"><span class="variable">$element</span> = <span class="keyword">array</span>(<span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;c&#x27;</span>,<span class="string">&#x27;d&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;g&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;j&#x27;</span>,<span class="string">&#x27;k&#x27;</span>,<span class="string">&#x27;l&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;n&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;q&#x27;</span>);</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">4</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$str</span> .= <span class="variable">$element</span>[rand(<span class="number">0</span>,count(<span class="variable">$element</span>)-<span class="number">1</span>)];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置长宽</span></span><br><span class="line"><span class="variable">$img</span> = imagecreatetruecolor(<span class="variable">$width</span>,<span class="variable">$height</span>);</span><br><span class="line"><span class="comment">//设置画布大小</span></span><br><span class="line"><span class="variable">$colorBg</span> = imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//选择随机颜色</span></span><br><span class="line">imagefill(<span class="variable">$img</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="variable">$colorBg</span>);</span><br><span class="line"><span class="comment">//填充给背景颜色</span></span><br><span class="line"><span class="variable">$colorBorder</span> = imagecolorallocate(<span class="variable">$img</span>,<span class="number">0</span>,rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//设置边框颜色</span></span><br><span class="line">imagerectangle(<span class="variable">$img</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">1</span>,<span class="variable">$height</span>-<span class="number">1</span>,<span class="variable">$colorBorder</span>);</span><br><span class="line"><span class="comment">//设置边框的位置和颜色</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">100</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$colorPi</span> = imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">100</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>),rand(<span class="number">200</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//设置干扰点颜色</span></span><br><span class="line">imagesetpixel(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">1</span>),rand(<span class="number">0</span>,<span class="variable">$height</span>-<span class="number">1</span>),<span class="variable">$colorPi</span>);</span><br><span class="line"><span class="comment">//设置干扰点的位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">6</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="variable">$colorLine</span> = imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="number">255</span>),rand(<span class="number">0</span>,<span class="number">255</span>),rand(<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//设置干扰线的颜色</span></span><br><span class="line">imageline(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="variable">$width</span>-<span class="number">2</span>/<span class="number">2</span>),rand(<span class="number">0</span>,<span class="variable">$height</span>-<span class="number">2</span>),rand(<span class="variable">$width</span>-<span class="number">2</span>/<span class="number">2</span>,<span class="variable">$width</span>),rand(<span class="number">0</span>,<span class="variable">$height</span>),<span class="variable">$colorLine</span>);</span><br><span class="line"><span class="comment">//设置干扰线的位置和颜色</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$colorFont</span> = imagecolorallocate(<span class="variable">$img</span>,rand(<span class="number">0</span>,<span class="number">255</span>),rand(<span class="number">0</span>,<span class="number">255</span>),rand(<span class="number">0</span>,<span class="number">255</span>));</span><br><span class="line"><span class="comment">//设置验证码字体颜色</span></span><br><span class="line">imagettftext(<span class="variable">$img</span>,<span class="number">30</span>,rand(-<span class="number">5</span>,<span class="number">5</span>),rand(<span class="number">5</span>,<span class="number">15</span>),rand(<span class="number">30</span>,<span class="number">35</span>),<span class="variable">$colorFont</span>,<span class="string">&#x27;C:\wamp64\www\myPhp\font\tancai.TTC&#x27;</span>,<span class="variable">$str</span>);</span><br><span class="line"><span class="comment">//设置验证码大小，倾斜程度，字体，颜色(要注意的是这个方法的x，ys是从字符串右下角算起)</span></span><br><span class="line">imagejpeg(<span class="variable">$img</span>);</span><br><span class="line"><span class="comment">//以jpeg格式生成图像</span></span><br><span class="line">imagedestroy();</span><br><span class="line"><span class="comment">//释放内存</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;这玩意儿就是个验证码，拿php写的&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>正则表达式</title>
    <link href="http://example.com/2021/05/20/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2021/05/20/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2021-05-20T07:02:30.000Z</published>
    <updated>2021-05-25T11:58:56.520Z</updated>
    
    <content type="html"><![CDATA[<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p><font color=#C0C0C0><em>注：正则表达式并不是php所独有的，因为在学习php的缘故，本篇采用php来使用正则表达式</em></font></p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><strong>正则表达式</strong>描述了一种字符串匹配的模式，可以用来检查一个串是否含有某种子串、将匹配的子串替换或者从某个串中取出符合某个条件的子串等。</p><h3 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h3><p>字符串一般是由<strong>普通字符</strong>和<strong>元字符</strong>构成  </p><blockquote><p>普通字符:a-z A-Z 0-9 双引号 单引号等，他们没有特殊的含义<br>元字符:指的是有特殊功能的字符例如<code>*</code>,<code>+</code>,<code>?</code>等，常用的元字符见<a href="https://www.runoob.com/regexp/regexp-metachar.html">常用元字符</a></p></blockquote><p>例如<code>&#39;/a/&#39;</code>,<code>a</code>就是普通字符，<code>/</code>是定界符（用于表示正则表达式的开始和结束）  </p><h4 id="定界符"><a href="#定界符" class="headerlink" title="定界符"></a>定界符</h4><p>我们一般用<strong>正斜线<code>/</code></strong> 作为定界的字符，当然除了<strong>字母</strong>,<strong>数字</strong>和<strong>反斜线</strong>以外的字符都可以作为定界符，比如<code>#</code>,<code>!</code>,<code>&#123;&#125;</code>,<code>|</code>等都是可以的，定界符要放在正则表达式的起始与结尾位置，前后一致</p><h3 id="模式修正符"><a href="#模式修正符" class="headerlink" title="模式修正符"></a>模式修正符</h3><h4 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a>概述</h4><p>模式修正符是在正则表达式的定界符之后使用的，可以调整正则表达式的解释，拓展正则表达式在匹配、替换等操作时的一些功能，增强正则表达式的处理能力</p><table><thead><tr><th align="center">常见模式修正符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="center">i</td><td align="left">在模式进行匹配时不区分大小写</td></tr><tr><td align="center">m</td><td align="left">多行匹配，如果目标字符串中没有<code>&#39;\n&#39;</code>字符，或者模式中没有出现<code>^</code>或<code>$</code>，设置这个修饰符则不会产生影响</td></tr><tr><td align="center">s</td><td align="left">如果设置了此修饰符，那么将匹配所有的字符包括换行符</td></tr><tr><td align="center">U</td><td align="left">禁止贪婪匹配</td></tr></tbody></table><!-- |常见模式修正符|说明||:-:|:-:||i| 在模式进行匹配时不区分大小写 ||m| 多行匹配，如果目标字符串中没有`'\n'`字符，或者模式中没有出现`^`或`$`，设置这个修饰符则不会产生影响 ||s|如果设置了此修饰符，那么将匹配所有的字符包括换行符||U|禁止贪婪匹配| --><p>修正符<code>i</code>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$parttern</span> = <span class="string">&#x27;/test/i&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;test Test tESt TEST&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$parttern</span>,<span class="variable">$str</span>,<span class="variable">$arr</span>));<span class="comment">//int 4</span></span><br><span class="line">var_dump(<span class="variable">$arr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=4)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      1 =&gt; string &#x27;Test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      2 =&gt; string &#x27;tESt&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      3 =&gt; string &#x27;TEST&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修正符<code>m</code><strong>使用条件</strong>:<br><strong>1.</strong> 目标字符中必须包括<code>\n</code><br><strong>2.</strong> 所用的正则表达式中必须要出现<code>^</code>和<code>$</code><br>注意不能手动敲换行，在windows操作系统中所看见的换行（现象）实际是由<code>\n\r</code>两个转义字符共同完成的，正则表达式所识别的换行只有<code>\n</code>这一个转义字符，所以手动敲换行不能够识别出来<br><strong>模式修正符可以多个一起搭配使用</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/^test/&#x27;</span>;<span class="comment">//未添加修正符</span></span><br><span class="line"><span class="variable">$pattern2</span> = <span class="string">&#x27;/^test/m&#x27;</span>;<span class="comment">//添加了修正符m</span></span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;test\ntest\ntest\ntest&quot;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern2</span>,<span class="variable">$str</span>,<span class="variable">$arr2</span>));<span class="comment">//int 4</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=4)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      1 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      2 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      3 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">```  </span><br><span class="line">修正符s:能把`\n`识别出来</span><br><span class="line">```php</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/t.st/&#x27;</span>;</span><br><span class="line"><span class="variable">$pattern2</span> = <span class="string">&#x27;/t.st/s&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&quot;t\nst&quot;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 0</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=0)</span></span><br><span class="line"><span class="comment">      empty</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern2</span>,<span class="variable">$str</span>,<span class="variable">$arr2</span>));<span class="comment">// int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;tst&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>修正符<code>U</code>:<br>贪婪匹配：尽可能多地将满足字符串匹配进来</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/a.*f/&#x27;</span>;</span><br><span class="line"><span class="variable">$pattern2</span> = <span class="string">&#x27;/a.*f/U&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;  aasqddqfwfwe  sdasdf&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">     array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;aasqddqfwfwe  sdasdf&#x27; (length=20)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern2</span>,<span class="variable">$str</span>,<span class="variable">$arr2</span>));<span class="comment">//int 2</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">    0 =&gt; </span></span><br><span class="line"><span class="comment">      array (size=2)</span></span><br><span class="line"><span class="comment">        0 =&gt; string &#x27;aasqddqf&#x27; (length=8)</span></span><br><span class="line"><span class="comment">        1 =&gt; string &#x27;asdf&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="正则表达式相关函数"><a href="#正则表达式相关函数" class="headerlink" title="正则表达式相关函数"></a>正则表达式相关函数</h3><p><code>preg_match_all()</code>:<strong>按指定的正则表达式，在给定的字符串中进行搜索，把匹配到符合特征的部分取出来</strong>,可选参数<code>$arr</code>是以二维数组的形式来存储匹配到的字符串,相同的元素将存在同一个数组中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/test/&#x27;</span>;</span><br><span class="line"><span class="variable">$test1</span> = <span class="string">&#x27;asdfghjkl&#x27;</span>;</span><br><span class="line"><span class="variable">$test2</span> = <span class="string">&#x27;asadfgtestftestgn&#x27;</span>;</span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="variable">$test1</span>,<span class="variable">$arr1</span>));<span class="comment">//int 0</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="variable">$test2</span>,<span class="variable">$arr2</span>));<span class="comment">//int 2</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">array (size=0)</span></span><br><span class="line"><span class="comment">  empty</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(<span class="variable">$arr2</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=0)</span></span><br><span class="line"><span class="comment">      empty</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>上面仅仅使用了普通字符匹配，也可以搭配<a href="https://www.runoob.com/regexp/regexp-metachar.html">元字符</a>来进行使用</p><blockquote><p>元字符<code>\d</code>匹配0-9其中任意一个数组<br>元字符<code>\D</code>匹配除了0-9以外的任意字符<br>元字符<code>.</code>匹配除换行符<code>\n</code>以外的任意字符<br>元字符<code>*</code>匹配0次，1次，或多次前面的字符<br>元字符<code>+</code>匹配1次或多次前面的字符<br>元字符<code>?</code>匹配0次或1次前面的字符<br>元字符<code>&#123;n&#125;</code>匹配前面恰好出现n次的字符<br>元字符<code>&#123;n,&#125;</code>匹配前面出现次数不少于n次的字符<br>元字符<code>&#123;n,m&#125;</code>匹配前面出现次数不少于n次,不多于m次的字符<br>元字符<code>^</code>或<code>\A</code>匹配字符串开始位置，必须以某个字符开头<br>元字符<code>$</code>或<code>\Z</code>匹配字符串结束位置，必须以某个字符结尾<br>元字符<code>|</code>，匹配两个或多个给定字符（有点类似于或的使用）<br>元字符<code>[]</code>，匹配<code>[]</code>中的任意一个字符，也可以搭配<code>|</code>使用<br>元字符<code>[^]</code>，匹配除了<code>[]</code>中的任意一个字符</p></blockquote><p>元字符和元字符之间也可以相互配合使用    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/t.&#123;3,&#125;st/&#x27;</span>;<span class="comment">//相当于&#x27;/t...st/&#x27;</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;test&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 0</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;teeest&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;teee12312st&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 1</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>配合使用默认情况下是<strong>贪婪匹配</strong>，也就是尽可能匹配更多的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/t.*st/&#x27;</span>;<span class="comment">//相当于&#x27;/t...st/&#x27;</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;testsdast&#x27;</span>,<span class="variable">$arr</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;testsdast&#x27; (length=9)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;testsdasteweqst&#x27;</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=1)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;testsdasteweqst&#x27; (length=15)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果不想使用默认的贪婪匹配，可以在<code>.*</code>后面加上一个<code>?</code>，也就是<strong>懒惰匹配</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern</span> = <span class="string">&#x27;/t.*?st/&#x27;</span>;<span class="comment">//相当于&#x27;/t...st/&#x27;</span></span><br><span class="line">var_dump(preg_match_all(<span class="variable">$pattern</span>,<span class="string">&#x27;testsdasteweqst&#x27;</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; </span></span><br><span class="line"><span class="comment">    array (size=2)</span></span><br><span class="line"><span class="comment">      0 =&gt; string &#x27;test&#x27; (length=4)</span></span><br><span class="line"><span class="comment">      1 =&gt; string &#x27;teweqst&#x27; (length=7)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>preg_match()</code>:preg_match()返回 pattern 的匹配次数。 它的值将是0次（不匹配）或1次，因为preg_match()在第一次匹配后 将会停止搜索。一般用于判断某个字符串中是否含有符合条件的字符串  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/a.*f/U&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;  aasqddqfwfwe  sdasdf&#x27;</span>;</span><br><span class="line">var_dump(preg_match(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr1</span>));<span class="comment">//int 1</span></span><br><span class="line">var_dump(<span class="variable">$arr1</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=1)</span></span><br><span class="line"><span class="comment">  0 =&gt; string &#x27;aasqddqf&#x27; (length=8)</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>判断是否含有某种特征的字符串  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pattern1</span> = <span class="string">&#x27;/a.*f/U&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;  aasqddqfwfwe  sdasdf&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$pattern1</span>,<span class="variable">$str</span>,<span class="variable">$arr</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;符合特征&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;不符合特征&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>preg_replace()</code>:可以将根据正则表达式把指定部分的字符串进行替换  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$parrern</span> = <span class="string">&#x27;/&lt;div&gt;(.*?)&lt;\/div&gt;/&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;asadasda&lt;div&gt;fger&lt;/div&gt;fs&#x27;</span>;</span><br><span class="line"><span class="variable">$str1</span> = <span class="string">&#x27;&lt;a&gt;测试&lt;/a&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$parrern</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;找到了&#x27;</span>);</span><br><span class="line">var_dump(preg_replace(<span class="variable">$parrern</span>,<span class="variable">$str1</span>,<span class="variable">$str</span>));</span><br><span class="line"><span class="comment">//string &#x27;asadasda&lt;a&gt;测试&lt;/a&gt;fs&#x27; (length=23)</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;没找到&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果只是对<code>&lt;div&gt;&lt;/div&gt;</code>标签进行匹配修改,则可以在用于修改的字符串中加上正则表达式,如下所示  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$parrern</span> = <span class="string">&#x27;/&lt;div&gt;(.*?)&lt;\/div&gt;/&#x27;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;asadasda&lt;div&gt;fger&lt;/div&gt;fs&#x27;</span>;</span><br><span class="line"><span class="variable">$str1</span> = <span class="string">&#x27;&lt;a&gt;\\1&lt;/a&gt;&#x27;</span>;<span class="comment">//str1添加了正则表达式</span></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="variable">$parrern</span>,<span class="variable">$str</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;找到了&#x27;</span>);</span><br><span class="line">var_dump(preg_replace(<span class="variable">$parrern</span>,<span class="variable">$str1</span>,<span class="variable">$str</span>));</span><br><span class="line"><span class="comment">//string &#x27;asadasda&lt;a&gt;fger&lt;/a&gt;fs&#x27; (length=21)</span></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;没找到&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h2&gt;&lt;p&gt;&lt;font color=#C0C0C0&gt;&lt;em&gt;注：正则表达式并不是php所独有的，因为在学习php的缘故，本篇采用</summary>
      
    
    
    
    
    <category term="正则表达式" scheme="http://example.com/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>初入php</title>
    <link href="http://example.com/2021/05/11/myFirstPhp/"/>
    <id>http://example.com/2021/05/11/myFirstPhp/</id>
    <published>2021-05-11T11:04:38.000Z</published>
    <updated>2021-06-07T09:45:40.188Z</updated>
    
    <content type="html"><![CDATA[<h2 id="初入php"><a href="#初入php" class="headerlink" title="初入php"></a>初入php</h2><p>php代码可以嵌入到html代码中的任何位置，并且可以嵌入任意多个<br>php语言标记为<code>&lt;?php ?&gt;</code>，并且在文件末尾的<code>?&gt;</code>是可以省略的，与其他语言大同小异，php每句结束后要加上<code>;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;hello,world&#x27;</span>;<span class="meta">?&gt;</span></span><br><span class="line">    &lt;!--这里是不能省略的,因为不是在文件末尾--&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;hello,world&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="php注释"><a href="#php注释" class="headerlink" title="php注释"></a>php注释</h2><p>和其他语言一样，php也有单行注释和多行注释<br>单行注释<code>&lt;?php //这是一个单行注释?&gt;</code><br>多行注释<code>&lt;?php /*这是一个多行注释*/?&gt;</code></p><h2 id="关于空白（tab，空格）"><a href="#关于空白（tab，空格）" class="headerlink" title="关于空白（tab，空格）"></a>关于空白（tab，空格）</h2><p>和其他语言类型差不多，换行对代码影响不大，所以类似于下面这种阴间写法也是可以的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> <span class="string">&#x27;h</span></span><br><span class="line"><span class="string">e</span></span><br><span class="line"><span class="string">l</span></span><br><span class="line"><span class="string">l</span></span><br><span class="line"><span class="string">o</span></span><br><span class="line"><span class="string">,world&#x27;</span>;<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>输出还是 hello,world<br>是个有脑子的人都不会这么些就是了..</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>php中的变量不需要声明，当第一次给这个变量赋值的时候就会创建这个变量，创建了这个变量之后就可以重复用它了<br>和其他语言一样，php变量也能用于存储数字，数字，字符串等乱七八糟的东西<br>php变量必须使用<code>$</code>来定义，使用<code>=</code>来进行赋值</p><h3 id="变量的销毁"><a href="#变量的销毁" class="headerlink" title="变量的销毁"></a>变量的销毁</h3><p><code>unset()</code>函数用于释放指定的变量<br>具体用法为 <code>unset($变量名)</code></p><h3 id="变量的命名"><a href="#变量的命名" class="headerlink" title="变量的命名"></a>变量的命名</h3><p>php的变量是严格区分大小写的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$name</span> = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$name</span>;<span class="comment">//输出变量$name</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$Name</span>;<span class="comment">//直接报错，没有该变量名</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>php变量名后面可以以字母和下划线开头，后面在接上任意的数字字母和下划线</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">$<span class="number">1</span>name = <span class="number">1</span>;<span class="comment">//直接报错，不能用数字开头</span></span><br><span class="line">$%name = <span class="number">1</span>;<span class="comment">//直接报错，不能用除了字母和下划线的符号开头</span></span><br><span class="line">    <span class="variable">$na</span> me = <span class="number">1</span>;<span class="comment">//直接报错，中间不能含有空格</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>有点离谱的是php有些关键字是可以作为变量来使用的..<br>这在其他语言中简直是不能想象的事..</p><h3 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h3><p>又是一个阴间设定,看看就好</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$abc</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="variable">$$abc</span> = <span class="string">&#x27;desk&#x27;</span>;<span class="comment">//这段代码可以理解为 $abc = &#x27;desk&#x27;;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="变量的引用"><a href="#变量的引用" class="headerlink" title="变量的引用"></a>变量的引用</h3><p>毫无特点的引用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="number">100</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;<span class="comment">//100</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>变量的引用赋值。乱七八糟的引用..让人摸不着头脑</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="number">100</span>;</span><br><span class="line"><span class="variable">$b</span> = &amp;<span class="variable">$a</span>;<span class="comment">//相当于给$a起了个别名叫$b,</span></span><br><span class="line">    <span class="comment">//对$b进行操作相当于同时操作了$a和$b,对两个变量都会有影响</span></span><br><span class="line"><span class="variable">$b</span> = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;<span class="comment">//20</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h2><p>php几乎没有变量类型这一说法，他所有的变量类型都是从上下文中推断出来的。<br>使用<code>var_dump()</code>可以输出变量的类型  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="literal">true</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//boolean true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="bool类型"><a href="#bool类型" class="headerlink" title="bool类型"></a>bool类型</h3><p>bool类型是最简单的类型，布尔值表达了true或者false，除了以下的值，其他的值都认为是true  </p><blockquote><p>1.布尔值false<br>2.为0的值<br>3.浮点数0.0<br>4.空白字符串和字符串’0’<br>5.没有成员的数组<br>6.null值</p></blockquote><h3 id="int类型"><a href="#int类型" class="headerlink" title="int类型"></a>int类型</h3><p>用于保存整数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//int 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="float"><a href="#float" class="headerlink" title="float"></a>float</h3><p>用于保存浮点型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="number">1.0</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//float 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字符串String"><a href="#字符串String" class="headerlink" title="字符串String"></a>字符串String</h3><h4 id="单引号"><a href="#单引号" class="headerlink" title="单引号"></a>单引号</h4><p>注意在单引号中不能再添加单引号，如果实在忍不住要用单引号，就需要用反斜杠 <code>\</code> 来进行转义,其中的变量名不会被解析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;1asasa0&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//string &#x27;1.0&#x27; (length=3)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="双引号"><a href="#双引号" class="headerlink" title="双引号"></a>双引号</h4><p>其中的变量名会被变量值所替代，即php会解析双引号之间的变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&quot;a<span class="subst">&#123;$a&#125;</span>b&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;<span class="comment">//a123b</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="定界符"><a href="#定界符" class="headerlink" title="定界符"></a>定界符</h4><p><code>&lt;&lt;&lt;</code>用于定义字符串的开始变量，同时用开始字符串作为结尾<br>中间可以插入单引号和双引号</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$b</span> = <span class="number">100</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&lt;&lt;&lt;aaa</span></span><br><span class="line"><span class="string">asdasdasd<span class="subst">&#123;$b&#125;</span></span></span><br><span class="line"><span class="string">aaa</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//string &#x27;asdasdasd&#x27; (length=9)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="字符串处理"><a href="#字符串处理" class="headerlink" title="字符串处理"></a>字符串处理</h4><p>以下为空白字符：  </p><blockquote><p>1.普通空格符” “<br>2.制表符”\t”<br>3.换行符”\n”<br>4.回车符”\r”<br>5.空字节符”\0”<br>6.垂直制表符”\x0B”  </p></blockquote><p><strong><code>trim()</code>:去除字符串首尾的空白字符(或者其他字符)<br><code>ltrim()</code>:去除字符串左边的空白字符(或者其他字符)<br><code>rtrim()</code>:去除字符串右边的空白字符(或者其他字符)</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;   abc   &#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span>);<span class="comment">//string &#x27;   abc   &#x27; (length=9)</span></span><br><span class="line"><span class="variable">$b</span> = trim(<span class="variable">$a</span>);</span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//string &#x27;abc&#x27; (length=3)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>也可以在后面加上想要去除的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;abcsdsdsdsa&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = trim(<span class="variable">$a</span>,<span class="string">&#x27;ab&#x27;</span>);<span class="comment">//前后去除ab字符串</span></span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//string &#x27;csdsdsds&#x27; (length=8)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strtoupper()</code>:<strong>将字符串转换为大写</strong>  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;abcsdsdsdsa&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = strtoupper(<span class="variable">$a</span>);</span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//string &#x27;ABCSDSDSDSA&#x27; (length=11)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strtolower()</code>:<strong>将字符串转换为小写</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;SDADASC&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = strtolower(<span class="variable">$a</span>);</span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//string &#x27;sdadasc&#x27; (length=7)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong><code>substr_count()</code>:计算字符串出现的次数(默认区分大小写)</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;SDADASC&#x27;</span>;</span><br><span class="line">var_dump(substr_count(<span class="variable">$a</span>,<span class="string">&#x27;A&#x27;</span>));<span class="comment">//int 2</span></span><br><span class="line">var_dump(substr_count(<span class="variable">$a</span>,<span class="string">&#x27;a&#x27;</span>));<span class="comment">//int 0</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个方法也有一些参数，后面会有额外的两个参数，第一个表示开始的位置（默认从0开始），第二个表示结束的位置    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;SDADASC&#x27;</span>;</span><br><span class="line">var_dump(substr_count(<span class="variable">$a</span>,<span class="string">&#x27;A&#x27;</span>,<span class="number">4</span>));<span class="comment">//int 1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strpos()</code>:<strong>查找字符串首次出现的位置,查找到则返回该字符串所在索引,如果未查找到则返回false</strong><br>这里要注意的点是，如果找到了该字符在索引为0的位置,直接使用<code>if(strpos($a,&#39;a&#39;) == false</code>,其中的false会转换为0,返回的结果是<code>true</code>,会直接出现错误，所以在进行比较时会选择<strong>全等<code>===</code></strong> 或者 <strong>不全等<code>!==</code></strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;asasf&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(strpos(<span class="variable">$a</span>,<span class="string">&#x27;a&#x27;</span>) !== <span class="literal">false</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;找到了&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;没找到&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strstr()</code>:返回从搜索的字符串开始，到结尾的位置（这个真不太好说..）,如果添加参数为<code>true</code>则返回该字符串之前的字符串，未查找到字符串则返回<code>false</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;eryruasasf&#x27;</span>;</span><br><span class="line">var_dump(strstr(<span class="variable">$a</span>,<span class="string">&#x27;a&#x27;</span>));<span class="comment">//string &#x27;sasf&#x27; (length=4)</span></span><br><span class="line">var_dump(strstr(<span class="variable">$a</span>,<span class="string">&#x27;s&#x27;</span>,<span class="literal">true</span>));<span class="comment">//string &#x27;eryrua&#x27; (length=6)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>str_replace</code>:替换字符串的子串,并不会改变原来的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;eryruasasf&#x27;</span>;</span><br><span class="line">var_dump(str_replace(<span class="string">&#x27;ru&#x27;</span>,<span class="string">&#x27;aa&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//string &#x27;eryaaasasf&#x27; (length=10)</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>);<span class="comment">//eryruasasf</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然也可以直接用数组对目标数据进行替换,后边的参数<code>$count</code>是被替换字符串的个数  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;abc123cba&#x27;</span>;</span><br><span class="line">var_dump(str_replace(<span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>),<span class="keyword">array</span>(<span class="string">&#x27;一&#x27;</span>,<span class="string">&#x27;二&#x27;</span>,<span class="string">&#x27;三&#x27;</span>),<span class="variable">$a</span>,<span class="variable">$count</span>));</span><br><span class="line"><span class="comment">//string &#x27;abc一二三cba&#x27; (length=15)</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$count</span>);<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果被替换的字符串是一个数组，则会替换数组中所有满足条件的字符串  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;abc123cba&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;123cba&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;abc123&#x27;</span>,</span><br><span class="line">);</span><br><span class="line">var_dump(str_replace(<span class="keyword">array</span>(<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>),<span class="keyword">array</span>(<span class="string">&#x27;一&#x27;</span>,<span class="string">&#x27;二&#x27;</span>,<span class="string">&#x27;三&#x27;</span>),<span class="variable">$a</span>,<span class="variable">$count</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=3)</span></span><br><span class="line"><span class="comment">  0 =&gt; string &#x27;abc一二三cba&#x27; (length=15)</span></span><br><span class="line"><span class="comment">  1 =&gt; string &#x27;一二三cba&#x27; (length=12)</span></span><br><span class="line"><span class="comment">  2 =&gt; string &#x27;abc一二三&#x27; (length=12)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$count</span>);<span class="comment">//9</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>如果没有特殊的替换需求（比如正则表达式），应该使用该函数替换<code>ereg_replace()</code>和<code>preg_replace</code></strong>  </p><p><code>htmlspecialchars()</code>:<strong>将一些预定义的字符转换为html实体</strong>，也就是停止将字符串中的标签识别为html源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;This is some &lt;b&gt;bold&lt;/b&gt; text.&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> htmlspecialchars(<span class="variable">$a</span>);<span class="comment">//This is some &lt;b&gt;bold&lt;/b&gt; text.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>strip_tags()</code>:<strong>剥去字符串中的HTML和PHP标签</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;This is some &lt;b&gt;bold&lt;/b&gt; text.&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> strip_tags(<span class="variable">$a</span>);<span class="comment">//This is some bold text.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然如果想留下某个标签被解析，在后面添加上标签的字符串即可</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;This is some &lt;b&gt;bold&lt;/b&gt; text.&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> strip_tags(<span class="variable">$a</span>,<span class="string">&#x27;&lt;b&gt;&#x27;</span>);<span class="comment">//This is some bold text.</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>substr()</code>:<strong>用于截取字符串</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;asdfghjkl&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span>(substr(<span class="variable">$a</span>,<span class="number">2</span>));<span class="comment">//dfghjkl</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>也可以限制截取的长度</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;asdfghjkl&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span>(substr(<span class="variable">$a</span>,<span class="number">2</span>,<span class="number">4</span>));<span class="comment">//dfgh</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果第二个参数为负数，则表示从右向左截取对应长度的字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;asdfghjkl&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span>(substr(<span class="variable">$a</span>,-<span class="number">2</span>));<span class="comment">//kl</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>explode()</code>:<strong>使用字符串分割另一个字符串</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test1,test2,test3&#x27;</span>;</span><br><span class="line">var_dump(explode(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=3)</span></span><br><span class="line"><span class="comment">0 =&gt; string &#x27;test1&#x27; (length=5)</span></span><br><span class="line"><span class="comment">1 =&gt; string &#x27;test2&#x27; (length=5)</span></span><br><span class="line"><span class="comment">2 =&gt; string &#x27;test3&#x27; (length=5)</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果想限制切割字符串的次数，则可以在后面添加上一个整型参数,未被截取到的部分将存储在数组的同一个元素中</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test1,test2,test3&#x27;</span>;</span><br><span class="line">var_dump(explode(<span class="string">&#x27;,&#x27;</span>,<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">/*array (size=2)</span></span><br><span class="line"><span class="comment">0 =&gt; string &#x27;test1&#x27; (length=5)</span></span><br><span class="line"><span class="comment">1 =&gt; string &#x27;test2,test3&#x27; (length=11)</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p><code>str_split()</code>:将一个字符串转换为数组</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">var_dump(str_split(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=4)</span></span><br><span class="line"><span class="comment">0 =&gt; string &#x27;t&#x27; (length=1)</span></span><br><span class="line"><span class="comment">1 =&gt; string &#x27;e&#x27; (length=1)</span></span><br><span class="line"><span class="comment">2 =&gt; string &#x27;s&#x27; (length=1)</span></span><br><span class="line"><span class="comment">3 =&gt; string &#x27;t&#x27; (length=1)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>也可以限制每个数组的元素个数，默认为1</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line">var_dump(str_split(<span class="variable">$a</span>,<span class="number">2</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=2)</span></span><br><span class="line"><span class="comment">0 =&gt; string &#x27;te&#x27; (length=2)</span></span><br><span class="line"><span class="comment">1 =&gt; string &#x27;st&#x27; (length=2)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="索引数组"><a href="#索引数组" class="headerlink" title="索引数组"></a>索引数组</h4><p>php种数组的定义很随意,直接用 <code>$数组名[]</code>定义即可，定义完之后可以直接向里面赋值<br>注意在输出数组时不能使用<code>echo()</code>函数,必须使用<code>print_r()</code>函数来进行输出 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[<span class="number">0</span>] = <span class="number">10</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">1</span>] = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">2</span>] = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">3</span>] = <span class="string">&#x27;50.2&#x27;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果为：</span></span><br><span class="line"><span class="comment">Array ( [0] =&gt; 10 [1] =&gt; 周睿 [2] =&gt; 1 [3] =&gt; 50.2 )</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>根据php一如既往的省略政策，数组的定义甚至可以可以把索引值给省略掉…  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[] = <span class="number">10</span>;</span><br><span class="line"><span class="variable">$student</span>[] = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$student</span>[] = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$student</span>[] = <span class="string">&#x27;50.2&#x27;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果为：</span></span><br><span class="line"><span class="comment">Array ( [0] =&gt; 10 [1] =&gt; 周睿 [2] =&gt; 1 [3] =&gt; 50.2 )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果索引值省略不写，那么索引值就是从0开始依此往上  </p><p>数组定义时索引值重复时，后者会直接覆盖掉前者  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[<span class="number">0</span>] = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">0</span>] = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);<span class="comment">//Array ( [0] =&gt; zs )</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>php种支持跳索引定义，查看没有定义的索引则会直接报错  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[<span class="number">0</span>] = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="number">5</span>] = <span class="string">&#x27;zs&#x27;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);<span class="comment">//Array ( [0] =&gt; zr [5] =&gt; zs )</span></span><br><span class="line">var_dump(<span class="variable">$student</span>[<span class="number">1</span>]);<span class="comment">//直接报错</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然除了手动定义数组之外，还可以使用<strong>语言结构</strong> <code>array()</code> 来定义个数组（注意这玩意儿不是方法！） </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span> = <span class="keyword">array</span>(<span class="number">12</span>,<span class="string">&#x27;周睿&#x27;</span>,<span class="string">&#x27;2.4&#x27;</span>,<span class="literal">true</span>);</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果为：</span></span><br><span class="line"><span class="comment">Array ( [0] =&gt; 12 [1] =&gt; 周睿 [2] =&gt; 2.4 [3] =&gt; 1 )</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>当然<code>array()</code>也能指定索引值</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">1</span>=&gt;<span class="number">12</span>,</span><br><span class="line"><span class="number">2</span>=&gt;<span class="string">&#x27;周睿&#x27;</span>,</span><br><span class="line"><span class="number">3</span>=&gt;<span class="string">&#x27;2.4&#x27;</span>,</span><br><span class="line"><span class="number">4</span>=&gt;<span class="literal">true</span>);</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="引用数组"><a href="#引用数组" class="headerlink" title="引用数组"></a>引用数组</h4><p>所谓引用数组就是把原本索引值由整型改为字符串类型罢了,没啥好说的  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span>[<span class="string">&quot;name&quot;</span>] = <span class="string">&quot;周睿&quot;</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="string">&quot;age&quot;</span>] = <span class="number">20</span>;</span><br><span class="line"><span class="variable">$student</span>[<span class="string">&quot;sex&quot;</span>] = <span class="string">&quot;male&quot;</span>;</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&quot;&lt;br&gt;&quot;</span>);</span><br><span class="line">print_r(<span class="variable">$student</span>[<span class="string">&quot;age&quot;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>array()</code>也能这么用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;name&quot;</span>=&gt;<span class="string">&quot;周睿&quot;</span>,</span><br><span class="line"><span class="string">&quot;age&quot;</span>=&gt;<span class="string">&quot;20&quot;</span>,</span><br><span class="line"><span class="string">&quot;sex&quot;</span>=&gt;<span class="string">&quot;male&quot;</span></span><br><span class="line">);</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Array ( [name] =&gt; 周睿 [age] =&gt; 20 [sex] =&gt; male )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">print_r(<span class="variable">$student</span>[<span class="string">&quot;age&quot;</span>]);<span class="comment">//20</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然数组也属于基本类型之一，所以我们甚至可以在数组中再次嵌套数组  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$student</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="number">0</span>=&gt;<span class="keyword">array</span>(<span class="string">&#x27;周睿&#x27;</span>,<span class="string">&quot;20&quot;</span>,<span class="string">&quot;male&quot;</span>),</span><br><span class="line"><span class="string">&quot;age&quot;</span>=&gt;<span class="number">20</span></span><br><span class="line">);</span><br><span class="line">print_r(<span class="variable">$student</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Array ( [0] =&gt; Array ( [0] =&gt; 周睿 [1] =&gt; 20 [2] =&gt; male ) [age] =&gt; 20 )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">print_r(<span class="variable">$student</span>[<span class="string">&quot;age&quot;</span>]);<span class="comment">//20</span></span><br><span class="line">print_r(<span class="variable">$student</span>[<span class="number">0</span>][<span class="number">0</span>]);<span class="comment">//周睿</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="数组的遍历"><a href="#数组的遍历" class="headerlink" title="数组的遍历"></a>数组的遍历</h4><p>朴实无华的遍历</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=<span class="number">10</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$i</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1,2,3,4,5,6,7,8,9,10</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>count(数组变量)</code>可以返回数组的长度,并且可以获取多维数组的元素个数,所以可以写成这样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$array</span> = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;=count(<span class="variable">$array</span>);<span class="variable">$i</span>++)&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$i</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//1,2,3,4,5,6,7,8,9,10</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="预定义超全局变量数组"><a href="#预定义超全局变量数组" class="headerlink" title="预定义超全局变量数组"></a>预定义超全局变量数组</h4><p><strong>预定义</strong>:已经定义好的存在变量，存放的数据类型时数组<br><strong>超全局</strong>:作用域为全局变量<br>以下是几个预定义超全局数组变量  </p><blockquote><p>1.<strong><code>$_SERVER</code></strong> 是一个包含诸如头部信息，路径和脚本位置的数组<br>2.<strong><code>$_ENV</code></strong> 数组中的内容是在PHP解析器运行时，从PHP所在服务器中环境变量转变为PHP全局变量<br>3.<strong><code>$_GET</code></strong> 数组也是超全局变量数组，通过Url Get 方法传递的变量组成数组，它属于外部变量，即在服务器页面中通过<code>$_GET</code>超全局数组Url 或表单GET方式传递过来的参数<br>4.<strong><code>$_POST</code></strong> 数组是通过HTTP POST方法传递的变量组成数组<code>$_POST</code>和<code>$_GET</code>数组之一都可以保存表单提交的变量<br>5.<strong><code>$_REQUEST</code></strong> 包含<code>$_GET</code>,<code>$_POST</code>和<code>$_COOKIE</code>中全部内容 如果表单时通过form 的post 提交的就通过$_POST 获取，通过GET方式发送就用<code>$_GET</code>方式获取。<code>$_REQUEST</code>不用关注是POST 或者GET ，即<code>$_REQUEST</code>可以获取get 或post的数据但是速度慢<br>6.<strong><code>$_FILES</code></strong>,在使用表单file输入域上传文件时，必须使用post方式提交但在服务器端不能通过<code>$_post</code>文件获取而是通过<code>$_FILES</code>来获取<code>$_FILES</code>是一个二维数组，包含5个子元素。<br>7.<strong><code>$_COOKIE</code></strong> 超全局数组是经HTTP cookies方法提交至脚本变量，通过这些cookies 是由以前执行的PHP脚本通过<code>setCookie()</code>函数设置到客户端的浏览器，php脚本从客户端获取cookie后将会自动转换成一个变量，可以通过<code>$_COOKIE</code>超全局数组和cookies的名称来存取指定cookie值。<br>8.<strong><code>$_SESSION session</code></strong> 变量会话控制是在服务端使用session跟踪用户，当服务端页面中使用<code>session_start()</code>函数开启session后，就可以使用<code>$_SESSION</code>数组主机全局变量。<br>9.<strong><code>$GLOBALS</code></strong> 是由所以定义的全局变量组成的数组，变量名就是该数组的索引，在所有脚本中都有效，在函数或对象中的方法中不需要使用关键字<code>global</code>访问，在函数外部声明全局变量，可以使用<code>$_GLOBALS</code>数组替代<code>global</code>关键字</p></blockquote><h4 id="处理数组的相关函数"><a href="#处理数组的相关函数" class="headerlink" title="处理数组的相关函数"></a>处理数组的相关函数</h4><p>这里只举个例子，具体见<a href="https://www.w3school.com.cn/php/php_ref_array.asp">数组的相关函数</a><br><code>array_count_values()</code>:统计数组中的所有值出现的次数,本函数返回一个数组，其元素的键名是原数组的值，键值是该值在原数组中出现的次数。 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">array</span>(<span class="string">&quot;A&quot;</span>,<span class="string">&quot;Cat&quot;</span>,<span class="string">&quot;Dog&quot;</span>,<span class="string">&quot;A&quot;</span>,<span class="string">&quot;Dog&quot;</span>);</span><br><span class="line">print_r(array_count_values(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">Array ( [A] =&gt; 2 [Cat] =&gt; 1 [Dog] =&gt; 2 )</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>array_key_exists()</code>:检查指定的<strong>键名</strong>是否存在于数组中,对键是区分大小写的  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&#x27;A&#x27;</span> =&gt; <span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;B&#x27;</span> =&gt; <span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">var_dump(array_key_exists(<span class="string">&#x27;A&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(array_key_exists(<span class="string">&#x27;a&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>array_search()</code>:搜索数组中给定的值并返回键名,同样区分大小写 </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(<span class="string">&#x27;A&#x27;</span> =&gt; <span class="string">&#x27;a&#x27;</span>,<span class="string">&#x27;B&#x27;</span> =&gt; <span class="string">&#x27;b&#x27;</span>);</span><br><span class="line">var_dump(array_search(<span class="string">&#x27;A&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//string &#x27;A&#x27; </span></span><br><span class="line">var_dump(array_search(<span class="string">&#x27;a&#x27;</span>,<span class="variable">$a</span>));<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果第三个参数 strict 被指定为 true，则只有在数据类型和值都一致时才返回相应元素的键名  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>=&gt;<span class="string">&quot;5&quot;</span>,<span class="string">&quot;b&quot;</span>=&gt;<span class="number">5</span>,<span class="string">&quot;c&quot;</span>=&gt;<span class="string">&quot;5&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> array_search(<span class="number">5</span>,<span class="variable">$a</span>,<span class="literal">true</span>);<span class="comment">//b</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果没有加第三个参数，则会将第一次出现该字符串的键返回</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">array</span>(<span class="string">&quot;a&quot;</span>=&gt;<span class="string">&quot;5&quot;</span>,<span class="string">&quot;b&quot;</span>=&gt;<span class="number">5</span>,<span class="string">&quot;c&quot;</span>=&gt;<span class="string">&quot;5&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> array_search(<span class="number">5</span>,<span class="variable">$a</span>);<span class="comment">//a</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>count()</code>函数返回数组中元素的数目</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line"><span class="keyword">echo</span> count(<span class="variable">$cars</span>);<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>in_array()</code>函数搜索数组中是否存在指定的值,同样区分大小写</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$cars</span>=<span class="keyword">array</span>(<span class="string">&quot;Volvo&quot;</span>,<span class="string">&quot;BMW&quot;</span>,<span class="string">&quot;Toyota&quot;</span>);</span><br><span class="line">var_dump(in_array(<span class="string">&quot;BMW&quot;</span>,<span class="variable">$cars</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(in_array(<span class="string">&quot;bmw&quot;</span>,<span class="variable">$cars</span>));<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>list()</code>函数用于在一次操作中给一组变量赋值,</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$listA</span> = <span class="keyword">array</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="keyword">list</span>(<span class="variable">$a</span>,<span class="variable">$b</span>,<span class="variable">$c</span>) = <span class="variable">$listA</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;<span class="comment">//1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;<span class="comment">//2</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$c</span>;<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>sort()</code>函数对索引数组进行升序排序,注意该函数会<strong>对原有的数组进行修改</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&#x27;zr&#x27;</span>=&gt;<span class="number">70</span>,</span><br><span class="line"><span class="string">&#x27;zs&#x27;</span>=&gt;<span class="number">60</span>,</span><br><span class="line"><span class="string">&#x27;cxy&#x27;</span>=&gt;<span class="number">80</span>,</span><br><span class="line">);</span><br><span class="line">asort(<span class="variable">$a</span>);</span><br><span class="line">print_r(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">/*Array ( [zs] =&gt; 60 [zr] =&gt; 70 [cxy] =&gt; 80 )*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h3><p>详细见<a href="php%E9%AB%98%E7%BA%A7.md">面向对象</a></p><h3 id="resouce"><a href="#resouce" class="headerlink" title="resouce"></a>resouce</h3><p>以后再补</p><h3 id="NULL"><a href="#NULL" class="headerlink" title="NULL"></a>NULL</h3><p>以下为null情况</p><blockquote><p>1.null表示一个字符串没有值，表示空<br>2.将变量直接赋值为null<br>3.声明的变量尚未被赋值<br>4.被unset函数销毁的变量 </p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="comment">//未赋值</span></span><br><span class="line">var_dump(<span class="variable">$a</span>)<span class="comment">//null</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//被销毁</span></span><br><span class="line">    <span class="keyword">var</span> <span class="variable">$b</span> = <span class="number">1111</span>;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$b</span>);</span><br><span class="line">    var_dump(<span class="variable">$b</span>)<span class="comment">//null</span></span><br><span class="line">    <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="变量的相互转换"><a href="#变量的相互转换" class="headerlink" title="变量的相互转换"></a>变量的相互转换</h2><h3 id="自动类型转换"><a href="#自动类型转换" class="headerlink" title="自动类型转换"></a>自动类型转换</h3><p>php中的自动类型转换遵从以下转换</p><blockquote><p>1.有布尔值参与运算时，true将转换为整型1，false将转换为0<br>2.有null值参与运算时，null值转换为整型0后再进行运算<br>3.有int类型和float类型参与运算时，先把int类型转换为float类型之后在进行运算   </p></blockquote><p>当然这些都是程序运行中不太可控的一部分，所以写代码时也不要涉及</p><h3 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h3><p>在要转换的变量之前加上括号括起来目标类型<br>注意强制转换并不会改变原本变量的类型</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = (<span class="keyword">int</span>)<span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;<span class="comment">//0</span></span><br><span class="line">var_dump(<span class="variable">$b</span>);<span class="comment">//int 0</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="变量的范围"><a href="#变量的范围" class="headerlink" title="变量的范围"></a>变量的范围</h3><h4 id="局部变量"><a href="#局部变量" class="headerlink" title="局部变量"></a>局部变量</h4><p>局部变量也成为内部变量。局部变量是在函数内定义的，其作用域仅限于函数内部  </p><h4 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h4><p>全局变量也称为外部变量，是在函数外边定义，它的作用域是从变量定义处开始到程序结束<br>在php函数中无法使用全局变量，如果想用必须使用<code>global</code>来声明变量  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&quot;MY_NAME&quot;</span>,<span class="string">&quot;ZR&quot;</span>);</span><br><span class="line"><span class="variable">$i</span> = <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> MY_NAME;<span class="comment">//ZR</span></span><br><span class="line"><span class="keyword">global</span> <span class="variable">$i</span>;<span class="comment">//要用global关键字来修饰才能在函数内部使用全局变量</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>;<span class="comment">//10</span></span><br><span class="line">&#125;</span><br><span class="line">test();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h4 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h4><p>用<code>static</code>修饰的变量叫做静态变量<br>静态变量在函数执行完之后不会立刻消失，当再次调用函数时，静态变量的值会依然存在，并且是在第一次执行函数的时候初始化完成的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">static</span> <span class="variable">$a</span> = <span class="number">10</span>;<span class="comment">//仅仅在第一次执行的时候赋值</span></span><br><span class="line"><span class="comment">//再次调用则不会重新赋值</span></span><br><span class="line">++<span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line">test();<span class="comment">//11</span></span><br><span class="line">test();<span class="comment">//12</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>常量是一个简单的标识符，在php脚本运行期间一个常量一旦被定义，就不能被取消或者改变，常量的作用域时全局，而且常量只能包括bool,int,float,和String类型的数据</p><h3 id="定义和使用"><a href="#定义和使用" class="headerlink" title="定义和使用"></a>定义和使用</h3><p>常量名称的定义和变量的定义相同，只能包含字母数字下划线，并且只能用下划线和字母开头<br>常量一般也是用大写字母来表示<br>以下是几种定义方法  </p><blockquote><p><code>define(常量名称,常量值)</code><br><code>define(&#39;常量名称&#39;,常量值)</code><br><code>define(&quot;常量名称&quot;,常量值)</code></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">define(<span class="string">&#x27;MY_NAME&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> MY_NAME;<span class="comment">//周睿</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="常量和变量的区别"><a href="#常量和变量的区别" class="headerlink" title="常量和变量的区别"></a>常量和变量的区别</h3><blockquote><p>1.常量前面没有 <code>$</code> 符号<br>2.常量只能用<code>define()</code>定义，不能通过赋值语句<br>3.常量可以不用理会变量范围的规则而在任何地方定义使用<br>4.常量被定义后就不能重新定义或者取消定义<br>5.常量只能包括bool,int,float,和String类型的数据  </p></blockquote><h3 id="预定义常量"><a href="#预定义常量" class="headerlink" title="预定义常量"></a>预定义常量</h3><p>预定义常量就是php内核已经定义好的常量<br>预定义常量是不区分大小写的，而自己定义的常量是区分大小写的<br>其中有的预定义常量是以<code>__</code>开头的,这些预定义常量又被称为<strong>魔术常量</strong>  </p><blockquote><p><strong>__LINE__</strong> :文件中的当前行号<br><strong>__FILE__</strong> :文件的完整路径和文件名。如果用在被包含文件中，则返回被包含的文件名<br><strong>__DIR__</strong>:文件所在的目录。如果用在被包括文件中，则返回被包括的文件所在的目录。它等价于 dirname(__FILE__)。除非是根目录，否则目录中名不包括末尾的斜杠<br><strong>__FUNCTION__</strong>:当前函数的名称。匿名函数则为 {closure}。<br><strong>__CLASS__</strong>:当前类的名称。类名包括其被声明的作用区域（例如 Foo\Bar）。注意自 PHP 5.4 起 __CLASS__ 对 trait 也起作用。当用在 trait 方法中时，__CLASS__ 是调用 trait 方法的类的名字<br><strong>__TRAIT__</strong>:Trait 的名字。Trait 名包括其被声明的作用区域（例如 Foo\Bar）<br><strong>__METHOD__</strong>:类的方法名<br><strong>__NAMESPACE__</strong>:当前命名空间的名称  </p></blockquote><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><h3 id="算数运算符"><a href="#算数运算符" class="headerlink" title="算数运算符"></a>算数运算符</h3><p>加号<code>+</code>,表示正常地相加就是了..</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> + <span class="variable">$b</span>;<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>减号<code>-</code>,既可以表示取反也可以表示相减<br>对变量取反并不会影响到变量本身</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$c</span> = -<span class="variable">$a</span>;<span class="comment">//减号在这里就是表示取反</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> - <span class="variable">$b</span>;<span class="comment">//-1</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>-<span class="variable">$c</span>;<span class="comment">//2</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>乘号<code>*</code>,用于表示相乘</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> * <span class="variable">$b</span>;<span class="comment">//2</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>除号<code>/</code>,表示相除,<strong>注意被除数不能为0</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">4</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> / <span class="variable">$b</span>;<span class="comment">//2</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>取模<code>%</code>,用于取余数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">4</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> % <span class="variable">$b</span>;<span class="comment">//0</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span> % <span class="variable">$c</span>;<span class="comment">//1</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>连加<code>++</code>,连加可以分为<strong>前连加</strong>和<strong>后连加</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">前连加：先进行运算再返回值</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">echo</span> ++<span class="variable">$a</span>;<span class="comment">//5</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">后连加：先返回值再进行运算</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>++;<span class="comment">//4</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="字符串运算符"><a href="#字符串运算符" class="headerlink" title="字符串运算符"></a>字符串运算符</h3><p>php中的字符串运算符只有一个英文的句号 <code>·</code> ,也叫连接运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;zr&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="variable">$b</span>;<span class="comment">//周睿zr</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h3><p>赋值运算符 <code>=</code> ，用于赋值,左边的操作数必须是变量，右边可以是一个表达式，也可以是一个值，一个变量等等</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h3><p>对操作数进行比较，返回<code>true</code>或者<code>false</code>  </p><p><code>==</code>用于判断值是否相同</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">1</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span> == <span class="variable">$b</span>);<span class="comment">//boolen true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>===</code>用于判断值和类型是否相同</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span> === <span class="variable">$b</span>);<span class="comment">//boolean false</span></span><br><span class="line">var_dump(<span class="variable">$b</span> === <span class="variable">$c</span>);<span class="comment">//boolean true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>!=</code>用于判断两边的值是否不相等，如果相等返回<code>false</code>，不相等返回<code>true</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="number">1</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span> != <span class="variable">$b</span>);<span class="comment">//boolean true</span></span><br><span class="line">var_dump(<span class="variable">$a</span> != <span class="variable">$c</span>);<span class="comment">//boolean false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>!==</code>用于判断两边的值和类型是否不相等，如果相等返回<code>false</code>，不相等返回<code>true</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">1</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="number">2</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$a</span> !== <span class="variable">$b</span>);<span class="comment">//boolean true</span></span><br><span class="line">var_dump(<span class="variable">$a</span> !== <span class="variable">$c</span>);<span class="comment">//boolean true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><code>&gt;</code>大于<br><code>&lt;</code>小于<br><code>&lt;=</code>小于等于<br><code>&gt;=</code>大于等于<br>和上面的判断大同小异，就不浪费时间举例子了</p></blockquote><h3 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h3><p>对表达式进行逻辑运算，参与运算的表达式是<strong>布尔类型</strong>，所以得到的结果也是<strong>布尔类型</strong><br>其中<code>true</code>和<code>false</code>可以用<code>1</code>和<code>0</code>,<strong>空字符串</strong>，<strong>空数组</strong>等来代替运算，具体可以看<a href="#bool%E7%B1%BB%E5%9E%8B">自动转换</a></p><p><code>and</code>和<code>&amp;&amp;</code>都是表示<strong>逻辑与</strong>运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">一假全假，全真才真</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="literal">true</span>&amp;&amp;<span class="literal">true</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="literal">true</span>&amp;&amp;<span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="literal">false</span>&amp;&amp;<span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="number">1</span>&amp;&amp;<span class="literal">false</span>)<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>or</code>和<code>||</code>都是表示<strong>逻辑或</strong>运算符</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">一真全真，全假才假</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="literal">true</span>||<span class="literal">true</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="literal">true</span>||<span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="literal">false</span>||<span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="number">1</span>||<span class="literal">false</span>)<span class="comment">//true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>xor</code>表示<strong>逻辑异或</strong>,两边表达式的值不一样则返回<code>true</code>，两边值相等则返回<code>false</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(<span class="literal">true</span> <span class="keyword">xor</span> <span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="literal">true</span> <span class="keyword">xor</span> <span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="literal">false</span> <span class="keyword">xor</span> <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(<span class="number">1</span> <span class="keyword">xor</span> <span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(<span class="number">0</span> <span class="keyword">xor</span> <span class="literal">false</span>);<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>!</code>表示<strong>逻辑非</strong>,将原来表达式的值取反</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(!<span class="literal">true</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(!<span class="literal">false</span>);<span class="comment">//true</span></span><br><span class="line">var_dump(!<span class="number">1</span>);<span class="comment">//false</span></span><br><span class="line">var_dump(!<span class="number">0</span>);<span class="comment">//true</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h3><p>略</p><h3 id="其他运算符"><a href="#其他运算符" class="headerlink" title="其他运算符"></a>其他运算符</h3><p>三元运算符 <code>? : </code><br>格式：表达式1 ? 表达式2 : 表达式3;  </p><p>如果表达式1的值为true,那么就执行表达式2,否则就执行表达式三</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="literal">true</span> ? <span class="number">10</span> : <span class="number">20</span>;<span class="comment">//10</span></span><br><span class="line"><span class="variable">$b</span> = <span class="literal">false</span> ? <span class="number">10</span> : <span class="number">20</span>;<span class="comment">//20</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>``</code>可以把系统命令放在其中执行<br>由于会涉及到跨平台问题，所以几乎不太用  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = `ipconfig`;<span class="comment">//查看本机ip</span></span><br><span class="line">var_dump(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>@</code>屏蔽表达式用于屏蔽错误</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = `ipconfig`;</span><br><span class="line"><span class="keyword">echo</span> @<span class="variable">$a</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>=&gt;</code>暂时跳过<br><code>-&gt;</code>暂时跳过<br><code>instanceof</code>暂时跳过  </p><h3 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h3><p>详见：<a href="https://www.sojson.com/operation/php.html">https://www.sojson.com/operation/php.html</a></p><h2 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h2><p>对php代码的运行流程进行控制<br>一般来说是自上而下的执行</p><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a>if语句</h3><p><code>if(表达式)&#123;代码块&#125;</code> ，如果表达式的值为<code>true</code>,就执行后面的语句,否则就不执行</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &lt; <span class="number">60</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &gt;=<span class="number">60</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>if(表达式)&#123;代码块...&#125; else&#123;代码块...&#125;</code>,if中表达式的的值为<code>true</code>,则执行<code>if</code>后面的语句，否则就执行<code>else</code>中的语句块</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">60</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &lt; <span class="number">60</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>if(表达式)&#123;代码块...&#125; else if(表达式)&#123;代码块...&#125; else&#123;代码块...&#125;</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">80</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$a</span> &lt; <span class="number">60</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;不及格&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">elseif</span>(<span class="variable">$a</span>&gt;<span class="number">60</span>&amp;&amp;<span class="variable">$a</span>&lt;=<span class="number">90</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;良好&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;优秀&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="switch语句"><a href="#switch语句" class="headerlink" title="switch语句"></a>switch语句</h3><p><code>case</code>语句会匹配<code>switch</code>表达式中的值，如果相同就执行对应语句的代码块，如果没匹配到则执行<code>defaut</code>代码块中的值<br><code>break</code>用于中断当前循环，不要忘记使用它<br><code>switch</code>中的表达式最好使用字符串或者整型<br>如果某个<code>case</code>语句后面没有接代码块，就说明这个语句块的内容是同下  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">1</span>:</span><br><span class="line">语句块<span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">2</span>:</span><br><span class="line">语句块<span class="number">2</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> 值<span class="number">3</span>:</span><br><span class="line">语句块<span class="number">3</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">...</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">语句块n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">80</span>;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$a</span>)&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">70</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="number">70</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">80</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="number">80</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">90</span>:</span><br><span class="line"><span class="keyword">echo</span> <span class="number">90</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><h3 id="while"><a href="#while" class="headerlink" title="while"></a>while</h3><p>格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">while(表达式)&#123;</span><br><span class="line">循环体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当表达式为true,就执行循环体，每次执行完都会对while中的表达式再进行一次判断，判断其是<code>true</code>或<code>false</code>,如果为<code>true</code>就继续执行其循环体,如果为<code>false</code>就退出循环</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> (<span class="variable">$a</span> &gt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="variable">$a</span>--;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;<span class="comment">//9876543210</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="do-while"><a href="#do-while" class="headerlink" title="do while"></a>do while</h3><p>格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">do&#123;</span><br><span class="line">循环体</span><br><span class="line">&#125;while(表达式)</span><br></pre></td></tr></table></figure><p>与while循环不同的是，while循环会先进行判断再进入循环，而do while是先进入循环再进行判断,do while语句至少会执行一次</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line"><span class="variable">$a</span>--;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;<span class="keyword">while</span>(<span class="variable">$a</span>&gt;<span class="number">0</span>)</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="for"><a href="#for" class="headerlink" title="for"></a>for</h3><p>格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">for(表达式a;表达式b;表达式c)&#123;</span><br><span class="line">循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>表达式a</strong>一般用于循环变量的初始化，<strong>表达式b</strong>会放判断语句，用于判断循环是否继续进行,<strong>表达式c</strong>用于操作表达式a中定义的变量</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">9</span> ; <span class="variable">$i</span>&gt;=<span class="number">0</span> ; <span class="variable">$i</span>--)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>;<span class="comment">//9876543210</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>各类循环之间可以相互嵌套</strong></p><h2 id="特殊的循环控制语句"><a href="#特殊的循环控制语句" class="headerlink" title="特殊的循环控制语句"></a>特殊的循环控制语句</h2><h3 id="break"><a href="#break" class="headerlink" title="break"></a>break</h3><p><code>break</code>可以用于几乎所有的语句中，它的作用是可以中断循环，如果再break后接上数字，就意味着跳出几层循环。</p><h3 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h3><p><code>countinue</code>只能用在循环语句中，可以用于跳出当前循环而不是结束整个循环语句</p><h3 id="exit-语句"><a href="#exit-语句" class="headerlink" title="exit()语句"></a>exit()语句</h3><p><code>exit()</code>用于结束当前整个程序的的执行,等同于<code>die()</code>语句</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><h3 id="函数的调用和声明"><a href="#函数的调用和声明" class="headerlink" title="函数的调用和声明"></a>函数的调用和声明</h3><p>普普通通的声明和调用</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;你好&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line">test();</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//$a和$b为形参</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$a</span>+<span class="variable">$b</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> test(<span class="number">1</span>,<span class="number">2</span>);<span class="comment">//3</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><h3 id="参数的传递"><a href="#参数的传递" class="headerlink" title="参数的传递"></a>参数的传递</h3><p><strong>按值传递参数</strong></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$i</span></span>)</span>&#123;</span><br><span class="line">++<span class="variable">$i</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$i</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="number">10</span>;</span><br><span class="line">test(<span class="variable">$a</span>);<span class="comment">//11</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;<span class="comment">//10</span></span><br><span class="line"><span class="comment">//对形参的操作不会影响到实参的值</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>按引用操作参数</strong><br>用<code>&amp;</code>时传入的是变量的地址值,等同于操作实际变量本身<br><?php    function test(&$a){        echo ++$a;    }    $a = 10;    test($a);//11    echo($a);//11?><br><strong>参数默认值</strong><br>相当于给形参设立了一个默认值，在没有参数时直接使用默认值参加运算</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$a</span> = <span class="number">10</span></span>)</span>&#123;</span><br><span class="line">++<span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>);</span><br><span class="line">&#125;</span><br><span class="line">test();<span class="comment">//11</span></span><br><span class="line">test(<span class="number">20</span>)<span class="comment">//21</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>阴 间 传 参</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$a</span>,<span class="variable">$b</span> = <span class="number">10</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>+<span class="variable">$b</span>);</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">20</span>)<span class="comment">//30</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>当然这里的20时传给$a的,在搞这种阴间传参时记得遵从<strong>从右往左设置默认值</strong>这个顺序，写成如下就直接报错</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$a</span>=<span class="number">10</span>,<span class="variable">$b</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$a</span>+<span class="variable">$b</span>);</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">20</span>)<span class="comment">//出错，$b这时候实际上是没值的</span></span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p><strong>可变长度参数</strong><br>php自己提供的参数，直接拿来用就行,一共有三个,他们分别是<code>fun_get_args()</code>,<code>fun_get_arg()</code>,<code>func_num_args()</code>,<br>这三个函数可以使用在自定义函数内部，能够返回一些关于参数的信息  </p><blockquote><p><code>fun_get_args()</code>:获取所有参数并以数组的形式返回<br><code>fun_get_arg()</code>:根据下标获取对应的参数并返回<br><code>func_num_args()</code>:返回传入参数的个数</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">var_dump(func_get_args());</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=4)</span></span><br><span class="line"><span class="comment">  0 =&gt; int 1</span></span><br><span class="line"><span class="comment">  1 =&gt; int 2</span></span><br><span class="line"><span class="comment">  2 =&gt; int 3</span></span><br><span class="line"><span class="comment">  3 =&gt; int 4</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">var_dump(func_get_arg(<span class="number">2</span>));<span class="comment">//3</span></span><br><span class="line">var_dump(func_num_args());<span class="comment">//4</span></span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="可变函数（变量函数）"><a href="#可变函数（变量函数）" class="headerlink" title="可变函数（变量函数）"></a>可变函数（变量函数）</h3><p>已经不知道怎么吐槽这种写法了。。我有点没办法接受这种写法。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;我是test函数&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;test&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>();<span class="comment">//我是test函数</span></span><br><span class="line"><span class="string">&#x27;test&#x27;</span>();<span class="comment">//我是test函数</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h3><p>不停调用自己，就这样</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"><span class="variable">$n</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$n</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$n</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">test(<span class="variable">$n</span>-<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span>(<span class="string">&#x27;结束&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">test(<span class="number">3</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">运行结果为<span class="number">3210</span>结束</span><br></pre></td></tr></table></figure><h3 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h3><p>php提供了一些现成的函数给我们使用，如<code>echo()</code>,<code>unset()</code>等。<br> 还有一些函数需要开启特定的php拓展模块，否则会得到‘未定义函数’的错误</p><h2 id="日期与时间"><a href="#日期与时间" class="headerlink" title="日期与时间"></a>日期与时间</h2><p> 在php中可以使用相关函数来获取服务器的时间或日期。对日期类型的数据进行各种处理来满足程序的需要</p><h3 id="设置时区"><a href="#设置时区" class="headerlink" title="设置时区"></a>设置时区</h3><p> php默认时区未UTC<br> 可以使用方法<code>date_default_timezone_set(&#39;Asia/Shanghai&#39;);</code>来将时区设置为亚洲上海<br> <figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_set(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);<span class="comment">//设置时区</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p><h3 id="获取UNIX时间戳"><a href="#获取UNIX时间戳" class="headerlink" title="获取UNIX时间戳"></a>获取UNIX时间戳</h3><p> UNIX时间戳:从unix纪元（格林威治时间1970年1月1日00时00分00秒）开始到当前的秒数<br>可以使用<code>time()</code>方法获取</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(time());<span class="comment">//int 1621944661</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="获取指定时间的UNIX时间戳"><a href="#获取指定时间的UNIX时间戳" class="headerlink" title="获取指定时间的UNIX时间戳"></a>获取指定时间的UNIX时间戳</h3><p>可以使用<code>mktime()</code>方法来获取指定时间的时间戳  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2020</span>));</span><br><span class="line"><span class="comment">//2020年10月1日0时0分0秒时间戳为1601510400</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>也可以使用上述两种方法来计算距离某个日期的天数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_get(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span> = var_dump(mktime(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">10</span>,<span class="number">1</span>,<span class="number">2021</span>));</span><br><span class="line"><span class="comment">//2020年10月1日0时0分0秒时间戳为1601510400</span></span><br><span class="line"><span class="variable">$b</span> = time();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;距离2021年国庆节还有&#x27;</span>.((<span class="variable">$b</span>-<span class="variable">$a</span>)/<span class="number">60</span>/<span class="number">60</span>/<span class="number">24</span>).<span class="string">&#x27;天&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="从UNIX获取时间信息"><a href="#从UNIX获取时间信息" class="headerlink" title="从UNIX获取时间信息"></a>从UNIX获取时间信息</h3><p><code>date()</code>:格式化一个本地时间或日期  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_set(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> date(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>);<span class="comment">//2021-05-25 20:29:21</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="获取UNIX时间戳和微秒数"><a href="#获取UNIX时间戳和微秒数" class="headerlink" title="获取UNIX时间戳和微秒数"></a>获取UNIX时间戳和微秒数</h3><p><code>microtime()</code>:获取UNIX时间戳和微秒数    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(microtime());</span><br><span class="line"><span class="comment">//string &#x27;0.33201300 1621945933&#x27; (length=21)</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>如果传个参数为<code>true</code>，则会返回浮点类型  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(microtime(<span class="literal">true</span>));</span><br><span class="line"><span class="comment">//float 1621946057.2207</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>php可以在服务器上进行生成，创建，修改，编辑，删除等文件属性操作</p><h3 id="判断普通文件和目录（文件夹）"><a href="#判断普通文件和目录（文件夹）" class="headerlink" title="判断普通文件和目录（文件夹）"></a>判断普通文件和目录（文件夹）</h3><p><code>is_file()</code>:判定给定的文件名是否为一个正常的文件<br><code>is_dir()</code>:判断给定文件名是否是一个目录</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">var_dump(is_file(<span class="string">&#x27;../myPhp&#x27;</span>));<span class="comment">//false</span></span><br><span class="line">var_dump(is_dir(<span class="string">&#x27;../myPhp&#x27;</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(is_file(<span class="string">&#x27;../myPhp/myPhp/second.php&#x27;</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(is_dir(<span class="string">&#x27;../myPhp/myPhp/second.php&#x27;</span>));<span class="comment">//false</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文件的属性"><a href="#文件的属性" class="headerlink" title="文件的属性"></a>文件的属性</h3><p><code>file_exists()</code>:判断文件是否存在,存在返回<code>true</code>，不存在则返回<code>false</code><br><code>filesize()</code>:取得普通文件的大小(以整型返回字节数大小)<br><code>is_readable()</code>:判断文件是否可读<br><code>is_writable</code>:判断文件是否可读<br><code>fliectime()</code>:获取文件的创建时间(以时间戳形式返回)<br><code>filemtime()</code>:获取文件的修改时间(以时间戳形式返回)<br><code>fileatime()</code>:获取文件上次的访问时间<br><code>stat()</code>:获取文件大部分的属性值(对应的属性值可以查看<a href="https://www.runoob.com/php/func-filesystem-stat.html">php stat函数</a>)  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">date_default_timezone_set(<span class="string">&#x27;Asia/Shanghai&#x27;</span>);</span><br><span class="line">var_dump(file_exists(<span class="string">&#x27;../myPhp/second.php&#x27;</span>));<span class="comment">//true</span></span><br><span class="line">var_dump(filesize(<span class="string">&#x27;../myPhp/imgs/1.png&#x27;</span>));<span class="comment">//int 19179</span></span><br><span class="line"><span class="keyword">echo</span>(date(<span class="string">&#x27;Y-m-d G:i:s&#x27;</span>,filectime(<span class="string">&#x27;../myPhp/imgs/1.png&#x27;</span>)));<span class="comment">//2021-05-27 16:37:58</span></span><br><span class="line">var_dump(stat(<span class="string">&#x27;../myPhp/imgs/1.png&#x27;</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=26)</span></span><br><span class="line"><span class="comment">  0 =&gt; int 2</span></span><br><span class="line"><span class="comment">  1 =&gt; int 0</span></span><br><span class="line"><span class="comment">  2 =&gt; int 33206</span></span><br><span class="line"><span class="comment">  3 =&gt; int 1</span></span><br><span class="line"><span class="comment">  4 =&gt; int 0</span></span><br><span class="line"><span class="comment">  5 =&gt; int 0</span></span><br><span class="line"><span class="comment">  6 =&gt; int 2</span></span><br><span class="line"><span class="comment">  7 =&gt; int 19179</span></span><br><span class="line"><span class="comment">  8 =&gt; int 1622105682</span></span><br><span class="line"><span class="comment">  9 =&gt; int 1605002378</span></span><br><span class="line"><span class="comment">  10 =&gt; int 1622104678</span></span><br><span class="line"><span class="comment">  11 =&gt; int -1</span></span><br><span class="line"><span class="comment">  12 =&gt; int -1</span></span><br><span class="line"><span class="comment">  &#x27;dev&#x27; =&gt; int 2</span></span><br><span class="line"><span class="comment">  &#x27;ino&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  &#x27;mode&#x27; =&gt; int 33206</span></span><br><span class="line"><span class="comment">  &#x27;nlink&#x27; =&gt; int 1</span></span><br><span class="line"><span class="comment">  &#x27;uid&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  &#x27;gid&#x27; =&gt; int 0</span></span><br><span class="line"><span class="comment">  &#x27;rdev&#x27; =&gt; int 2</span></span><br><span class="line"><span class="comment">  &#x27;size&#x27; =&gt; int 19179</span></span><br><span class="line"><span class="comment">  &#x27;atime&#x27; =&gt; int 1622105682</span></span><br><span class="line"><span class="comment">  &#x27;mtime&#x27; =&gt; int 1605002378</span></span><br><span class="line"><span class="comment">  &#x27;ctime&#x27; =&gt; int 1622104678</span></span><br><span class="line"><span class="comment">  &#x27;blksize&#x27; =&gt; int -1</span></span><br><span class="line"><span class="comment">  &#x27;blocks&#x27; =&gt; int -1</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="目录的基本操作"><a href="#目录的基本操作" class="headerlink" title="目录的基本操作"></a>目录的基本操作</h3><p><code>basename()</code>:返回路径中的文件名部分<br><code>dirname()</code>:返回路径中的目录部分<br><code>pathinfo()</code>:返回文件路径的信息  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span>(<span class="keyword">__FILE__</span>.<span class="string">&#x27;&lt;br&gt;&#x27;</span>);<span class="comment">//C:\wamp64\www\myPhp\文件目录操作.php</span></span><br><span class="line"><span class="keyword">echo</span>(basename(<span class="keyword">__FILE__</span>));<span class="comment">//文件目录操作.php</span></span><br><span class="line">var_dump(pathinfo(<span class="keyword">__FILE__</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=4)</span></span><br><span class="line"><span class="comment">  &#x27;dirname&#x27; =&gt; string &#x27;C:\wamp64\www\myPhp&#x27; (length=19)</span></span><br><span class="line"><span class="comment">  &#x27;basename&#x27; =&gt; string &#x27;文件目录操作.php&#x27; (length=22)</span></span><br><span class="line"><span class="comment">  &#x27;extension&#x27; =&gt; string &#x27;php&#x27; (length=3)</span></span><br><span class="line"><span class="comment">  &#x27;filename&#x27; =&gt; string &#x27;文件目录操作&#x27; (length=18)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>opendir()</code>:打开目录句柄<br><code>readdir()</code>:从目录句柄中读取条目，返回目录中的下一个文件的文件名<br><code>rewinddir()</code>:倒回目录句柄<br><code>closedir()</code>:关闭目录句柄  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$dir</span> = opendir(<span class="string">&#x27;../myPhp&#x27;</span>);</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:13:string &#x27;.&#x27; (length=1)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:14:string &#x27;..&#x27; (length=2)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:15:string &#x27;font&#x27; (length=4)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:16:string &#x27;imgs&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">rewinddir(<span class="variable">$dir</span>);<span class="comment">//倒回到目录句柄</span></span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line">var_dump(readdir(<span class="variable">$dir</span>));</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:15:string &#x27;.&#x27; (length=1)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:16:string &#x27;..&#x27; (length=2)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:17:string &#x27;font&#x27; (length=4)</span></span><br><span class="line"><span class="comment">C:\wamp64\www\myPhp\文件目录操作.php:18:string &#x27;imgs&#x27; (length=4)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">closedir();<span class="comment">//关闭目录句柄，无法读取到目录句柄</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><code>mkdir()</code>:新建目录,创建成功返回<code>true</code>,创建失败返回<code>false</code>;其中的路径可以填相对路径，也可以填绝对路径;默认访问权为 <strong>0777</strong>,代表<strong>可读可写</strong>;第三个参数为选填参数，默认为<code>false</code>,表示无法创建多层文件夹。若参数为<code>true</code>,则代表可以创建多层目录<br><code>rmdir()</code>:删除指定的<strong>空目录</strong><br><code>scandir()</code>:列出指定路径中的文件和目录,返回为数组  </p><h3 id="文件的基本操作"><a href="#文件的基本操作" class="headerlink" title="文件的基本操作"></a>文件的基本操作</h3><p><code>fopen()</code>:打开文件或者url,第二个参数可以选择打开文件的方式</p><table><thead><tr><th align="center">模式</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">r</td><td align="left">只读方式打开，将文件指针指向文件头</td></tr><tr><td align="center">r+</td><td align="left">读写方式打开，将文件指针指向文件头</td></tr><tr><td align="center">w</td><td align="left">写入方式打开，清除文件内容，如果文件不存在则尝试创建之</td></tr><tr><td align="center">w+</td><td align="left">读写方式打开，清除文件内容，如果文件不存在则尝试创建之</td></tr><tr><td align="center">a</td><td align="left">写入方式打开，将文件指针指向文件末尾进行写入，如果文件不存在则尝试创建之</td></tr><tr><td align="center">a+</td><td align="left">读写方式打开，通过将文件指针指向文件末尾进行写入来保存文件内容</td></tr><tr><td align="center">x</td><td align="left">创建一个新的文件并以写入方式打开，如果文件已存在则返回 <code>FALSE</code> 和一个错误</td></tr><tr><td align="center">x+</td><td align="left">创建一个新的文件并以读写方式打开，如果文件已存在则返回 FALSE 和一个错误</td></tr></tbody></table><p><code>fread()</code>:读取文件<br><code>fgets()</code>:从文件指针中读取一行</p><h3 id="文件的上传"><a href="#文件的上传" class="headerlink" title="文件的上传"></a>文件的上传</h3><p>$_FILES数组内容如下: </p><blockquote><p>$_FILES[‘myFile’][‘name’] 客户端文件的原名称。<br>$_FILES[‘myFile’][‘type’] 文件的 MIME 类型，需要浏览器提供该信息的支持，例如”image/gif”。<br>$_FILES[‘myFile’][‘size’] 已上传文件的大小，单位为字节。<br>$_FILES[‘myFile’][‘tmp_name’] 文件被上传后在服务端储存的临时文件名，一般是系统默认。可以在php.ini的upload_tmp_dir 指定，但 用 putenv() 函数设置是不起作用的。<br>$_FILES[‘myFile’][‘error’] 和该文件上传相关的错误代码。[‘error’] 是在 PHP 4.2.0 版本中增加的。  </p></blockquote><h4 id="php的文件上传处理函数"><a href="#php的文件上传处理函数" class="headerlink" title="php的文件上传处理函数"></a>php的文件上传处理函数</h4><p>文件上传处理函数主要用于上传文件的后续处理<br><code>is_uploaded_file()</code>:判断指定的文件是否通过HTTP POST上传的<br><code>move_uploaded_file()</code>:文件上传后，首先会存储于服务器的临时目录中，可以使用    该函数上传的文件移动到新位置。文件被上传结束后，默认地被存储在了临时目录中，这时您必须将它从临时目录中删除或移动到其它地方，如果没有，则会被删除。也就是不管是否上传成功，脚本执行完后临时目录里的文件肯定会被删除。所以在删除之前要用PHP的 <code>copy()</code> 函数将它复制到其它位置，此时，才算完成了上传文件过程    </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;submit&#x27;</span>]))&#123;</span><br><span class="line">    <span class="comment">//判断上传的文件是否存在(文件通过submit上传)</span></span><br><span class="line">    <span class="keyword">if</span>(is_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&#x27;myfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>]))&#123;</span><br><span class="line">        <span class="comment">//如果存在则判断文件是否通过http post上传（安全性）</span></span><br><span class="line">        <span class="variable">$arr</span> = pathinfo(<span class="variable">$_FILES</span>[<span class="string">&#x27;myfile&#x27;</span>][<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line">        <span class="comment">//获取原本文件的扩展名</span></span><br><span class="line">        <span class="variable">$newName</span> = date(<span class="string">&#x27;Ymdhis&#x27;</span>).rand(<span class="number">1000</span>,<span class="number">9099</span>);</span><br><span class="line">        <span class="comment">//防止文件名字重复添加文件的拓展名</span></span><br><span class="line">        var_dump(move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&#x27;myfile&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>],<span class="string">&#x27;a&#x27;</span>.<span class="variable">$newName</span>.<span class="string">&#x27;.&#x27;</span>.<span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>]));</span><br><span class="line">        <span class="comment">//如果文件存在且通过post上传,则将该文件移动到当前文件中（也可以指定路径）并命名为a</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">&#x27;存在安全问题&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>html代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>上传页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;上传.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;myfile&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="文件的下载"><a href="#文件的下载" class="headerlink" title="文件的下载"></a>文件的下载</h3><p>文件的下载一共分为四步<br>1.发送指定的MIME类型的头信息<br>2.指定下载文件的描述<br>3.指定下载文件的大小<br>4.读取文件内容至输出缓冲区  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span> = <span class="string">&#x27;1.rar&#x27;</span>;</span><br><span class="line"><span class="variable">$finfo</span> =  finfo_open(FILEINFO_MIME_TYPE);</span><br><span class="line"><span class="comment">//创建一个 fileinfo 资源</span></span><br><span class="line"><span class="variable">$mimeType</span> = finfo_file(<span class="variable">$finfo</span>,<span class="variable">$file</span>);</span><br><span class="line"><span class="comment">//传入文件的finfo类型和文件的后缀名，获取文件的mime类型</span></span><br><span class="line">finfo_close(<span class="variable">$finfo</span>);</span><br><span class="line"><span class="comment">//关闭finfo流</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:&#x27;</span>.<span class="variable">$mimeType</span>);</span><br><span class="line">header(<span class="string">&#x27;Content-Disposition:attachment;filename=&#x27;</span>.basename(<span class="variable">$file</span>));</span><br><span class="line"><span class="comment">//指定下载文件的描述</span></span><br><span class="line">header(<span class="string">&#x27;Content-length:&#x27;</span>.filesize(<span class="variable">$file</span>));</span><br><span class="line"><span class="comment">//获取文件的大小  </span></span><br><span class="line">readfile(<span class="variable">$file</span>);</span><br><span class="line"><span class="comment">//读取文件内容输出至缓冲区</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h2 id="COOKIE"><a href="#COOKIE" class="headerlink" title="COOKIE"></a>COOKIE</h2><p>Cookie，有时也用其复数形式 Cookies。类型为“小型文本文件”，是某些网站为了辨别用户身份，进行Session跟踪而储存在用户本地终端上的数据（通常经过加密），由用户客户端计算机暂时或永久保存的信息<br>在php中cookie是存在当前目录中，如果要使用<code>setcookie()</code>删除某一个cookie，需要保证cookie的路径一致<br><code>setcookie()</code>:向客户端中设置cookie，具体参数可见<a href="https://www.w3school.com.cn/php/func_http_setcookie.asp">setcookie()函数详解</a><br><code>$_COOKIE</code>:在服务端上读取cookie的内容<br><code>setcookie(&quot;member&quot;,time()-1)</code>:删除cookie  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>,time()+<span class="number">3600</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;age&#x27;</span>,<span class="string">&#x27;12&#x27;</span>,time()+<span class="number">3600</span>);</span><br><span class="line"><span class="comment">//设置两个个cookie，有效时间为1小时</span></span><br><span class="line">var_dump(<span class="variable">$_COOKIE</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=2)</span></span><br><span class="line"><span class="comment">  &#x27;name&#x27; =&gt; string &#x27;周睿&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  &#x27;age&#x27; =&gt; string &#x27;周睿&#x27; (length=6)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然cookie也可以通过多维数组来设置  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;person[name]&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>,time()+<span class="number">3600</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;person[age]&#x27;</span>,<span class="string">&#x27;19&#x27;</span>,time()+<span class="number">3600</span>);</span><br><span class="line"><span class="comment">//设置两个cookie，有效时间为1小时</span></span><br><span class="line">var_dump(<span class="variable">$_COOKIE</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>删除cookie则是<code>setcookie()</code>方法的另一种运用方式  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;person[name]&#x27;</span>,<span class="string">&#x27;周睿&#x27;</span>,time()-<span class="number">100</span>);</span><br><span class="line">setcookie(<span class="string">&#x27;person[age]&#x27;</span>,<span class="string">&#x27;19&#x27;</span>,time()-<span class="number">100</span>);</span><br><span class="line"><span class="comment">//删除cookie，利用setcookie()直接将原本的cookie过期</span></span><br><span class="line">var_dump(<span class="variable">$_COOKIE</span>); </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>当然这里也可以使用循环来一次性清空所有的cookie</p><h2 id="SESSION"><a href="#SESSION" class="headerlink" title="SESSION"></a>SESSION</h2><p>Session：在计算机中，尤其是在网络应用中，称为“会话控制”。Session对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的Web页之间跳转时，存储在Session对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当用户请求来自应用程序的 Web页时，如果该用户还没有会话，则Web服务器将自动创建一个 Session对象。当会话过期或被放弃后，服务器将终止该会话。<br><code>session_start()</code>:开启一个会话,或返回已经存在的对话<br><code>session_unset()</code>:会释放当前会话注册的所有会话变量<br><code>session_destroy()</code>:销毁session中的所有数据  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;周睿&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;age&#x27;</span>] = <span class="number">12</span>;</span><br><span class="line">session_unset();</span><br><span class="line">session_destroy();</span><br><span class="line">var_dump(<span class="variable">$_SESSION</span>);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">array (size=2)</span></span><br><span class="line"><span class="comment">  &#x27;name&#x27; =&gt; string &#x27;周睿&#x27; (length=6)</span></span><br><span class="line"><span class="comment">  &#x27;age&#x27; =&gt; int 12</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">var_dump(<span class="variable">$_COOKIE</span>);<span class="comment">//查看sessionId</span></span><br><span class="line"><span class="comment">/*&#x27;PHPSESSID&#x27; =&gt; string &#x27;7odiitrhvpdu0f44ai2eajo4ps&#x27; (length=26)*/</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;初入php&quot;&gt;&lt;a href=&quot;#初入php&quot; class=&quot;headerlink&quot; title=&quot;初入php&quot;&gt;&lt;/a&gt;初入php&lt;/h2&gt;&lt;p&gt;php代码可以嵌入到html代码中的任何位置，并且可以嵌入任意多个&lt;br&gt;php语言标记为&lt;code&gt;&amp;lt;?ph</summary>
      
    
    
    
    
    <category term="php" scheme="http://example.com/tags/php/"/>
    
  </entry>
  
</feed>
